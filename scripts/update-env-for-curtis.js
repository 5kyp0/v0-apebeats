#!/usr/bin/env node

/**
 * Update environment configuration for Curtis Testnet
 */

const fs = require('fs');
const path = require('path');

const envPath = path.join(process.cwd(), '.env.local');
const backupPath = path.join(process.cwd(), '.env.local.backup');

// Curtis Testnet configuration
const curtisConfig = `
# ApeBeats Genesis - Curtis Testnet Configuration
# Updated for testing and debugging

# ===========================================
# CURTIS TESTNET CONFIGURATION
# ===========================================
NEXT_PUBLIC_CHAIN_ID=33111
NEXT_PUBLIC_RPC_URL=https://curtis.rpc.caldera.xyz/http
NEXT_PUBLIC_EXPLORER_URL=https://explorer.curtis.apechain.xyz

# Keep existing Alchemy API key for blockchain data
NEXT_PUBLIC_ALCHEMY_API_KEY=qMIdjkmmX8yFcLvr6Ku2BnL-M9A2lFSd

# Required for wallet connection and NFT functionality  
NEXT_PUBLIC_THIRDWEB_CLIENT_ID=89e785797855746c0422dcd02e870470

# ===========================================
# CONTRACT ADDRESSES (Will be filled after deployment)
# ===========================================
NEXT_PUBLIC_APEBEATS_GENESIS_ADDRESS=
NEXT_PUBLIC_APEBEATS_METADATA_LIB_ADDRESS=
NEXT_PUBLIC_APEBEATS_ROYALTIES_ADDRESS=

# ===========================================
# MERKLE ROOTS (Generated by merkle script)
# ===========================================
NEXT_PUBLIC_GTD_MERKLE_ROOT=
NEXT_PUBLIC_FCFS_MERKLE_ROOT=

# ===========================================
# WALLET ADDRESSES (Update with your addresses)
# ===========================================
NEXT_PUBLIC_TREASURY_ADDRESS=
NEXT_PUBLIC_FOUNDER_ADDRESS=

# ===========================================
# DELEGATE.XYZ INTEGRATION
# ===========================================
NEXT_PUBLIC_DELEGATE_REGISTRY=0x00000000000000447e69651d841bD8D104Bed493

# ===========================================
# NFT CONFIGURATION
# ===========================================
NEXT_PUBLIC_NFT_CONTRACT_ADDRESS=
NEXT_PUBLIC_ENABLE_NFT_SNAPSHOTS=true
NEXT_PUBLIC_AUTO_MINT_NFTS=false

# ===========================================
# STORAGE CONFIGURATION
# ===========================================
NEXT_PUBLIC_STORAGE_PROVIDER=ipfs
NEXT_PUBLIC_PIN_TO_IPFS=true
NEXT_PUBLIC_IPFS_GATEWAY=https://ipfs.io/ipfs/
NEXT_PUBLIC_ARWEAVE_GATEWAY=https://arweave.net/

# ===========================================
# MUSIC ENGINE CONFIGURATION
# ===========================================
NEXT_PUBLIC_MUSIC_ENGINE_ENABLED=true
NEXT_PUBLIC_STREAMING_ENGINE_ENABLED=true
NEXT_PUBLIC_DEFAULT_MUSIC_STYLE=LoFi
NEXT_PUBLIC_DEFAULT_MUSIC_DURATION=30

# ===========================================
# TESTING CONFIGURATION
# ===========================================
NODE_ENV=development
NEXT_PUBLIC_DEBUG_MODE=true
NEXT_PUBLIC_TEST_MODE=true
`;

function updateEnvironment() {
  console.log('üîÑ Updating environment configuration for Curtis Testnet...');
  
  // Create backup
  if (fs.existsSync(envPath)) {
    fs.copyFileSync(envPath, backupPath);
    console.log('‚úÖ Created backup at .env.local.backup');
  }
  
  // Write new configuration
  fs.writeFileSync(envPath, curtisConfig.trim());
  console.log('‚úÖ Updated .env.local for Curtis Testnet');
  
  console.log('\nüìã Next steps:');
  console.log('1. Add your PRIVATE_KEY to .env.local');
  console.log('2. Add your wallet addresses (TREASURY_ADDRESS, FOUNDER_ADDRESS)');
  console.log('3. Run: pnpm run deploy (to deploy contracts)');
  console.log('4. Run: pnpm run test:all (to test everything)');
  
  console.log('\n‚ö†Ô∏è  Important:');
  console.log('- Never commit your private key to version control');
  console.log('- Get testnet APE tokens from Curtis Testnet faucet');
  console.log('- Verify all addresses before deployment');
}

if (require.main === module) {
  updateEnvironment();
}

module.exports = { updateEnvironment };
