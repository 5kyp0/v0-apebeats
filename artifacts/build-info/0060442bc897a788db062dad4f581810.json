{"id":"0060442bc897a788db062dad4f581810","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981Upgradeable is Initializable, IERC2981, ERC165Upgradeable {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC2981\n    struct ERC2981Storage {\n        RoyaltyInfo _defaultRoyaltyInfo;\n        mapping(uint256 tokenId => RoyaltyInfo) _tokenRoyaltyInfo;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC2981\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC2981StorageLocation = 0xdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b00;\n\n    function _getERC2981Storage() private pure returns (ERC2981Storage storage $) {\n        assembly {\n            $.slot := ERC2981StorageLocation\n        }\n    }\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    function __ERC2981_init() internal onlyInitializing {\n    }\n\n    function __ERC2981_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165Upgradeable) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC2981\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) public view virtual returns (address receiver, uint256 amount) {\n        ERC2981Storage storage $ = _getERC2981Storage();\n        RoyaltyInfo storage _royaltyInfo = $._tokenRoyaltyInfo[tokenId];\n        address royaltyReceiver = _royaltyInfo.receiver;\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\n\n        if (royaltyReceiver == address(0)) {\n            royaltyReceiver = $._defaultRoyaltyInfo.receiver;\n            royaltyFraction = $._defaultRoyaltyInfo.royaltyFraction;\n        }\n\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\n\n        return (royaltyReceiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        ERC2981Storage storage $ = _getERC2981Storage();\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        $._defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        ERC2981Storage storage $ = _getERC2981Storage();\n        delete $._defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        ERC2981Storage storage $ = _getERC2981Storage();\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        $._tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        ERC2981Storage storage $ = _getERC2981Storage();\n        delete $._tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\n    struct ERC721Storage {\n        // Token name\n        string _name;\n\n        // Token symbol\n        string _symbol;\n\n        mapping(uint256 tokenId => address) _owners;\n\n        mapping(address owner => uint256) _balances;\n\n        mapping(uint256 tokenId => address) _tokenApprovals;\n\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\n\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\n        assembly {\n            $.slot := ERC721StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC721Storage storage $ = _getERC721Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return $._balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        unchecked {\n            $._balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                $._balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                $._balances[to] += 1;\n            }\n        }\n\n        $._owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        $._tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721Royalty.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721Upgradeable} from \"../ERC721Upgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC2981Upgradeable} from \"../../common/ERC2981Upgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n * information.\n *\n * Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually\n * for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC721RoyaltyUpgradeable is Initializable, ERC2981Upgradeable, ERC721Upgradeable {\n    function __ERC721Royalty_init() internal onlyInitializing {\n    }\n\n    function __ERC721Royalty_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, ERC2981Upgradeable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\n\npragma solidity >=0.4.11;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC2981.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.22;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     * See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    string internal constant _TABLE_URL = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE, true);\n    }\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64Url `string` representation.\n     * Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648].\n     */\n    function encodeURL(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE_URL, false);\n    }\n\n    /**\n     * @dev Internal table-agnostic conversion\n     */\n    function _encode(bytes memory data, string memory table, bool withPadding) private pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // If padding is enabled, the final length should be `bytes` data length divided by 3 rounded up and then\n        // multiplied by 4 so that it leaves room for padding the last chunk\n        // - `data.length + 2`  -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // - `4 *`              -> 4 characters for each chunk\n        // This is equivalent to: 4 * Math.ceil(data.length / 3)\n        //\n        // If padding is disabled, the final length should be `bytes` data length multiplied by 4/3 rounded up as\n        // opposed to when padding is required to fill the last chunk.\n        // - `4 * data.length`  -> 4 characters for each chunk\n        // - ` + 2`             -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // This is equivalent to: Math.ceil((4 * data.length) / 3)\n        uint256 resultLength = withPadding ? 4 * ((data.length + 2) / 3) : (4 * data.length + 2) / 3;\n\n        string memory result = new string(resultLength);\n\n        assembly (\"memory-safe\") {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {} {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            if withPadding {\n                // When data `bytes` is not exactly 3 bytes long\n                // it is padded with `=` characters at the end\n                switch mod(mload(data), 3)\n                case 1 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                    mstore8(sub(resultPtr, 2), 0x3d)\n                }\n                case 2 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                }\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? efficientKeccak256(a, b) : efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function efficientKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/ApeBeatsGenesis.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"./ApeBeatsMetadataLib.sol\";\nimport \"./ApeBeatsRoyalties.sol\";\n\n// Delegate.xyz registry interface\ninterface IDelegateRegistry {\n    function checkDelegateForAll(address delegate, address vault) external view returns (bool);\n}\n\ncontract ApeBeatsGenesis is Initializable, ERC721Upgradeable, ERC721RoyaltyUpgradeable, OwnableUpgradeable, ReentrancyGuardUpgradeable {\n    using Strings for uint256;\n\n    // Constants\n    uint256 public constant TOTAL_SUPPLY = 420;\n    uint256 public constant FOUNDER_MINT_AMOUNT = 4;\n    uint256 public constant GTD_MINT_AMOUNT = 42;\n    uint256 public constant GTD_PRICE = 4.2 ether;\n    uint256 public constant FCFS_PRICE = 6.9 ether;\n    uint256 public constant PUBLIC_PRICE = 6.9 ether;\n    uint256 public constant GTD_MAX_PER_WALLET = 1;\n    uint256 public constant FCFS_MAX_PER_WALLET = 4;\n    uint256 public constant PUBLIC_MAX_PER_WALLET = 5;\n    uint96 public constant ROYALTY_BASIS_POINTS = 420;\n\n    // State variables\n    uint256 public totalMinted;\n    bytes32 public gtdMerkleRoot;  // Separate Merkle root for GTD phase\n    bytes32 public fcfsMerkleRoot; // Renamed from wlFcfsMerkleRoot for clarity\n    address public treasury;\n    address public founder;\n    ApeBeatsMetadataLib public metadataLib;\n    ApeBeatsRoyalties public royaltiesContract;\n    string public prerevealNoiseBase64;\n    IDelegateRegistry public delegateRegistry;\n\n    // Phase timestamps\n    uint256 public founderMintStart;\n    uint256 public gtdMintStart;\n    uint256 public fcfsMintStart;\n    uint256 public publicMintStart;\n\n    // Phase durations\n    uint256 public constant GTD_DURATION = 15 minutes;\n    uint256 public constant FCFS_DURATION = 30 minutes;\n\n    // Founder mint tracking\n    uint256 public founderMinted;\n\n    // Per-wallet mint tracking for each phase\n    mapping(address => uint256) public mintedPerWalletGTD;\n    mapping(address => uint256) public mintedPerWalletFCFS;\n    mapping(address => uint256) public mintedPerWalletPublic;\n\n    event Minted(address indexed to, uint256 indexed tokenId);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        bytes32 _gtdMerkleRoot,\n        bytes32 _fcfsMerkleRoot,\n        address _treasury,\n        address _metadataLib,\n        address payable _royaltiesContract,\n        address _delegateRegistry\n    ) external initializer {\n        __ERC721_init(\"ApeBeatsGenesis\", \"ABG\");\n        __Ownable_init(msg.sender);\n        __ReentrancyGuard_init();\n        __ERC721Royalty_init();\n\n        require(_treasury != address(0), \"Treasury cannot be zero address\");\n        require(_metadataLib != address(0), \"MetadataLib cannot be zero address\");\n        require(_royaltiesContract != address(0), \"Royalties contract cannot be zero address\");\n        require(_delegateRegistry != address(0), \"Delegate registry cannot be zero address\");\n\n        gtdMerkleRoot = _gtdMerkleRoot;\n        fcfsMerkleRoot = _fcfsMerkleRoot;\n        treasury = _treasury;\n        founder = msg.sender;\n        metadataLib = ApeBeatsMetadataLib(_metadataLib);\n        royaltiesContract = ApeBeatsRoyalties(_royaltiesContract);\n        delegateRegistry = IDelegateRegistry(_delegateRegistry);\n        _setDefaultRoyalty(address(royaltiesContract), ROYALTY_BASIS_POINTS);\n\n        // Start founder mint phase immediately\n        founderMintStart = block.timestamp;\n    }\n\n    function setPrerevealNoiseBase64(string calldata _prerevealNoiseBase64) external onlyOwner {\n        require(bytes(_prerevealNoiseBase64).length > 0, \"Prereveal URI cannot be empty\");\n        prerevealNoiseBase64 = _prerevealNoiseBase64;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, ERC721RoyaltyUpgradeable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    // **Founder Mint**: 4 free NFTs to founder, auto-transitions to GTD phase\n    function mintFounder(uint256 amount) external nonReentrant {\n        require(msg.sender == founder, \"Only founder can mint\");\n        require(isFounderMintActive(), \"Founder mint phase not active\");\n        require(founderMinted + amount <= FOUNDER_MINT_AMOUNT, \"Exceeds founder mint limit\");\n        require(totalMinted + amount <= TOTAL_SUPPLY, \"Exceeds total supply\");\n\n        founderMinted += amount;\n        for (uint256 i = 0; i < amount; i++) {\n            totalMinted++;\n            _safeMint(founder, totalMinted);\n            royaltiesContract.mintAndRecord(totalMinted, founder, 1);\n            emit Minted(founder, totalMinted);\n        }\n\n        // Auto-transition to GTD mint after all 4 are minted\n        if (founderMinted == FOUNDER_MINT_AMOUNT) {\n            gtdMintStart = block.timestamp;\n        }\n    }\n\n    // **GTD Mint**: 42 NFTs, 4.2 Ape, 1 per wallet, separate Merkle list, 15 min duration\n    function mintGTD(address vault, bytes32[] calldata merkleProof) external payable nonReentrant {\n        require(isGTDMintActive(), \"GTD mint phase not active\");\n        require(totalMinted + 1 <= TOTAL_SUPPLY, \"Exceeds total supply\");\n        require(msg.value >= GTD_PRICE, \"Insufficient payment\");\n\n        address account = _getAccount(vault);\n        require(mintedPerWalletGTD[account] == 0, \"Already minted GTD\");\n\n        bytes32 leaf = keccak256(abi.encodePacked(account));\n        require(MerkleProof.verify(merkleProof, gtdMerkleRoot, leaf), \"Invalid Merkle proof\");\n\n        mintedPerWalletGTD[account] += 1;\n        totalMinted++;\n        _safeMint(msg.sender, totalMinted);\n        royaltiesContract.mintAndRecord(totalMinted, msg.sender, 1);\n        emit Minted(msg.sender, totalMinted);\n\n        if (msg.value > GTD_PRICE) {\n            (bool sent, ) = msg.sender.call{value: msg.value - GTD_PRICE}(\"\");\n            require(sent, \"Refund failed\");\n        }\n\n        // Auto-transition to FCFS after 15 minutes (handled in isGTDMintActive)\n    }\n\n    // **FCFS Mint**: 4 per wallet, 6.9 Ape, wide Merkle list, 30 min duration\n    function mintFCFS(uint256 amount, address vault, bytes32[] calldata merkleProof) external payable nonReentrant {\n        require(isFCFSMintActive(), \"FCFS mint phase not active\");\n        require(totalMinted + amount <= TOTAL_SUPPLY, \"Exceeds total supply\");\n        require(amount <= FCFS_MAX_PER_WALLET, \"Exceeds FCFS limit\");\n        require(msg.value >= FCFS_PRICE * amount, \"Insufficient payment\");\n\n        address account = _getAccount(vault);\n        require(mintedPerWalletFCFS[account] + amount <= FCFS_MAX_PER_WALLET, \"Exceeds wallet limit\");\n\n        bytes32 leaf = keccak256(abi.encodePacked(account));\n        require(MerkleProof.verify(merkleProof, fcfsMerkleRoot, leaf), \"Invalid Merkle proof\");\n\n        mintedPerWalletFCFS[account] += amount;\n        for (uint256 i = 0; i < amount; i++) {\n            totalMinted++;\n            _safeMint(msg.sender, totalMinted);\n            royaltiesContract.mintAndRecord(totalMinted, msg.sender, 1);\n            emit Minted(msg.sender, totalMinted);\n        }\n\n        if (msg.value > FCFS_PRICE * amount) {\n            (bool sent, ) = msg.sender.call{value: msg.value - FCFS_PRICE * amount}(\"\");\n            require(sent, \"Refund failed\");\n        }\n\n        // Auto-transition to Public after 30 minutes (handled in isFCFSMintActive)\n    }\n\n    // **Public Mint**: 5 per wallet, 6.9 Ape, until total supply reached\n    function mintPublic(uint256 amount) external payable nonReentrant {\n        require(isPublicMintActive(), \"Public mint phase not active\");\n        require(totalMinted + amount <= TOTAL_SUPPLY, \"Exceeds total supply\");\n        require(amount <= PUBLIC_MAX_PER_WALLET, \"Exceeds public limit\");\n        require(mintedPerWalletPublic[msg.sender] + amount <= PUBLIC_MAX_PER_WALLET, \"Exceeds wallet limit\");\n        require(msg.value >= PUBLIC_PRICE * amount, \"Insufficient payment\");\n\n        mintedPerWalletPublic[msg.sender] += amount;\n        for (uint256 i = 0; i < amount; i++) {\n            totalMinted++;\n            _safeMint(msg.sender, totalMinted);\n            royaltiesContract.mintAndRecord(totalMinted, msg.sender, 1);\n            emit Minted(msg.sender, totalMinted);\n        }\n\n        if (msg.value > PUBLIC_PRICE * amount) {\n            (bool sent, ) = msg.sender.call{value: msg.value - PUBLIC_PRICE * amount}(\"\");\n            require(sent, \"Refund failed\");\n        }\n    }\n\n    // Helper function for Delegate.xyz integration\n    function _getAccount(address vault) internal view returns (address) {\n        if (vault != address(0)) {\n            bool isDelegateValid = delegateRegistry.checkDelegateForAll(msg.sender, vault);\n            require(isDelegateValid, \"Invalid delegate\");\n            return vault;\n        }\n        return msg.sender;\n    }\n\n    // Phase activity checks\n    function isFounderMintActive() public view returns (bool) {\n        return founderMintStart > 0 && founderMinted < FOUNDER_MINT_AMOUNT;\n    }\n\n    function isGTDMintActive() public view returns (bool) {\n        return gtdMintStart > 0 && block.timestamp < gtdMintStart + GTD_DURATION && totalMinted < TOTAL_SUPPLY;\n    }\n\n    function isFCFSMintActive() public view returns (bool) {\n        return fcfsMintStart > 0 && block.timestamp < fcfsMintStart + FCFS_DURATION && totalMinted < TOTAL_SUPPLY;\n    }\n\n    function isPublicMintActive() public view returns (bool) {\n        return publicMintStart > 0 && totalMinted < TOTAL_SUPPLY;\n    }\n\n    // Manual phase transition functions (for owner control if needed)\n    function startFCFSMint() external onlyOwner {\n        require(gtdMintStart > 0 && block.timestamp >= gtdMintStart + GTD_DURATION, \"GTD mint not ended\");\n        fcfsMintStart = block.timestamp;\n    }\n\n    function startPublicMint() external onlyOwner {\n        require(fcfsMintStart > 0 && block.timestamp >= fcfsMintStart + FCFS_DURATION, \"FCFS mint not ended\");\n        publicMintStart = block.timestamp;\n    }\n\n    // Existing functions (unchanged)\n    function tokenURI(uint256 tokenId) public view override(ERC721Upgradeable) returns (string memory) {\n        return metadataLib.getTokenURI(tokenId, prerevealNoiseBase64, ownerOf(tokenId));\n    }\n\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address from = super._update(to, tokenId, auth);\n        if (from != address(0) && to != address(0)) {\n            royaltiesContract.recordTransfer(tokenId);\n        }\n        return from;\n    }\n\n    function claimRoyalties() external nonReentrant {\n        royaltiesContract.claimRoyalties();\n    }\n\n    function claimPoolRoyalties() external nonReentrant {\n        royaltiesContract.claimPoolRoyalties();\n    }\n\n    function withdraw() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No funds to withdraw\");\n        (bool sent, ) = treasury.call{value: balance}(\"\");\n        require(sent, \"Withdrawal failed\");\n    }\n\n    function setRevealed(bool _revealed) external onlyOwner {\n        metadataLib.setRevealed(_revealed);\n    }\n\n    function setWaveformURI(uint256 tokenId, string memory uri) external onlyOwner {\n        metadataLib.setWaveformURI(tokenId, uri);\n    }\n\n    function setMixedAudioURI(uint256 tokenId, string memory uri) external onlyOwner {\n        metadataLib.setMixedAudioURI(tokenId, uri);\n    }\n\n    function reveal(uint256 tokenId) external onlyOwner {\n        metadataLib.reveal(tokenId, ownerOf(tokenId));\n    }\n}\n"},"contracts/ApeBeatsMetadataLib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ApeBeatsMetadataLib is Ownable {\n    using Strings for uint256;\n\n    struct WaveData {\n        uint8 bass;\n        uint8 drums;\n        uint8 melody;\n        uint8 fx;\n        uint8 colorWave;\n        uint8 colorBg;\n    }\n\n    string[5] public bassLoops;\n    string[5] public drumLoops;\n    string[5] public melodyLoops;\n    string[5] public fxLoops;\n    string[11] public COLORS = [\"#B9F2FF\", \"#FFD700\", \"#C0C0C0\", \"#CD7F32\", \"Rainbow\", \"#000000\", \"#FF0000\", \"#0000FF\", \"#00FF00\", \"#800080\", \"#FFA500\"];\n\n    bool public revealed;\n    mapping(uint256 => WaveData) public waveData;\n    mapping(uint256 => string) public mixedAudioURIs;\n    mapping(uint256 => string) public waveformURIs;\n    mapping(uint256 => uint256) public rarityScore;\n\n    event WaveformURIUpdated(uint256 indexed tokenId, string uri);\n\n    constructor() Ownable(msg.sender) {}\n\n    function setRevealed(bool _revealed) external onlyOwner {\n        revealed = _revealed;\n    }\n\n    function setWaveformURI(uint256 tokenId, string memory uri) external onlyOwner {\n        require(revealed, \"Reveal not active\");\n        waveformURIs[tokenId] = uri;\n        emit WaveformURIUpdated(tokenId, uri);\n    }\n\n    function setMixedAudioURI(uint256 tokenId, string memory uri) external onlyOwner {\n        require(revealed, \"Reveal not active\");\n        mixedAudioURIs[tokenId] = uri;\n    }\n\n    function reveal(uint256 tokenId, address tokenOwner) external onlyOwner {\n        require(tokenOwner != address(0), \"Token does not exist\");\n        require(revealed, \"Reveal not active\");\n        require(bytes(mixedAudioURIs[tokenId]).length == 0, \"Already revealed\");\n\n        uint256 pseudoRandom = uint256(keccak256(abi.encodePacked(block.timestamp, tokenId, msg.sender)));\n        waveData[tokenId] = WaveData({\n            bass: uint8(pseudoRandom % 5),\n            drums: uint8((pseudoRandom / 5) % 5),\n            melody: uint8((pseudoRandom / 25) % 5),\n            fx: uint8((pseudoRandom / 125) % 5),\n            colorWave: uint8((pseudoRandom / 625) % 11),\n            colorBg: uint8((pseudoRandom / 6875) % 11)\n        });\n        rarityScore[tokenId] = (pseudoRandom % 100) + 1;\n    }\n\n    function getRevealedURI(\n        uint256 tokenId, string[5] memory bassLoopsArg, string[5] memory drumLoopsArg,\n        string[5] memory melodyLoopsArg, string[5] memory fxLoopsArg, WaveData memory data,\n        uint256 rarity, string memory mixedAudioURI, string memory waveformURI, string[11] memory colors\n    ) public pure returns (string memory) {\n        string memory json = Base64.encode(abi.encodePacked(\n            '{\"name\":\"ApeBeatsGenesis #', tokenId.toString(), '\",',\n            '\"description\":\"Unique audio-visual NFT\",',\n            '\"image\":\"', waveformURI, '\",',\n            '\"animation_url\":\"', mixedAudioURI, '\",',\n            '\"onchain_data\":{',\n                '\"bass\":\"', bassLoopsArg[data.bass], '\",',\n                '\"drums\":\"', drumLoopsArg[data.drums], '\",',\n                '\"melody\":\"', melodyLoopsArg[data.melody], '\",',\n                '\"fx\":\"', fxLoopsArg[data.fx], '\",',\n                '\"wave_color\":\"', colors[data.colorWave], '\",',\n                '\"bg_color\":\"', colors[data.colorBg], '\",',\n                '\"rarity\":\"', rarity.toString(), '\"',\n            '},',\n            '\"attributes\":['\n                '{\"trait_type\":\"Bass\",\"value\":\"', bassLoopsArg[data.bass], '\"},',\n                '{\"trait_type\":\"Drums\",\"value\":\"', drumLoopsArg[data.drums], '\"},',\n                '{\"trait_type\":\"Melody\",\"value\":\"', melodyLoopsArg[data.melody], '\"},',\n                '{\"trait_type\":\"FX\",\"value\":\"', fxLoopsArg[data.fx], '\"},',\n                '{\"trait_type\":\"Wave Color\",\"value\":\"', colors[data.colorWave], '\"},',\n                '{\"trait_type\":\"Background Color\",\"value\":\"', colors[data.colorBg], '\"},',\n                '{\"trait_type\":\"Rarity Score\",\"value\":\"', rarity.toString(), '\"}'\n            ']}'\n        ));\n        return string(abi.encodePacked(\"data:application/json;base64,\", json));\n    }\n\n    function getTokenURI(\n        uint256 tokenId,\n        string memory prerevealNoiseBase64,\n        address tokenOwner\n    ) external view returns (string memory) {\n        require(tokenOwner != address(0), \"Token does not exist\");\n        if (!revealed) {\n            return prerevealNoiseBase64;\n        }\n        require(bytes(mixedAudioURIs[tokenId]).length > 0, \"Audio URI not set\");\n        require(bytes(waveformURIs[tokenId]).length > 0, \"Waveform URI not set\");\n        return getRevealedURI(\n            tokenId,\n            bassLoops,\n            drumLoops,\n            melodyLoops,\n            fxLoops,\n            waveData[tokenId],\n            rarityScore[tokenId],\n            mixedAudioURIs[tokenId],\n            waveformURIs[tokenId],\n            COLORS\n        );\n    }\n}\n"},"contracts/ApeBeatsRoyalties.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract ApeBeatsRoyalties is Ownable, ReentrancyGuard {\n    using Strings for uint256;\n\n    uint256 public constant ROYALTY_WINDOW = 1 minutes;\n\n    address public treasury;\n    address public founder;\n    uint256 public totalMinted;\n    uint256 public poolRoyalties;\n\n    struct TransferRecord {\n        uint256 tokenId;\n        uint256 timestamp;\n    }\n    TransferRecord[] public recentTransfers;\n    uint256 public transferIndex;\n\n    mapping(uint256 => uint256) public royaltyBalancesPerToken;\n    mapping(address => uint256) public royaltyBalances;\n    mapping(uint256 => address) public originalMinters;\n    mapping(address => uint256) public mintedPerWallet;\n\n    event RoyaltiesReceived(uint256 indexed tokenId, uint256 amount);\n    event RoyaltiesPooled(uint256 amount);\n    event RoyaltiesClaimed(address indexed claimant, uint256 amount);\n\n    constructor(address _treasury, address _founder) Ownable(msg.sender) {\n        require(_treasury != address(0), \"Treasury cannot be zero address\");\n        treasury = _treasury;\n        founder = _founder;\n    }\n\n    receive() external payable {\n        uint256 amount = msg.value;\n        if (recentTransfers.length > 0) {\n            TransferRecord memory lastTransfer = recentTransfers[recentTransfers.length - 1];\n            if (block.timestamp <= lastTransfer.timestamp + ROYALTY_WINDOW) {\n                uint256 tokenId = lastTransfer.tokenId;\n                royaltyBalancesPerToken[tokenId] += amount;\n                address originalMinter = originalMinters[tokenId];\n                require(originalMinter != address(0), \"Invalid original minter\");\n                royaltyBalances[originalMinter] += amount;\n                emit RoyaltiesReceived(tokenId, amount);\n                return;\n            }\n        }\n        poolRoyalties += amount;\n        emit RoyaltiesPooled(amount);\n    }\n\n    function claimRoyalties() external nonReentrant {\n        uint256 amount = royaltyBalances[msg.sender];\n        require(amount > 0, \"No royalties to claim\");\n        royaltyBalances[msg.sender] = 0;\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\n        require(sent, \"Failed to send royalties\");\n        emit RoyaltiesClaimed(msg.sender, amount);\n    }\n\n    function claimPoolRoyalties() external nonReentrant {\n        require(totalMinted > 0, \"No tokens minted yet\");\n        uint256 poolAmount = poolRoyalties;\n        require(poolAmount > 0, \"No pool royalties to claim\");\n\n        uint256 founderShare = poolAmount * 25 / 100;\n        uint256 treasuryShare = poolAmount * 25 / 100;\n        uint256 mintersShare = poolAmount * 50 / 100;\n\n        poolRoyalties = 0;\n\n        (bool sentFounder, ) = founder.call{value: founderShare}(\"\");\n        require(sentFounder, \"Failed to send founder share\");\n        (bool sentTreasury, ) = treasury.call{value: treasuryShare}(\"\");\n        require(sentTreasury, \"Failed to send treasury share\");\n\n        if (msg.sender == founder || msg.sender == treasury) {\n            return;\n        }\n        uint256 senderMinted = mintedPerWallet[msg.sender];\n        require(senderMinted > 0, \"No tokens minted by claimant\");\n        uint256 senderShare = (mintersShare * senderMinted) / totalMinted;\n        royaltyBalances[msg.sender] += senderShare;\n        (bool sentMinter, ) = msg.sender.call{value: senderShare}(\"\");\n        require(sentMinter, \"Failed to send minter share\");\n        emit RoyaltiesClaimed(msg.sender, senderShare);\n    }\n\n    function recordTransfer(uint256 tokenId) external onlyOwner {\n        recentTransfers.push(TransferRecord(tokenId, block.timestamp));\n        transferIndex++;\n        while (recentTransfers.length > 100 || (recentTransfers.length > 0 && block.timestamp > recentTransfers[0].timestamp + ROYALTY_WINDOW * 2)) {\n            recentTransfers[transferIndex % recentTransfers.length] = recentTransfers[recentTransfers.length - 1];\n            recentTransfers.pop();\n        }\n    }\n\n    function setOriginalMinter(uint256 tokenId, address minter, uint256 amountMinted) public onlyOwner {\n        originalMinters[tokenId] = minter;\n        mintedPerWallet[minter] += amountMinted;\n        totalMinted += amountMinted;\n    }\n\n    function mintAndRecord(uint256 tokenId, address minter, uint256 amountMinted) external onlyOwner {\n        setOriginalMinter(tokenId, minter, amountMinted);\n    }\n\n    function toHexString(address addr) internal pure returns (string memory) {\n        return Strings.toHexString(uint256(uint160(addr)), 20);\n    }\n}\n"},"contracts/LocalProxy.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\ncontract LocalProxy is ERC1967Proxy {\n    constructor(address _logic) ERC1967Proxy(_logic, \"\") {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1971],"Initializable":[462],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1972,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":463,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1971,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1971,462],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[462]},"id":463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":462,"linearizedBaseContracts":[462],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":462,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":462,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6355:20:1"},"referencedDeclaration":205,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":462,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7824:20:1"},"referencedDeclaration":205,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":462,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":462,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":462,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":444,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":462,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":460,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":455,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":461,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"9129:20:1"},"referencedDeclaration":205,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":462,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":463,"src":"2349:6929:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1971],"ERC165Upgradeable":[2140],"ERC721Upgradeable":[1542],"ERC721Utils":[3084],"IERC165":[6263],"IERC721":[2961],"IERC721Errors":[2419],"IERC721Metadata":[3007],"Initializable":[462],"Strings":[5138]},"id":1543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":2962,"src":"133:73:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":3008,"src":"207:100:2","symbolAliases":[{"foreign":{"id":467,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"215:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":3085,"src":"308:87:2","symbolAliases":[{"foreign":{"id":469,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"316:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":1972,"src":"396:70:2","symbolAliases":[{"foreign":{"id":471,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"404:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":5139,"src":"467:66:2","symbolAliases":[{"foreign":{"id":473,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"475:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":6264,"src":"534:80:2","symbolAliases":[{"foreign":{"id":475,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"542:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":2141,"src":"615:82:2","symbolAliases":[{"foreign":{"id":477,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"623:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":2467,"src":"698:84:2","symbolAliases":[{"foreign":{"id":479,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"706:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1543,"sourceUnit":463,"src":"783:66:2","symbolAliases":[{"foreign":{"id":481,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"791:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":484,"name":"Initializable","nameLocations":["1138:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1138:13:2"},"id":485,"nodeType":"InheritanceSpecifier","src":"1138:13:2"},{"baseName":{"id":486,"name":"ContextUpgradeable","nameLocations":["1153:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1971,"src":"1153:18:2"},"id":487,"nodeType":"InheritanceSpecifier","src":"1153:18:2"},{"baseName":{"id":488,"name":"ERC165Upgradeable","nameLocations":["1173:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"1173:17:2"},"id":489,"nodeType":"InheritanceSpecifier","src":"1173:17:2"},{"baseName":{"id":490,"name":"IERC721","nameLocations":["1192:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2961,"src":"1192:7:2"},"id":491,"nodeType":"InheritanceSpecifier","src":"1192:7:2"},{"baseName":{"id":492,"name":"IERC721Metadata","nameLocations":["1201:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":3007,"src":"1201:15:2"},"id":493,"nodeType":"InheritanceSpecifier","src":"1201:15:2"},{"baseName":{"id":494,"name":"IERC721Errors","nameLocations":["1218:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"1218:13:2"},"id":495,"nodeType":"InheritanceSpecifier","src":"1218:13:2"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"851:247:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1542,"linearizedBaseContracts":[1542,2419,3007,2961,2140,6263,1971,462],"name":"ERC721Upgradeable","nameLocation":"1117:17:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":498,"libraryName":{"id":496,"name":"Strings","nameLocations":["1244:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"1244:7:2"},"nodeType":"UsingForDirective","src":"1238:26:2","typeName":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ERC721Upgradeable.ERC721Storage","documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1270:64:2","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC721"},"id":522,"members":[{"constant":false,"id":501,"mutability":"mutable","name":"_name","nameLocation":"1399:5:2","nodeType":"VariableDeclaration","scope":522,"src":"1392:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":500,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"_symbol","nameLocation":"1446:7:2","nodeType":"VariableDeclaration","scope":522,"src":"1439:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":502,"name":"string","nodeType":"ElementaryTypeName","src":"1439:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"_owners","nameLocation":"1500:7:2","nodeType":"VariableDeclaration","scope":522,"src":"1464:43:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":506,"keyName":"tokenId","keyNameLocation":"1480:7:2","keyType":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1464:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_balances","nameLocation":"1552:9:2","nodeType":"VariableDeclaration","scope":522,"src":"1518:43:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":510,"keyName":"owner","keyNameLocation":"1534:5:2","keyType":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1518:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1608:15:2","nodeType":"VariableDeclaration","scope":522,"src":"1572:51:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":514,"keyName":"tokenId","keyNameLocation":"1588:7:2","keyType":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1572:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1694:18:2","nodeType":"VariableDeclaration","scope":522,"src":"1634:78:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":520,"keyName":"owner","keyNameLocation":"1650:5:2","keyType":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1634:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":519,"keyName":"operator","keyNameLocation":"1675:8:2","keyType":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":518,"name":"bool","nodeType":"ElementaryTypeName","src":"1687:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"}],"name":"ERC721Storage","nameLocation":"1346:13:2","nodeType":"StructDefinition","scope":1542,"src":"1339:380:2","visibility":"public"},{"constant":true,"id":525,"mutability":"constant","name":"ERC721StorageLocation","nameLocation":"1860:21:2","nodeType":"VariableDeclaration","scope":1542,"src":"1835:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1835:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838306262326236333863633230626334643061363064363639343066336162346130306331643762333133343937636138326662306234616230303739333030","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:66:2","typeDescriptions":{"typeIdentifier":"t_rational_58226744478722834339948329933988999792353370511964151963072532422914231210752_by_1","typeString":"int_const 5822...(69 digits omitted)...0752"},"value":"0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300"},"visibility":"private"},{"body":{"id":532,"nodeType":"Block","src":"2033:80:2","statements":[{"AST":{"nativeSrc":"2052:55:2","nodeType":"YulBlock","src":"2052:55:2","statements":[{"nativeSrc":"2066:31:2","nodeType":"YulAssignment","src":"2066:31:2","value":{"name":"ERC721StorageLocation","nativeSrc":"2076:21:2","nodeType":"YulIdentifier","src":"2076:21:2"},"variableNames":[{"name":"$.slot","nativeSrc":"2066:6:2","nodeType":"YulIdentifier","src":"2066:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":529,"isOffset":false,"isSlot":true,"src":"2066:6:2","suffix":"slot","valueSize":1},{"declaration":525,"isOffset":false,"isSlot":false,"src":"2076:21:2","valueSize":1}],"id":531,"nodeType":"InlineAssembly","src":"2043:64:2"}]},"id":533,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC721Storage","nameLocation":"1966:17:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"1983:2:2"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"$","nameLocation":"2030:1:2","nodeType":"VariableDeclaration","scope":533,"src":"2008:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":528,"nodeType":"UserDefinedTypeName","pathNode":{"id":527,"name":"ERC721Storage","nameLocations":["2008:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"2008:13:2"},"referencedDeclaration":522,"src":"2008:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"src":"2007:25:2"},"scope":1542,"src":"1957:156:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":548,"nodeType":"Block","src":"2325:56:2","statements":[{"expression":{"arguments":[{"id":544,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"2359:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":545,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"2366:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":543,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2335:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"2335:39:2"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"2119:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":549,"implemented":true,"kind":"function","modifiers":[{"id":541,"kind":"modifierInvocation","modifierName":{"id":540,"name":"onlyInitializing","nameLocations":["2308:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2308:16:2"},"nodeType":"ModifierInvocation","src":"2308:16:2"}],"name":"__ERC721_init","nameLocation":"2241:13:2","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"name_","nameLocation":"2269:5:2","nodeType":"VariableDeclaration","scope":549,"src":"2255:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":535,"name":"string","nodeType":"ElementaryTypeName","src":"2255:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"symbol_","nameLocation":"2290:7:2","nodeType":"VariableDeclaration","scope":549,"src":"2276:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":537,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2254:44:2"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"2325:0:2"},"scope":1542,"src":"2232:149:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"2490:116:2","statements":[{"assignments":[560],"declarations":[{"constant":false,"id":560,"mutability":"mutable","name":"$","nameLocation":"2522:1:2","nodeType":"VariableDeclaration","scope":576,"src":"2500:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":559,"nodeType":"UserDefinedTypeName","pathNode":{"id":558,"name":"ERC721Storage","nameLocations":["2500:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"2500:13:2"},"referencedDeclaration":522,"src":"2500:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":563,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2526:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2500:45:2"},{"expression":{"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":564,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2555:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2557:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":501,"src":"2555:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":567,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"2565:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2555:15:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":569,"nodeType":"ExpressionStatement","src":"2555:15:2"},{"expression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":570,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2580:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2582:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":503,"src":"2580:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":573,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"2592:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2580:19:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":575,"nodeType":"ExpressionStatement","src":"2580:19:2"}]},"id":577,"implemented":true,"kind":"function","modifiers":[{"id":556,"kind":"modifierInvocation","modifierName":{"id":555,"name":"onlyInitializing","nameLocations":["2473:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2473:16:2"},"nodeType":"ModifierInvocation","src":"2473:16:2"}],"name":"__ERC721_init_unchained","nameLocation":"2396:23:2","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"name_","nameLocation":"2434:5:2","nodeType":"VariableDeclaration","scope":577,"src":"2420:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"2420:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"symbol_","nameLocation":"2455:7:2","nodeType":"VariableDeclaration","scope":577,"src":"2441:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":552,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2419:44:2"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"2490:0:2"},"scope":1542,"src":"2387:219:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2139,6262],"body":{"id":607,"nodeType":"Block","src":"2759:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2788:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":590,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"2808:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2961_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2961_$","typeString":"type(contract IERC721)"}],"id":589,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2803:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2961","typeString":"type(contract IERC721)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2817:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"2803:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2788:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2844:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":596,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"2864:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3007_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3007_$","typeString":"type(contract IERC721Metadata)"}],"id":595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2859:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2859:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3007","typeString":"type(contract IERC721Metadata)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2881:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"2859:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2844:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2788:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":603,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2932:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":601,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2908:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$1542_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2914:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2908:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2908:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2788:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":587,"id":606,"nodeType":"Return","src":"2769:175:2"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"2612:23:2","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":608,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2649:17:2","nodeType":"FunctionDefinition","overrides":{"id":584,"nodeType":"OverrideSpecifier","overrides":[{"id":582,"name":"ERC165Upgradeable","nameLocations":["2716:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"2716:17:2"},{"id":583,"name":"IERC165","nameLocations":["2735:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":6263,"src":"2735:7:2"}],"src":"2707:36:2"},"parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"interfaceId","nameLocation":"2674:11:2","nodeType":"VariableDeclaration","scope":608,"src":"2667:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":579,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2667:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2666:20:2"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"2753:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":585,"name":"bool","nodeType":"ElementaryTypeName","src":"2753:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2752:6:2"},"scope":1542,"src":"2640:311:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2886],"body":{"id":642,"nodeType":"Block","src":"3057:193:2","statements":[{"assignments":[618],"declarations":[{"constant":false,"id":618,"mutability":"mutable","name":"$","nameLocation":"3089:1:2","nodeType":"VariableDeclaration","scope":642,"src":"3067:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":617,"nodeType":"UserDefinedTypeName","pathNode":{"id":616,"name":"ERC721Storage","nameLocations":["3067:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"3067:13:2"},"referencedDeclaration":522,"src":"3067:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":621,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":619,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3093:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3067:45:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3126:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3143:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3135:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3135:7:2","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3126:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"3122:87:2","trueBody":{"id":635,"nodeType":"Block","src":"3147:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3187:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"3187:7:2","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3187:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"3168:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"3161:37:2"}]}},{"expression":{"baseExpression":{"expression":{"id":637,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3225:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3227:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"3225:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":640,"indexExpression":{"id":639,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3237:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3225:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":615,"id":641,"nodeType":"Return","src":"3218:25:2"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"2957:23:2","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"owner","nameLocation":"3012:5:2","nodeType":"VariableDeclaration","scope":643,"src":"3004:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:15:2"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"3048:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3048:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3047:9:2"},"scope":1542,"src":"2985:265:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2894],"body":{"id":655,"nodeType":"Block","src":"3356:46:2","statements":[{"expression":{"arguments":[{"id":652,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3387:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":651,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3373:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3373:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":650,"id":654,"nodeType":"Return","src":"3366:29:2"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"3256:23:2","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":656,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3293:7:2","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"tokenId","nameLocation":"3309:7:2","nodeType":"VariableDeclaration","scope":656,"src":"3301:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3301:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3300:17:2"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"3347:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3346:9:2"},"scope":1542,"src":"3284:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2992],"body":{"id":671,"nodeType":"Block","src":"3504:86:2","statements":[{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"$","nameLocation":"3536:1:2","nodeType":"VariableDeclaration","scope":671,"src":"3514:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"ERC721Storage","nameLocations":["3514:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"3514:13:2"},"referencedDeclaration":522,"src":"3514:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3540:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3514:45:2"},{"expression":{"expression":{"id":668,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3576:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3578:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":501,"src":"3576:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":661,"id":670,"nodeType":"Return","src":"3569:14:2"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"3408:31:2","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":672,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3453:4:2","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"3457:2:2"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"3489:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":659,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3488:15:2"},"scope":1542,"src":"3444:146:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2998],"body":{"id":687,"nodeType":"Block","src":"3694:88:2","statements":[{"assignments":[680],"declarations":[{"constant":false,"id":680,"mutability":"mutable","name":"$","nameLocation":"3726:1:2","nodeType":"VariableDeclaration","scope":687,"src":"3704:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":679,"nodeType":"UserDefinedTypeName","pathNode":{"id":678,"name":"ERC721Storage","nameLocations":["3704:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"3704:13:2"},"referencedDeclaration":522,"src":"3704:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":683,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":681,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3730:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3730:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3704:45:2"},{"expression":{"expression":{"id":684,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3766:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3768:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":503,"src":"3766:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":677,"id":686,"nodeType":"Return","src":"3759:16:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"3596:31:2","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":688,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3641:6:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"3647:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"3679:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":675,"name":"string","nodeType":"ElementaryTypeName","src":"3679:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3678:15:2"},"scope":1542,"src":"3632:150:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3006],"body":{"id":723,"nodeType":"Block","src":"3903:176:2","statements":[{"expression":{"arguments":[{"id":697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"3927:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"3913:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"nodeType":"ExpressionStatement","src":"3913:22:2"},{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"baseURI","nameLocation":"3960:7:2","nodeType":"VariableDeclaration","scope":723,"src":"3946:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":700,"name":"string","nodeType":"ElementaryTypeName","src":"3946:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":704,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"3970:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3946:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":707,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4003:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3997:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":705,"name":"bytes","nodeType":"ElementaryTypeName","src":"3997:5:2","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3997:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4012:6:2","memberName":"length","nodeType":"MemberAccess","src":"3997:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4021:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3997:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4070:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3997:75:2","trueExpression":{"arguments":[{"id":715,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4039:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4048:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"4048:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4025:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":712,"name":"string","nodeType":"ElementaryTypeName","src":"4025:6:2","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4032:6:2","memberName":"concat","nodeType":"MemberAccess","src":"4025:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":695,"id":722,"nodeType":"Return","src":"3990:82:2"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"3788:31:2","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3833:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"tokenId","nameLocation":"3850:7:2","nodeType":"VariableDeclaration","scope":724,"src":"3842:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3841:17:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"3888:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":693,"name":"string","nodeType":"ElementaryTypeName","src":"3888:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3887:15:2"},"scope":1542,"src":"3824:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":732,"nodeType":"Block","src":"4387:26:2","statements":[{"expression":{"hexValue":"","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4404:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":729,"id":731,"nodeType":"Return","src":"4397:9:2"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4085:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":733,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4330:8:2","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"4338:2:2"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":733,"src":"4372:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":727,"name":"string","nodeType":"ElementaryTypeName","src":"4372:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4371:15:2"},"scope":1542,"src":"4321:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2934],"body":{"id":748,"nodeType":"Block","src":"4508:52:2","statements":[{"expression":{"arguments":[{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"4527:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4531:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":744,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"4540:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4540:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":741,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1393,1467],"referencedDeclaration":1393,"src":"4518:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4518:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"4518:35:2"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"4419:23:2","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":749,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4456:7:2","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"to","nameLocation":"4472:2:2","nodeType":"VariableDeclaration","scope":749,"src":"4464:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"tokenId","nameLocation":"4484:7:2","nodeType":"VariableDeclaration","scope":749,"src":"4476:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4463:29:2"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"4508:0:2"},"scope":1542,"src":"4447:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2950],"body":{"id":765,"nodeType":"Block","src":"4670:78:2","statements":[{"expression":{"arguments":[{"id":758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":757,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4680:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":760,"nodeType":"ExpressionStatement","src":"4680:22:2"},{"expression":{"arguments":[{"id":762,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4733:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":761,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"4720:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":756,"id":764,"nodeType":"Return","src":"4713:28:2"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"4566:23:2","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":766,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4603:11:2","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"tokenId","nameLocation":"4623:7:2","nodeType":"VariableDeclaration","scope":766,"src":"4615:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4615:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4614:17:2"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"4661:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"4661:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4660:9:2"},"scope":1542,"src":"4594:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2942],"body":{"id":781,"nodeType":"Block","src":"4857:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":775,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"4886:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4886:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"4900:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4910:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":774,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"4867:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4867:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"4867:52:2"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"4754:23:2","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":782,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4791:17:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"operator","nameLocation":"4817:8:2","nodeType":"VariableDeclaration","scope":782,"src":"4809:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"4809:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"approved","nameLocation":"4832:8:2","nodeType":"VariableDeclaration","scope":782,"src":"4827:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":770,"name":"bool","nodeType":"ElementaryTypeName","src":"4827:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4808:33:2"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"4857:0:2"},"scope":1542,"src":"4782:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2960],"body":{"id":805,"nodeType":"Block","src":"5054:116:2","statements":[{"assignments":[794],"declarations":[{"constant":false,"id":794,"mutability":"mutable","name":"$","nameLocation":"5086:1:2","nodeType":"VariableDeclaration","scope":805,"src":"5064:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":793,"nodeType":"UserDefinedTypeName","pathNode":{"id":792,"name":"ERC721Storage","nameLocations":["5064:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"5064:13:2"},"referencedDeclaration":522,"src":"5064:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":797,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5090:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5090:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5064:45:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":798,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"5126:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5128:18:2","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":521,"src":"5126:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":801,"indexExpression":{"id":800,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5147:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5126:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":803,"indexExpression":{"id":802,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5154:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5126:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":791,"id":804,"nodeType":"Return","src":"5119:44:2"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"4932:23:2","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":806,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4969:16:2","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"owner","nameLocation":"4994:5:2","nodeType":"VariableDeclaration","scope":806,"src":"4986:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"operator","nameLocation":"5009:8:2","nodeType":"VariableDeclaration","scope":806,"src":"5001:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"5001:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4985:33:2"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"5048:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":789,"name":"bool","nodeType":"ElementaryTypeName","src":"5048:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5047:6:2"},"scope":1542,"src":"4960:210:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2926],"body":{"id":851,"nodeType":"Block","src":"5284:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"5298:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5312:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5304:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"5304:7:2","typeDescriptions":{}}},"id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5298:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"IfStatement","src":"5294:87:2","trueBody":{"id":829,"nodeType":"Block","src":"5316:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5367:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5359:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"5359:7:2","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":822,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"5337:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5337:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"RevertStatement","src":"5330:40:2"}]}},{"assignments":[832],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"previousOwner","nameLocation":"5607:13:2","nodeType":"VariableDeclaration","scope":851,"src":"5599:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5599:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":839,"initialValue":{"arguments":[{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"5631:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"5635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":836,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"5644:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":833,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"5623:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5623:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5599:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5671:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5688:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5671:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":850,"nodeType":"IfStatement","src":"5667:109:2","trueBody":{"id":849,"nodeType":"Block","src":"5694:82:2","statements":[{"errorCall":{"arguments":[{"id":844,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5736:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"5742:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":846,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5751:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":843,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"5715:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5715:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"RevertStatement","src":"5708:57:2"}]}}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"5176:23:2","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":852,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5213:12:2","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"from","nameLocation":"5234:4:2","nodeType":"VariableDeclaration","scope":852,"src":"5226:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"5226:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"to","nameLocation":"5248:2:2","nodeType":"VariableDeclaration","scope":852,"src":"5240:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"5240:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"tokenId","nameLocation":"5260:7:2","nodeType":"VariableDeclaration","scope":852,"src":"5252:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"5252:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5225:43:2"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"5284:0:2"},"scope":1542,"src":"5204:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2916],"body":{"id":869,"nodeType":"Block","src":"5892:56:2","statements":[{"expression":{"arguments":[{"id":863,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"5919:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"5925:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"5929:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":862,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[870,900],"referencedDeclaration":900,"src":"5902:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5902:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"5902:39:2"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"5788:23:2","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":870,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5825:16:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"from","nameLocation":"5850:4:2","nodeType":"VariableDeclaration","scope":870,"src":"5842:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"5842:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"5864:2:2","nodeType":"VariableDeclaration","scope":870,"src":"5856:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"5876:7:2","nodeType":"VariableDeclaration","scope":870,"src":"5868:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5841:43:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"5892:0:2"},"scope":1542,"src":"5816:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2906],"body":{"id":899,"nodeType":"Block","src":"6085:130:2","statements":[{"expression":{"arguments":[{"id":883,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6108:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6114:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6118:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"6095:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6095:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":887,"nodeType":"ExpressionStatement","src":"6095:31:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":891,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"6170:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6184:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6190:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6194:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":896,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"6203:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":888,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"6136:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3084_$","typeString":"type(library ERC721Utils)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6148:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3083,"src":"6136:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6136:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"6136:72:2"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"5954:23:2","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":900,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5991:16:2","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"from","nameLocation":"6016:4:2","nodeType":"VariableDeclaration","scope":900,"src":"6008:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"to","nameLocation":"6030:2:2","nodeType":"VariableDeclaration","scope":900,"src":"6022:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"6022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"tokenId","nameLocation":"6042:7:2","nodeType":"VariableDeclaration","scope":900,"src":"6034:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"6034:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"data","nameLocation":"6064:4:2","nodeType":"VariableDeclaration","scope":900,"src":"6051:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"6051:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6007:62:2"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"6085:0:2"},"scope":1542,"src":"5982:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":919,"nodeType":"Block","src":"6805:97:2","statements":[{"assignments":[910],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"$","nameLocation":"6837:1:2","nodeType":"VariableDeclaration","scope":919,"src":"6815:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"ERC721Storage","nameLocations":["6815:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"6815:13:2"},"referencedDeclaration":522,"src":"6815:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":911,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6841:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6841:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6815:45:2"},{"expression":{"baseExpression":{"expression":{"id":914,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6877:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:2","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":507,"src":"6877:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":917,"indexExpression":{"id":916,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"6887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6877:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":907,"id":918,"nodeType":"Return","src":"6870:25:2"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"6221:504:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6739:8:2","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"tokenId","nameLocation":"6756:7:2","nodeType":"VariableDeclaration","scope":920,"src":"6748:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"6748:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6747:17:2"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"6796:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6795:9:2"},"scope":1542,"src":"6730:172:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"7097:105:2","statements":[{"assignments":[930],"declarations":[{"constant":false,"id":930,"mutability":"mutable","name":"$","nameLocation":"7129:1:2","nodeType":"VariableDeclaration","scope":939,"src":"7107:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":929,"nodeType":"UserDefinedTypeName","pathNode":{"id":928,"name":"ERC721Storage","nameLocations":["7107:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"7107:13:2"},"referencedDeclaration":522,"src":"7107:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":933,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":931,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7133:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7133:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7107:45:2"},{"expression":{"baseExpression":{"expression":{"id":934,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7169:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7171:15:2","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":515,"src":"7169:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":937,"indexExpression":{"id":936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"7187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7169:26:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":927,"id":938,"nodeType":"Return","src":"7162:33:2"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"6908:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"7027:12:2","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"tokenId","nameLocation":"7048:7:2","nodeType":"VariableDeclaration","scope":940,"src":"7040:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"7040:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7039:17:2"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"7088:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"7088:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7087:9:2"},"scope":1542,"src":"7018:184:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"7622:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7651:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7670:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"7662:7:2","typeDescriptions":{}}},"id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7651:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"7689:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":959,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7698:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7689:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":962,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"7726:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7733:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":961,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"7709:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7709:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7689:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":967,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7758:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":966,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"7745:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7745:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":969,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7770:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7745:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7689:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7651:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":951,"id":974,"nodeType":"Return","src":"7632:146:2"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"7208:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"7522:13:2","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"owner","nameLocation":"7544:5:2","nodeType":"VariableDeclaration","scope":976,"src":"7536:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"spender","nameLocation":"7559:7:2","nodeType":"VariableDeclaration","scope":976,"src":"7551:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"7551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"tokenId","nameLocation":"7576:7:2","nodeType":"VariableDeclaration","scope":976,"src":"7568:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"7568:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7535:49:2"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"7616:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":949,"name":"bool","nodeType":"ElementaryTypeName","src":"7616:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7615:6:2"},"scope":1542,"src":"7513:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1012,"nodeType":"Block","src":"8314:271:2","statements":[{"condition":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8328:39:2","subExpression":{"arguments":[{"id":987,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8343:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":988,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"8350:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":989,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"8359:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":986,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"8329:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1011,"nodeType":"IfStatement","src":"8324:255:2","trueBody":{"id":1010,"nodeType":"Block","src":"8369:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8387:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8404:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8396:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"8396:7:2","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8396:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8387:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1008,"nodeType":"Block","src":"8485:84:2","statements":[{"errorCall":{"arguments":[{"id":1004,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"8537:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"8546:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1003,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8510:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8510:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"RevertStatement","src":"8503:51:2"}]},"id":1009,"nodeType":"IfStatement","src":"8383:186:2","trueBody":{"id":1002,"nodeType":"Block","src":"8408:71:2","statements":[{"errorCall":{"arguments":[{"id":999,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"8456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":998,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"8433:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8433:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"RevertStatement","src":"8426:38:2"}]}}]}}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"7791:421:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"8226:16:2","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"owner","nameLocation":"8251:5:2","nodeType":"VariableDeclaration","scope":1013,"src":"8243:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"8243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"spender","nameLocation":"8266:7:2","nodeType":"VariableDeclaration","scope":1013,"src":"8258:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"8258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"tokenId","nameLocation":"8283:7:2","nodeType":"VariableDeclaration","scope":1013,"src":"8275:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"8275:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8242:49:2"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"8314:0:2"},"scope":1542,"src":"8217:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1036,"nodeType":"Block","src":"9302:135:2","statements":[{"assignments":[1023],"declarations":[{"constant":false,"id":1023,"mutability":"mutable","name":"$","nameLocation":"9334:1:2","nodeType":"VariableDeclaration","scope":1036,"src":"9312:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1022,"nodeType":"UserDefinedTypeName","pathNode":{"id":1021,"name":"ERC721Storage","nameLocations":["9312:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"9312:13:2"},"referencedDeclaration":522,"src":"9312:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1024,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9338:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9338:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9312:45:2"},{"id":1035,"nodeType":"UncheckedBlock","src":"9367:64:2","statements":[{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1027,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"9391:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9393:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"9391:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1031,"indexExpression":{"id":1029,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"9403:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"9415:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9391:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"9391:29:2"}]}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"8591:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"9236:16:2","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"account","nameLocation":"9261:7:2","nodeType":"VariableDeclaration","scope":1037,"src":"9253:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"9253:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"value","nameLocation":"9278:5:2","nodeType":"VariableDeclaration","scope":1037,"src":"9270:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1017,"name":"uint128","nodeType":"ElementaryTypeName","src":"9270:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9252:32:2"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[],"src":"9302:0:2"},"scope":1542,"src":"9227:210:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"10125:761:2","statements":[{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"$","nameLocation":"10157:1:2","nodeType":"VariableDeclaration","scope":1138,"src":"10135:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1050,"nodeType":"UserDefinedTypeName","pathNode":{"id":1049,"name":"ERC721Storage","nameLocations":["10135:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"10135:13:2"},"referencedDeclaration":522,"src":"10135:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1054,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1052,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"10161:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10135:45:2"},{"assignments":[1056],"declarations":[{"constant":false,"id":1056,"mutability":"mutable","name":"from","nameLocation":"10198:4:2","nodeType":"VariableDeclaration","scope":1138,"src":"10190:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"10190:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[{"id":1058,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10214:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1057,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"10205:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10205:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10190:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"10282:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10298:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10290:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"10290:7:2","typeDescriptions":{}}},"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10290:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10282:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1074,"nodeType":"IfStatement","src":"10278:86:2","trueBody":{"id":1073,"nodeType":"Block","src":"10302:62:2","statements":[{"expression":{"arguments":[{"id":1068,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10333:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"10339:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1070,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10345:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10316:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"10316:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10408:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10424:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10416:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"10416:7:2","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10416:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10408:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"10404:258:2","trueBody":{"id":1103,"nodeType":"Block","src":"10428:234:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10541:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10533:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"10533:7:2","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10533:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10554:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:2","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10554:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10566:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1081,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1393,1467],"referencedDeclaration":1467,"src":"10524:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10524:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"ExpressionStatement","src":"10524:48:2"},{"id":1102,"nodeType":"UncheckedBlock","src":"10587:65:2","statements":[{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1094,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10615:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10617:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"10615:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1098,"indexExpression":{"id":1096,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10627:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10615:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10636:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10615:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1101,"nodeType":"ExpressionStatement","src":"10615:22:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"10676:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10690:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10682:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"10682:7:2","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10682:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10676:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1121,"nodeType":"IfStatement","src":"10672:109:2","trueBody":{"id":1120,"nodeType":"Block","src":"10694:87:2","statements":[{"id":1119,"nodeType":"UncheckedBlock","src":"10708:63:2","statements":[{"expression":{"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1111,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10736:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10738:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":511,"src":"10736:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1115,"indexExpression":{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"10748:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10736:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10736:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1118,"nodeType":"ExpressionStatement","src":"10736:20:2"}]}]}},{"expression":{"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1122,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10791:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10793:7:2","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":507,"src":"10791:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1126,"indexExpression":{"id":1124,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10801:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10791:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1127,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"10812:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10791:23:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1129,"nodeType":"ExpressionStatement","src":"10791:23:2"},{"eventCall":{"arguments":[{"id":1131,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10839:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"10845:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10849:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"10830:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10830:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"EmitStatement","src":"10825:32:2"},{"expression":{"id":1136,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"10875:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1048,"id":1137,"nodeType":"Return","src":"10868:11:2"}]},"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"9443:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"10039:7:2","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"to","nameLocation":"10055:2:2","nodeType":"VariableDeclaration","scope":1139,"src":"10047:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"10047:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"tokenId","nameLocation":"10067:7:2","nodeType":"VariableDeclaration","scope":1139,"src":"10059:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"10059:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"auth","nameLocation":"10084:4:2","nodeType":"VariableDeclaration","scope":1139,"src":"10076:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"10076:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10046:43:2"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"10116:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"10116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10115:9:2"},"scope":1542,"src":"10030:856:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1188,"nodeType":"Block","src":"11261:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1147,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"11275:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11289:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11281:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"11281:7:2","typeDescriptions":{}}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11281:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11275:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1161,"nodeType":"IfStatement","src":"11271:87:2","trueBody":{"id":1160,"nodeType":"Block","src":"11293:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11344:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11336:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"11336:7:2","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11336:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1153,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"11314:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11314:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"RevertStatement","src":"11307:40:2"}]}},{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"previousOwner","nameLocation":"11375:13:2","nodeType":"VariableDeclaration","scope":1188,"src":"11367:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"11367:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1172,"initialValue":{"arguments":[{"id":1165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"11399:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11403:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11420:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11412:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"11412:7:2","typeDescriptions":{}}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11412:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1164,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11391:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11391:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11367:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"11437:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11462:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11454:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"11454:7:2","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11454:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11437:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"11433:96:2","trueBody":{"id":1186,"nodeType":"Block","src":"11466:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11515:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11507:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"11507:7:2","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11507:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1179,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"11487:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11487:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"RevertStatement","src":"11480:38:2"}]}}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"10892:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1189,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11217:5:2","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"to","nameLocation":"11231:2:2","nodeType":"VariableDeclaration","scope":1189,"src":"11223:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"11223:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"tokenId","nameLocation":"11243:7:2","nodeType":"VariableDeclaration","scope":1189,"src":"11235:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11222:29:2"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"11261:0:2"},"scope":1542,"src":"11208:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"11943:43:2","statements":[{"expression":{"arguments":[{"id":1198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"11963:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"11967:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11976:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1197,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1204,1234],"referencedDeclaration":1234,"src":"11953:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11953:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"11953:26:2"}]},"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"11541:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"11895:9:2","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"to","nameLocation":"11913:2:2","nodeType":"VariableDeclaration","scope":1204,"src":"11905:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"11905:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"tokenId","nameLocation":"11925:7:2","nodeType":"VariableDeclaration","scope":1204,"src":"11917:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"11917:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11904:29:2"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"11943:0:2"},"scope":1542,"src":"11886:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1233,"nodeType":"Block","src":"12291:123:2","statements":[{"expression":{"arguments":[{"id":1215,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"12307:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12311:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1214,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"12301:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12301:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"ExpressionStatement","src":"12301:18:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1222,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"12363:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12363:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12385:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12377:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"12377:7:2","typeDescriptions":{}}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1228,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"12389:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1229,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12393:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1230,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"12402:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1219,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"12329:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3084_$","typeString":"type(library ERC721Utils)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12341:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3083,"src":"12329:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"12329:78:2"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"11992:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12216:9:2","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"to","nameLocation":"12234:2:2","nodeType":"VariableDeclaration","scope":1234,"src":"12226:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"12226:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"tokenId","nameLocation":"12246:7:2","nodeType":"VariableDeclaration","scope":1234,"src":"12238:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12238:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"data","nameLocation":"12268:4:2","nodeType":"VariableDeclaration","scope":1234,"src":"12255:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"12255:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12225:48:2"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[],"src":"12291:0:2"},"scope":1542,"src":"12207:207:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"12781:186:2","statements":[{"assignments":[1241],"declarations":[{"constant":false,"id":1241,"mutability":"mutable","name":"previousOwner","nameLocation":"12799:13:2","nodeType":"VariableDeclaration","scope":1266,"src":"12791:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"12791:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1253,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12831:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12823:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"12823:7:2","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12823:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"12835:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12852:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12844:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"12844:7:2","typeDescriptions":{}}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12844:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1242,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"12815:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12815:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12791:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1254,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"12869:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12894:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12886:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"12886:7:2","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12886:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12869:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1265,"nodeType":"IfStatement","src":"12865:96:2","trueBody":{"id":1264,"nodeType":"Block","src":"12898:63:2","statements":[{"errorCall":{"arguments":[{"id":1261,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"12942:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"12919:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12919:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1263,"nodeType":"RevertStatement","src":"12912:38:2"}]}}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"12420:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12749:5:2","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"tokenId","nameLocation":"12763:7:2","nodeType":"VariableDeclaration","scope":1267,"src":"12755:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"12755:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12754:17:2"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"12781:0:2"},"scope":1542,"src":"12740:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"13362:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"13376:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13390:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"13382:7:2","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13376:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1291,"nodeType":"IfStatement","src":"13372:87:2","trueBody":{"id":1290,"nodeType":"Block","src":"13394:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13445:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13437:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"13437:7:2","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13437:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1283,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"13415:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13415:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"RevertStatement","src":"13408:40:2"}]}},{"assignments":[1293],"declarations":[{"constant":false,"id":1293,"mutability":"mutable","name":"previousOwner","nameLocation":"13476:13:2","nodeType":"VariableDeclaration","scope":1326,"src":"13468:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"13468:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1302,"initialValue":{"arguments":[{"id":1295,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"13500:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13521:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13513:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"13513:7:2","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13513:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1294,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"13492:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13492:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13468:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"13538:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13563:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13555:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"13555:7:2","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13555:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13538:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1314,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"13640:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1315,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"13657:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13640:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1324,"nodeType":"IfStatement","src":"13636:109:2","trueBody":{"id":1323,"nodeType":"Block","src":"13663:82:2","statements":[{"errorCall":{"arguments":[{"id":1318,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"13705:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13711:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1320,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"13720:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1317,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"13684:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13684:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1322,"nodeType":"RevertStatement","src":"13677:57:2"}]}},"id":1325,"nodeType":"IfStatement","src":"13534:211:2","trueBody":{"id":1313,"nodeType":"Block","src":"13567:63:2","statements":[{"errorCall":{"arguments":[{"id":1310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13611:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"13588:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13588:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"RevertStatement","src":"13581:38:2"}]}}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"12973:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"13300:9:2","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"from","nameLocation":"13318:4:2","nodeType":"VariableDeclaration","scope":1327,"src":"13310:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"13310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"to","nameLocation":"13332:2:2","nodeType":"VariableDeclaration","scope":1327,"src":"13324:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"13324:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"tokenId","nameLocation":"13344:7:2","nodeType":"VariableDeclaration","scope":1327,"src":"13336:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"13336:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13309:43:2"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"13362:0:2"},"scope":1542,"src":"13291:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1344,"nodeType":"Block","src":"14760:53:2","statements":[{"expression":{"arguments":[{"id":1338,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"14784:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1339,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14790:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"14794:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14803:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1337,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1345,1375],"referencedDeclaration":1375,"src":"14770:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14770:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"14770:36:2"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"13757:923:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"14694:13:2","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"from","nameLocation":"14716:4:2","nodeType":"VariableDeclaration","scope":1345,"src":"14708:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"14708:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"to","nameLocation":"14730:2:2","nodeType":"VariableDeclaration","scope":1345,"src":"14722:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"14722:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"tokenId","nameLocation":"14742:7:2","nodeType":"VariableDeclaration","scope":1345,"src":"14734:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"14734:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14707:43:2"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"14760:0:2"},"scope":1542,"src":"14685:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"15152:127:2","statements":[{"expression":{"arguments":[{"id":1358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"15172:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15178:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15182:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1357,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"15162:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15162:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"15162:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1366,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"15234:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15234:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"15248:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15254:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15258:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"15267:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1363,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"15200:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3084_$","typeString":"type(library ERC721Utils)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15212:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3083,"src":"15200:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"15200:72:2"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"14819:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15059:13:2","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"from","nameLocation":"15081:4:2","nodeType":"VariableDeclaration","scope":1375,"src":"15073:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"15073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"to","nameLocation":"15095:2:2","nodeType":"VariableDeclaration","scope":1375,"src":"15087:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"15087:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"tokenId","nameLocation":"15107:7:2","nodeType":"VariableDeclaration","scope":1375,"src":"15099:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"15099:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"data","nameLocation":"15129:4:2","nodeType":"VariableDeclaration","scope":1375,"src":"15116:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1353,"name":"bytes","nodeType":"ElementaryTypeName","src":"15116:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15072:62:2"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"15152:0:2"},"scope":1542,"src":"15050:229:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1392,"nodeType":"Block","src":"15792:50:2","statements":[{"expression":{"arguments":[{"id":1386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"15811:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"15815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1388,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"15824:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15830:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1385,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1393,1467],"referencedDeclaration":1467,"src":"15802:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15802:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"15802:33:2"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"15285:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"15731:8:2","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"to","nameLocation":"15748:2:2","nodeType":"VariableDeclaration","scope":1393,"src":"15740:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"15740:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"tokenId","nameLocation":"15760:7:2","nodeType":"VariableDeclaration","scope":1393,"src":"15752:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"15752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"auth","nameLocation":"15777:4:2","nodeType":"VariableDeclaration","scope":1393,"src":"15769:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"15769:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15739:43:2"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"15792:0:2"},"scope":1542,"src":"15722:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1466,"nodeType":"Block","src":"16118:625:2","statements":[{"assignments":[1407],"declarations":[{"constant":false,"id":1407,"mutability":"mutable","name":"$","nameLocation":"16150:1:2","nodeType":"VariableDeclaration","scope":1466,"src":"16128:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1406,"nodeType":"UserDefinedTypeName","pathNode":{"id":1405,"name":"ERC721Storage","nameLocations":["16128:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"16128:13:2"},"referencedDeclaration":522,"src":"16128:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1410,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1408,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"16154:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16154:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16128:45:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"16239:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16252:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16268:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16260:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"16260:7:2","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16260:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16252:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16239:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"nodeType":"IfStatement","src":"16235:460:2","trueBody":{"id":1456,"nodeType":"Block","src":"16272:423:2","statements":[{"assignments":[1420],"declarations":[{"constant":false,"id":1420,"mutability":"mutable","name":"owner","nameLocation":"16294:5:2","nodeType":"VariableDeclaration","scope":1456,"src":"16286:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"16286:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1424,"initialValue":{"arguments":[{"id":1422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"16316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"16302:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16302:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16286:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16452:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16468:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16460:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"16460:7:2","typeDescriptions":{}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16460:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16452:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"16474:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1432,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16483:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16474:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16452:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16491:30:2","subExpression":{"arguments":[{"id":1436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"16509:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16516:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1435,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"16492:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16492:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16452:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"16448:142:2","trueBody":{"id":1445,"nodeType":"Block","src":"16523:67:2","statements":[{"errorCall":{"arguments":[{"id":1442,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16570:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1441,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"16548:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16548:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"RevertStatement","src":"16541:34:2"}]}},{"condition":{"id":1447,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"16608:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"16604:81:2","trueBody":{"id":1454,"nodeType":"Block","src":"16619:66:2","statements":[{"eventCall":{"arguments":[{"id":1449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"16651:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"16658:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1451,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"16662:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1448,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16642:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16642:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"EmitStatement","src":"16637:33:2"}]}}]}},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1458,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"16705:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16707:15:2","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":515,"src":"16705:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1462,"indexExpression":{"id":1460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"16723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16705:26:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1463,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"16734:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16705:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1465,"nodeType":"ExpressionStatement","src":"16705:31:2"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"15848:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16033:8:2","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"16050:2:2","nodeType":"VariableDeclaration","scope":1467,"src":"16042:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"16042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"16062:7:2","nodeType":"VariableDeclaration","scope":1467,"src":"16054:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"16054:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"auth","nameLocation":"16079:4:2","nodeType":"VariableDeclaration","scope":1467,"src":"16071:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"16071:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"emitEvent","nameLocation":"16090:9:2","nodeType":"VariableDeclaration","scope":1467,"src":"16085:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1401,"name":"bool","nodeType":"ElementaryTypeName","src":"16085:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16041:59:2"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"16118:0:2"},"scope":1542,"src":"16024:719:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1511,"nodeType":"Block","src":"17045:276:2","statements":[{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"$","nameLocation":"17077:1:2","nodeType":"VariableDeclaration","scope":1511,"src":"17055:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1478,"nodeType":"UserDefinedTypeName","pathNode":{"id":1477,"name":"ERC721Storage","nameLocations":["17055:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"17055:13:2"},"referencedDeclaration":522,"src":"17055:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1480,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"17081:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$522_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17081:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17055:45:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17114:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17134:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17126:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"17126:7:2","typeDescriptions":{}}},"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17126:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17114:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1494,"nodeType":"IfStatement","src":"17110:91:2","trueBody":{"id":1493,"nodeType":"Block","src":"17138:63:2","statements":[{"errorCall":{"arguments":[{"id":1490,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17181:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"17159:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17159:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1492,"nodeType":"RevertStatement","src":"17152:38:2"}]}},{"expression":{"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1495,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"17210:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$522_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17212:18:2","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":521,"src":"17210:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1500,"indexExpression":{"id":1497,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"17231:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17210:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1501,"indexExpression":{"id":1498,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17238:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17210:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1502,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"17250:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17210:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"nodeType":"ExpressionStatement","src":"17210:48:2"},{"eventCall":{"arguments":[{"id":1506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"17288:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1507,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"17295:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1508,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"17305:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1505,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"17273:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17273:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1510,"nodeType":"EmitStatement","src":"17268:46:2"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"16749:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"16961:18:2","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"owner","nameLocation":"16988:5:2","nodeType":"VariableDeclaration","scope":1512,"src":"16980:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"16980:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"operator","nameLocation":"17003:8:2","nodeType":"VariableDeclaration","scope":1512,"src":"16995:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"16995:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"approved","nameLocation":"17018:8:2","nodeType":"VariableDeclaration","scope":1512,"src":"17013:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1473,"name":"bool","nodeType":"ElementaryTypeName","src":"17013:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16979:48:2"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"17045:0:2"},"scope":1542,"src":"16952:369:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1540,"nodeType":"Block","src":"17628:169:2","statements":[{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"owner","nameLocation":"17646:5:2","nodeType":"VariableDeclaration","scope":1540,"src":"17638:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"17638:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1525,"initialValue":{"arguments":[{"id":1523,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"17663:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1522,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"17654:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17654:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17638:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"17685:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17702:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17694:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"17694:7:2","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17694:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17685:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"nodeType":"IfStatement","src":"17681:88:2","trueBody":{"id":1536,"nodeType":"Block","src":"17706:63:2","statements":[{"errorCall":{"arguments":[{"id":1533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"17750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"17727:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17727:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"RevertStatement","src":"17720:38:2"}]}},{"expression":{"id":1538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"17785:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1519,"id":1539,"nodeType":"Return","src":"17778:12:2"}]},"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"17327:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"17565:13:2","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"tokenId","nameLocation":"17587:7:2","nodeType":"VariableDeclaration","scope":1541,"src":"17579:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"17579:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17578:17:2"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"17619:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"17619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17618:9:2"},"scope":1542,"src":"17556:241:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1543,"src":"1099:16700:2","usedErrors":[211,214,2377,2382,2391,2396,2401,2408,2413,2418],"usedEvents":[219,2860,2869,2878]}],"src":"107:17693:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol","exportedSymbols":{"ERC2981Upgradeable":[1925],"ERC721RoyaltyUpgradeable":[1589],"ERC721Upgradeable":[1542],"IERC165":[6263],"Initializable":[462]},"id":1590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1544,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"../ERC721Upgradeable.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1590,"sourceUnit":1543,"src":"151:59:3","symbolAliases":[{"foreign":{"id":1545,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"159:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1590,"sourceUnit":6264,"src":"211:80:3","symbolAliases":[{"foreign":{"id":1547,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"219:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol","file":"../../common/ERC2981Upgradeable.sol","id":1550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1590,"sourceUnit":1926,"src":"292:71:3","symbolAliases":[{"foreign":{"id":1549,"name":"ERC2981Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"300:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1590,"sourceUnit":463,"src":"364:69:3","symbolAliases":[{"foreign":{"id":1551,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"372:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1554,"name":"Initializable","nameLocations":["1190:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1190:13:3"},"id":1555,"nodeType":"InheritanceSpecifier","src":"1190:13:3"},{"baseName":{"id":1556,"name":"ERC2981Upgradeable","nameLocations":["1205:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1925,"src":"1205:18:3"},"id":1557,"nodeType":"InheritanceSpecifier","src":"1205:18:3"},{"baseName":{"id":1558,"name":"ERC721Upgradeable","nameLocations":["1225:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"1225:17:3"},"id":1559,"nodeType":"InheritanceSpecifier","src":"1225:17:3"}],"canonicalName":"ERC721RoyaltyUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"435:708:3","text":" @dev Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n information.\n Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually\n for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":1589,"linearizedBaseContracts":[1589,1542,2419,3007,2961,1925,2140,2329,6263,1971,462],"name":"ERC721RoyaltyUpgradeable","nameLocation":"1162:24:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1564,"nodeType":"Block","src":"1307:7:3","statements":[]},"id":1565,"implemented":true,"kind":"function","modifiers":[{"id":1562,"kind":"modifierInvocation","modifierName":{"id":1561,"name":"onlyInitializing","nameLocations":["1290:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1290:16:3"},"nodeType":"ModifierInvocation","src":"1290:16:3"}],"name":"__ERC721Royalty_init","nameLocation":"1258:20:3","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[],"src":"1278:2:3"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[],"src":"1307:0:3"},"scope":1589,"src":"1249:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1570,"nodeType":"Block","src":"1388:7:3","statements":[]},"id":1571,"implemented":true,"kind":"function","modifiers":[{"id":1568,"kind":"modifierInvocation","modifierName":{"id":1567,"name":"onlyInitializing","nameLocations":["1371:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1371:16:3"},"nodeType":"ModifierInvocation","src":"1371:16:3"}],"name":"__ERC721Royalty_init_unchained","nameLocation":"1329:30:3","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[],"src":"1359:2:3"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[],"src":"1388:0:3"},"scope":1589,"src":"1320:75:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[608,1696],"body":{"id":1587,"nodeType":"Block","src":"1558:60:3","statements":[{"expression":{"arguments":[{"id":1584,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1599:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1582,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1575:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721RoyaltyUpgradeable_$1589_$","typeString":"type(contract super ERC721RoyaltyUpgradeable)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1581:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":608,"src":"1575:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1581,"id":1586,"nodeType":"Return","src":"1568:43:3"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1400:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1437:17:3","nodeType":"FunctionDefinition","overrides":{"id":1578,"nodeType":"OverrideSpecifier","overrides":[{"id":1576,"name":"ERC721Upgradeable","nameLocations":["1504:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"1504:17:3"},{"id":1577,"name":"ERC2981Upgradeable","nameLocations":["1523:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1925,"src":"1523:18:3"}],"src":"1495:47:3"},"parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"interfaceId","nameLocation":"1462:11:3","nodeType":"VariableDeclaration","scope":1588,"src":"1455:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1573,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1455:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1454:20:3"},"returnParameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"1552:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1579,"name":"bool","nodeType":"ElementaryTypeName","src":"1552:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1551:6:3"},"scope":1589,"src":"1428:190:3","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1590,"src":"1144:476:3","usedErrors":[211,214,1639,1644,1653,1660,2377,2382,2391,2396,2401,2408,2413,2418],"usedEvents":[219,2860,2869,2878]}],"src":"125:1496:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2140],"ERC2981Upgradeable":[1925],"IERC165":[6263],"IERC2981":[2329],"Initializable":[462]},"id":1926,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1591,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"@openzeppelin/contracts/interfaces/IERC2981.sol","id":1593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1926,"sourceUnit":2330,"src":"134:73:4","symbolAliases":[{"foreign":{"id":1592,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"142:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1595,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1926,"sourceUnit":6264,"src":"208:80:4","symbolAliases":[{"foreign":{"id":1594,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"216:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":1597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1926,"sourceUnit":2141,"src":"289:82:4","symbolAliases":[{"foreign":{"id":1596,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"297:17:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1926,"sourceUnit":463,"src":"372:66:4","symbolAliases":[{"foreign":{"id":1598,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"380:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1601,"name":"Initializable","nameLocations":["1325:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1325:13:4"},"id":1602,"nodeType":"InheritanceSpecifier","src":"1325:13:4"},{"baseName":{"id":1603,"name":"IERC2981","nameLocations":["1340:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":2329,"src":"1340:8:4"},"id":1604,"nodeType":"InheritanceSpecifier","src":"1340:8:4"},{"baseName":{"id":1605,"name":"ERC165Upgradeable","nameLocations":["1350:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"1350:17:4"},"id":1606,"nodeType":"InheritanceSpecifier","src":"1350:17:4"}],"canonicalName":"ERC2981Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"440:844:4","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":1925,"linearizedBaseContracts":[1925,2140,2329,6263,462],"name":"ERC2981Upgradeable","nameLocation":"1303:18:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981Upgradeable.RoyaltyInfo","id":1611,"members":[{"constant":false,"id":1608,"mutability":"mutable","name":"receiver","nameLocation":"1411:8:4","nodeType":"VariableDeclaration","scope":1611,"src":"1403:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1436:15:4","nodeType":"VariableDeclaration","scope":1611,"src":"1429:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1609,"name":"uint96","nodeType":"ElementaryTypeName","src":"1429:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1381:11:4","nodeType":"StructDefinition","scope":1925,"src":"1374:84:4","visibility":"public"},{"canonicalName":"ERC2981Upgradeable.ERC2981Storage","documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"1464:65:4","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC2981"},"id":1621,"members":[{"constant":false,"id":1615,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1578:19:4","nodeType":"VariableDeclaration","scope":1621,"src":"1566:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo"},"typeName":{"id":1614,"nodeType":"UserDefinedTypeName","pathNode":{"id":1613,"name":"RoyaltyInfo","nameLocations":["1566:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":1611,"src":"1566:11:4"},"referencedDeclaration":1611,"src":"1566:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1647:17:4","nodeType":"VariableDeclaration","scope":1621,"src":"1607:57:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1611_storage_$","typeString":"mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"},"typeName":{"id":1619,"keyName":"tokenId","keyNameLocation":"1623:7:4","keyType":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1615:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1607:39:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1611_storage_$","typeString":"mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1618,"nodeType":"UserDefinedTypeName","pathNode":{"id":1617,"name":"RoyaltyInfo","nameLocations":["1634:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":1611,"src":"1634:11:4"},"referencedDeclaration":1611,"src":"1634:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo"}}},"visibility":"internal"}],"name":"ERC2981Storage","nameLocation":"1541:14:4","nodeType":"StructDefinition","scope":1925,"src":"1534:137:4","visibility":"public"},{"constant":true,"id":1624,"mutability":"constant","name":"ERC2981StorageLocation","nameLocation":"1813:22:4","nodeType":"VariableDeclaration","scope":1925,"src":"1788:116:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864616564633961623032333631336137636166333565373033363537653938366363666164376533656230616639336132383533663864363564643836623030","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:66:4","typeDescriptions":{"typeIdentifier":"t_rational_99024335606904005217512704786159900377861705329178606505725083239586356292352_by_1","typeString":"int_const 9902...(69 digits omitted)...2352"},"value":"0xdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b00"},"visibility":"private"},{"body":{"id":1631,"nodeType":"Block","src":"1989:81:4","statements":[{"AST":{"nativeSrc":"2008:56:4","nodeType":"YulBlock","src":"2008:56:4","statements":[{"nativeSrc":"2022:32:4","nodeType":"YulAssignment","src":"2022:32:4","value":{"name":"ERC2981StorageLocation","nativeSrc":"2032:22:4","nodeType":"YulIdentifier","src":"2032:22:4"},"variableNames":[{"name":"$.slot","nativeSrc":"2022:6:4","nodeType":"YulIdentifier","src":"2022:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1628,"isOffset":false,"isSlot":true,"src":"2022:6:4","suffix":"slot","valueSize":1},{"declaration":1624,"isOffset":false,"isSlot":false,"src":"2032:22:4","valueSize":1}],"id":1630,"nodeType":"InlineAssembly","src":"1999:65:4"}]},"id":1632,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC2981Storage","nameLocation":"1920:18:4","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[],"src":"1938:2:4"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"$","nameLocation":"1986:1:4","nodeType":"VariableDeclaration","scope":1632,"src":"1963:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"},"typeName":{"id":1627,"nodeType":"UserDefinedTypeName","pathNode":{"id":1626,"name":"ERC2981Storage","nameLocations":["1963:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"1963:14:4"},"referencedDeclaration":1621,"src":"1963:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"}},"visibility":"internal"}],"src":"1962:26:4"},"scope":1925,"src":"1911:159:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"2076:96:4","text":" @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"6f483d09","id":1639,"name":"ERC2981InvalidDefaultRoyalty","nameLocation":"2183:28:4","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"numerator","nameLocation":"2220:9:4","nodeType":"VariableDeclaration","scope":1639,"src":"2212:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"denominator","nameLocation":"2239:11:4","nodeType":"VariableDeclaration","scope":1639,"src":"2231:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2231:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2211:40:4"},"src":"2177:75:4"},{"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"2258:64:4","text":" @dev The default royalty receiver is invalid."},"errorSelector":"b6d9900a","id":1644,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nameLocation":"2333:36:4","nodeType":"ErrorDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"receiver","nameLocation":"2378:8:4","nodeType":"VariableDeclaration","scope":1644,"src":"2370:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"2370:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2369:18:4"},"src":"2327:61:4"},{"documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"2394:113:4","text":" @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"dfd1fc1b","id":1653,"name":"ERC2981InvalidTokenRoyalty","nameLocation":"2518:26:4","nodeType":"ErrorDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"tokenId","nameLocation":"2553:7:4","nodeType":"VariableDeclaration","scope":1653,"src":"2545:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"numerator","nameLocation":"2570:9:4","nodeType":"VariableDeclaration","scope":1653,"src":"2562:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2562:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"denominator","nameLocation":"2589:11:4","nodeType":"VariableDeclaration","scope":1653,"src":"2581:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:57:4"},"src":"2512:90:4"},{"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"2608:70:4","text":" @dev The royalty receiver for `tokenId` is invalid."},"errorSelector":"969f0852","id":1660,"name":"ERC2981InvalidTokenRoyaltyReceiver","nameLocation":"2689:34:4","nodeType":"ErrorDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"tokenId","nameLocation":"2732:7:4","nodeType":"VariableDeclaration","scope":1660,"src":"2724:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"2724:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"receiver","nameLocation":"2749:8:4","nodeType":"VariableDeclaration","scope":1660,"src":"2741:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"2741:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2723:35:4"},"src":"2683:76:4"},{"body":{"id":1665,"nodeType":"Block","src":"2817:7:4","statements":[]},"id":1666,"implemented":true,"kind":"function","modifiers":[{"id":1663,"kind":"modifierInvocation","modifierName":{"id":1662,"name":"onlyInitializing","nameLocations":["2800:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2800:16:4"},"nodeType":"ModifierInvocation","src":"2800:16:4"}],"name":"__ERC2981_init","nameLocation":"2774:14:4","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"2788:2:4"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"2817:0:4"},"scope":1925,"src":"2765:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1671,"nodeType":"Block","src":"2892:7:4","statements":[]},"id":1672,"implemented":true,"kind":"function","modifiers":[{"id":1669,"kind":"modifierInvocation","modifierName":{"id":1668,"name":"onlyInitializing","nameLocations":["2875:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2875:16:4"},"nodeType":"ModifierInvocation","src":"2875:16:4"}],"name":"__ERC2981_init_unchained","nameLocation":"2839:24:4","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"2863:2:4"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"2892:0:4"},"scope":1925,"src":"2830:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2139,6262],"body":{"id":1695,"nodeType":"Block","src":"3051:105:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3068:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1685,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3088:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$2329_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$2329_$","typeString":"type(contract IERC2981)"}],"id":1684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3083:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$2329","typeString":"type(contract IERC2981)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3098:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"3083:26:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3068:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1691,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3137:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1689,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3113:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981Upgradeable_$1925_$","typeString":"type(contract super ERC2981Upgradeable)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3119:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3113:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3113:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3068:81:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1682,"id":1694,"nodeType":"Return","src":"3061:88:4"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"2904:23:4","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2941:17:4","nodeType":"FunctionDefinition","overrides":{"id":1679,"nodeType":"OverrideSpecifier","overrides":[{"id":1677,"name":"IERC165","nameLocations":["3008:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":6263,"src":"3008:7:4"},{"id":1678,"name":"ERC165Upgradeable","nameLocations":["3017:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"3017:17:4"}],"src":"2999:36:4"},"parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"interfaceId","nameLocation":"2966:11:4","nodeType":"VariableDeclaration","scope":1696,"src":"2959:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1674,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2959:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2958:20:4"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"3045:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1680,"name":"bool","nodeType":"ElementaryTypeName","src":"3045:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3044:6:4"},"scope":1925,"src":"2932:224:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2328],"body":{"id":1766,"nodeType":"Block","src":"3333:578:4","statements":[{"assignments":[1710],"declarations":[{"constant":false,"id":1710,"mutability":"mutable","name":"$","nameLocation":"3366:1:4","nodeType":"VariableDeclaration","scope":1766,"src":"3343:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"},"typeName":{"id":1709,"nodeType":"UserDefinedTypeName","pathNode":{"id":1708,"name":"ERC2981Storage","nameLocations":["3343:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"3343:14:4"},"referencedDeclaration":1621,"src":"3343:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"}},"visibility":"internal"}],"id":1713,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1711,"name":"_getERC2981Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3370:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC2981Storage_$1621_storage_ptr_$","typeString":"function () pure returns (struct ERC2981Upgradeable.ERC2981Storage storage pointer)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3370:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3343:47:4"},{"assignments":[1716],"declarations":[{"constant":false,"id":1716,"mutability":"mutable","name":"_royaltyInfo","nameLocation":"3420:12:4","nodeType":"VariableDeclaration","scope":1766,"src":"3400:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo"},"typeName":{"id":1715,"nodeType":"UserDefinedTypeName","pathNode":{"id":1714,"name":"RoyaltyInfo","nameLocations":["3400:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":1611,"src":"3400:11:4"},"referencedDeclaration":1611,"src":"3400:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo"}},"visibility":"internal"}],"id":1721,"initialValue":{"baseExpression":{"expression":{"id":1717,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3435:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"id":1718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3437:17:4","memberName":"_tokenRoyaltyInfo","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"3435:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1611_storage_$","typeString":"mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo storage ref)"}},"id":1720,"indexExpression":{"id":1719,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"3455:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3435:28:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3400:63:4"},{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"royaltyReceiver","nameLocation":"3481:15:4","nodeType":"VariableDeclaration","scope":1766,"src":"3473:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"3473:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1726,"initialValue":{"expression":{"id":1724,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"3499:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage pointer"}},"id":1725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3512:8:4","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"3499:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3473:47:4"},{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"royaltyFraction","nameLocation":"3537:15:4","nodeType":"VariableDeclaration","scope":1766,"src":"3530:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1727,"name":"uint96","nodeType":"ElementaryTypeName","src":"3530:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1731,"initialValue":{"expression":{"id":1729,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"3555:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage pointer"}},"id":1730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3568:15:4","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"3555:28:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3530:53:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3598:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3625:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3617:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"3617:7:4","typeDescriptions":{}}},"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3617:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3598:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1751,"nodeType":"IfStatement","src":"3594:177:4","trueBody":{"id":1750,"nodeType":"Block","src":"3629:142:4","statements":[{"expression":{"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1738,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3643:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1739,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3661:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"id":1740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3663:19:4","memberName":"_defaultRoyaltyInfo","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"3661:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"id":1741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3683:8:4","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"3661:30:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3643:48:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1743,"nodeType":"ExpressionStatement","src":"3643:48:4"},{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3705:15:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1745,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3723:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"id":1746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3725:19:4","memberName":"_defaultRoyaltyInfo","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"3723:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"id":1747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3745:15:4","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"3723:37:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3705:55:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1749,"nodeType":"ExpressionStatement","src":"3705:55:4"}]}},{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"royaltyAmount","nameLocation":"3789:13:4","nodeType":"VariableDeclaration","scope":1766,"src":"3781:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3781:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1761,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"3806:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1755,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3818:15:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3806:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3805:29:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1758,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"3837:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3805:49:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3781:73:4"},{"expression":{"components":[{"id":1762,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"3873:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1763,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3890:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3872:32:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":1707,"id":1765,"nodeType":"Return","src":"3865:39:4"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"3162:24:4","text":"@inheritdoc IERC2981"},"functionSelector":"2a55205a","id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"3200:11:4","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"tokenId","nameLocation":"3229:7:4","nodeType":"VariableDeclaration","scope":1767,"src":"3221:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"3221:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"salePrice","nameLocation":"3254:9:4","nodeType":"VariableDeclaration","scope":1767,"src":"3246:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3211:58:4"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"receiver","nameLocation":"3307:8:4","nodeType":"VariableDeclaration","scope":1767,"src":"3299:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"3299:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"amount","nameLocation":"3325:6:4","nodeType":"VariableDeclaration","scope":1767,"src":"3317:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3298:34:4"},"scope":1925,"src":"3191:720:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1775,"nodeType":"Block","src":"4252:29:4","statements":[{"expression":{"hexValue":"3130303030","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4269:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":1772,"id":1774,"nodeType":"Return","src":"4262:12:4"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"3917:264:4","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"4195:15:4","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"4210:2:4"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1776,"src":"4244:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1770,"name":"uint96","nodeType":"ElementaryTypeName","src":"4244:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4243:8:4"},"scope":1925,"src":"4186:95:4","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"4626:482:4","statements":[{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"$","nameLocation":"4659:1:4","nodeType":"VariableDeclaration","scope":1829,"src":"4636:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"},"typeName":{"id":1785,"nodeType":"UserDefinedTypeName","pathNode":{"id":1784,"name":"ERC2981Storage","nameLocations":["4636:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"4636:14:4"},"referencedDeclaration":1621,"src":"4636:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"}},"visibility":"internal"}],"id":1789,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1787,"name":"_getERC2981Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"4663:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC2981Storage_$1621_storage_ptr_$","typeString":"function () pure returns (struct ERC2981Upgradeable.ERC2981Storage storage pointer)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4663:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4636:47:4"},{"assignments":[1791],"declarations":[{"constant":false,"id":1791,"mutability":"mutable","name":"denominator","nameLocation":"4701:11:4","nodeType":"VariableDeclaration","scope":1829,"src":"4693:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4693:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1794,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1792,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4715:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4715:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4693:39:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1795,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4746:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1796,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"4761:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4746:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1804,"nodeType":"IfStatement","src":"4742:173:4","trueBody":{"id":1803,"nodeType":"Block","src":"4774:141:4","statements":[{"errorCall":{"arguments":[{"id":1799,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4878:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1800,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"4892:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1798,"name":"ERC2981InvalidDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"4849:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4849:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1802,"nodeType":"RevertStatement","src":"4842:62:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4928:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4948:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4940:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1806,"name":"address","nodeType":"ElementaryTypeName","src":"4940:7:4","typeDescriptions":{}}},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4940:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4928:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1819,"nodeType":"IfStatement","src":"4924:108:4","trueBody":{"id":1818,"nodeType":"Block","src":"4952:80:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5018:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5010:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:4","typeDescriptions":{}}},"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5010:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1811,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"4973:36:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1817,"nodeType":"RevertStatement","src":"4966:55:4"}]}},{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1820,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"5042:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"id":1822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5044:19:4","memberName":"_defaultRoyaltyInfo","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"5042:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1824,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"5078:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1825,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5088:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1823,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5066:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1611_storage_ptr_$","typeString":"type(struct ERC2981Upgradeable.RoyaltyInfo storage pointer)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5066:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_memory_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo memory"}},"src":"5042:59:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"id":1828,"nodeType":"ExpressionStatement","src":"5042:59:4"}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"4287:250:4","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"4551:18:4","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"receiver","nameLocation":"4578:8:4","nodeType":"VariableDeclaration","scope":1830,"src":"4570:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"4570:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"feeNumerator","nameLocation":"4595:12:4","nodeType":"VariableDeclaration","scope":1830,"src":"4588:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1780,"name":"uint96","nodeType":"ElementaryTypeName","src":"4588:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4569:39:4"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"4626:0:4"},"scope":1925,"src":"4542:566:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"5229:102:4","statements":[{"assignments":[1836],"declarations":[{"constant":false,"id":1836,"mutability":"mutable","name":"$","nameLocation":"5262:1:4","nodeType":"VariableDeclaration","scope":1844,"src":"5239:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"},"typeName":{"id":1835,"nodeType":"UserDefinedTypeName","pathNode":{"id":1834,"name":"ERC2981Storage","nameLocations":["5239:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"5239:14:4"},"referencedDeclaration":1621,"src":"5239:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"}},"visibility":"internal"}],"id":1839,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1837,"name":"_getERC2981Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"5266:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC2981Storage_$1621_storage_ptr_$","typeString":"function () pure returns (struct ERC2981Upgradeable.ERC2981Storage storage pointer)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5266:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5239:47:4"},{"expression":{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5296:28:4","subExpression":{"expression":{"id":1840,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"5303:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"id":1841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5305:19:4","memberName":"_defaultRoyaltyInfo","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"5303:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"5296:28:4"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"5114:60:4","text":" @dev Removes default royalty information."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"5188:21:4","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"5209:2:4"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[],"src":"5229:0:4"},"scope":1925,"src":"5179:152:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1904,"nodeType":"Block","src":"5700:503:4","statements":[{"assignments":[1857],"declarations":[{"constant":false,"id":1857,"mutability":"mutable","name":"$","nameLocation":"5733:1:4","nodeType":"VariableDeclaration","scope":1904,"src":"5710:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"},"typeName":{"id":1856,"nodeType":"UserDefinedTypeName","pathNode":{"id":1855,"name":"ERC2981Storage","nameLocations":["5710:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"5710:14:4"},"referencedDeclaration":1621,"src":"5710:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"}},"visibility":"internal"}],"id":1860,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1858,"name":"_getERC2981Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"5737:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC2981Storage_$1621_storage_ptr_$","typeString":"function () pure returns (struct ERC2981Upgradeable.ERC2981Storage storage pointer)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5710:47:4"},{"assignments":[1862],"declarations":[{"constant":false,"id":1862,"mutability":"mutable","name":"denominator","nameLocation":"5775:11:4","nodeType":"VariableDeclaration","scope":1904,"src":"5767:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5767:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1863,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5789:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5767:39:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"5820:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1867,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5835:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5820:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1876,"nodeType":"IfStatement","src":"5816:180:4","trueBody":{"id":1875,"nodeType":"Block","src":"5848:148:4","statements":[{"errorCall":{"arguments":[{"id":1870,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"5950:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1871,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"5959:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1872,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5973:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1869,"name":"ERC2981InvalidTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"5923:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5923:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"RevertStatement","src":"5916:69:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6009:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6029:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6021:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"6021:7:4","typeDescriptions":{}}},"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6009:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"nodeType":"IfStatement","src":"6005:115:4","trueBody":{"id":1891,"nodeType":"Block","src":"6033:87:4","statements":[{"errorCall":{"arguments":[{"id":1884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"6089:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6106:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:4","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1883,"name":"ERC2981InvalidTokenRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"6054:34:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6054:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"RevertStatement","src":"6047:62:4"}]}},{"expression":{"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1893,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6130:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6132:17:4","memberName":"_tokenRoyaltyInfo","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"6130:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1611_storage_$","typeString":"mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo storage ref)"}},"id":1897,"indexExpression":{"id":1895,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"6150:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6130:28:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1899,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6173:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1900,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"6183:12:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1898,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"6161:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1611_storage_ptr_$","typeString":"type(struct ERC2981Upgradeable.RoyaltyInfo storage pointer)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6161:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_memory_ptr","typeString":"struct ERC2981Upgradeable.RoyaltyInfo memory"}},"src":"6130:66:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"id":1903,"nodeType":"ExpressionStatement","src":"6130:66:4"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"5337:259:4","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":1905,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"5610:16:4","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"tokenId","nameLocation":"5635:7:4","nodeType":"VariableDeclaration","scope":1905,"src":"5627:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"5627:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"receiver","nameLocation":"5652:8:4","nodeType":"VariableDeclaration","scope":1905,"src":"5644:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"5644:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"feeNumerator","nameLocation":"5669:12:4","nodeType":"VariableDeclaration","scope":1905,"src":"5662:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1851,"name":"uint96","nodeType":"ElementaryTypeName","src":"5662:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"5626:56:4"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"5700:0:4"},"scope":1925,"src":"5601:602:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"6371:109:4","statements":[{"assignments":[1913],"declarations":[{"constant":false,"id":1913,"mutability":"mutable","name":"$","nameLocation":"6404:1:4","nodeType":"VariableDeclaration","scope":1923,"src":"6381:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"},"typeName":{"id":1912,"nodeType":"UserDefinedTypeName","pathNode":{"id":1911,"name":"ERC2981Storage","nameLocations":["6381:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"6381:14:4"},"referencedDeclaration":1621,"src":"6381:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage"}},"visibility":"internal"}],"id":1916,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1914,"name":"_getERC2981Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"6408:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC2981Storage_$1621_storage_ptr_$","typeString":"function () pure returns (struct ERC2981Upgradeable.ERC2981Storage storage pointer)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6408:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6381:47:4"},{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6438:35:4","subExpression":{"baseExpression":{"expression":{"id":1917,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6445:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ERC2981Storage_$1621_storage_ptr","typeString":"struct ERC2981Upgradeable.ERC2981Storage storage pointer"}},"id":1918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6447:17:4","memberName":"_tokenRoyaltyInfo","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"6445:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1611_storage_$","typeString":"mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo storage ref)"}},"id":1920,"indexExpression":{"id":1919,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"6465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6445:28:4","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1611_storage","typeString":"struct ERC2981Upgradeable.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"6438:35:4"}]},"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"6209:95:4","text":" @dev Resets royalty information for the token id back to the global default."},"id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"6318:18:4","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"tokenId","nameLocation":"6345:7:4","nodeType":"VariableDeclaration","scope":1924,"src":"6337:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"6337:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6336:17:4"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"6371:0:4"},"scope":1925,"src":"6309:171:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1926,"src":"1285:5197:4","usedErrors":[211,214,1639,1644,1653,1660],"usedEvents":[219]}],"src":"108:6375:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1971],"Initializable":[462]},"id":1972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1927,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1972,"sourceUnit":463,"src":"126:63:5","symbolAliases":[{"foreign":{"id":1928,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"134:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1931,"name":"Initializable","nameLocations":["728:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"728:13:5"},"id":1932,"nodeType":"InheritanceSpecifier","src":"728:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"191:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1971,"linearizedBaseContracts":[1971,462],"name":"ContextUpgradeable","nameLocation":"706:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1937,"nodeType":"Block","src":"800:7:5","statements":[]},"id":1938,"implemented":true,"kind":"function","modifiers":[{"id":1935,"kind":"modifierInvocation","modifierName":{"id":1934,"name":"onlyInitializing","nameLocations":["783:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:5"},"nodeType":"ModifierInvocation","src":"783:16:5"}],"name":"__Context_init","nameLocation":"757:14:5","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"771:2:5"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[],"src":"800:0:5"},"scope":1971,"src":"748:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1943,"nodeType":"Block","src":"875:7:5","statements":[]},"id":1944,"implemented":true,"kind":"function","modifiers":[{"id":1941,"kind":"modifierInvocation","modifierName":{"id":1940,"name":"onlyInitializing","nameLocations":["858:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:5"},"nodeType":"ModifierInvocation","src":"858:16:5"}],"name":"__Context_init_unchained","nameLocation":"822:24:5","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"846:2:5"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"875:0:5"},"scope":1971,"src":"813:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"949:34:5","statements":[{"expression":{"expression":{"id":1949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:5","memberName":"sender","nodeType":"MemberAccess","src":"966:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1948,"id":1951,"nodeType":"Return","src":"959:17:5"}]},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:5","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[],"src":"906:2:5"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"940:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:5"},"scope":1971,"src":"887:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1961,"nodeType":"Block","src":"1056:32:5","statements":[{"expression":{"expression":{"id":1958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:5","memberName":"data","nodeType":"MemberAccess","src":"1073:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1957,"id":1960,"nodeType":"Return","src":"1066:15:5"}]},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:5","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"1006:2:5"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"1040:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1955,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:5"},"scope":1971,"src":"989:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1969,"nodeType":"Block","src":"1166:25:5","statements":[{"expression":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1966,"id":1968,"nodeType":"Return","src":"1176:8:5"}]},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:5","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"1123:2:5"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"1157:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:5"},"scope":1971,"src":"1094:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1972,"src":"688:505:5","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[462],"ReentrancyGuardUpgradeable":[2100]},"id":2101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1973,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":463,"src":"134:63:6","symbolAliases":[{"foreign":{"id":1974,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"142:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1977,"name":"Initializable","nameLocations":["1142:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1142:13:6"},"id":1978,"nodeType":"InheritanceSpecifier","src":"1142:13:6"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"199:894:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2100,"linearizedBaseContracts":[2100,462],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1981,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:6","nodeType":"VariableDeclaration","scope":2100,"src":"1910:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1984,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:6","nodeType":"VariableDeclaration","scope":2100,"src":"1956:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"1999:73:6","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1988,"members":[{"constant":false,"id":1987,"mutability":"mutable","name":"_status","nameLocation":"2125:7:6","nodeType":"VariableDeclaration","scope":1988,"src":"2117:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:6","nodeType":"StructDefinition","scope":2100,"src":"2077:62:6","visibility":"public"},{"constant":true,"id":1991,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:6","nodeType":"VariableDeclaration","scope":2100,"src":"2264:124:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:6","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1998,"nodeType":"Block","src":"2489:89:6","statements":[{"AST":{"nativeSrc":"2508:64:6","nodeType":"YulBlock","src":"2508:64:6","statements":[{"nativeSrc":"2522:40:6","nodeType":"YulAssignment","src":"2522:40:6","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:6","nodeType":"YulIdentifier","src":"2532:30:6"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:6","nodeType":"YulIdentifier","src":"2522:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1995,"isOffset":false,"isSlot":true,"src":"2522:6:6","suffix":"slot","valueSize":1},{"declaration":1991,"isOffset":false,"isSlot":false,"src":"2532:30:6","valueSize":1}],"id":1997,"nodeType":"InlineAssembly","src":"2499:73:6"}]},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:6","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"2430:2:6"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"$","nameLocation":"2486:1:6","nodeType":"VariableDeclaration","scope":1999,"src":"2455:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1994,"nodeType":"UserDefinedTypeName","pathNode":{"id":1993,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"2455:22:6"},"referencedDeclaration":1988,"src":"2455:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:6"},"scope":2100,"src":"2395:183:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"2584:52:6","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2002,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:6","nodeType":"ErrorDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[],"src":"2675:2:6"},"src":"2641:37:6"},{"body":{"id":2010,"nodeType":"Block","src":"2744:51:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2007,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2754:32:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"2754:34:6"}]},"id":2011,"implemented":true,"kind":"function","modifiers":[{"id":2005,"kind":"modifierInvocation","modifierName":{"id":2004,"name":"onlyInitializing","nameLocations":["2727:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2727:16:6"},"nodeType":"ModifierInvocation","src":"2727:16:6"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:6","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[],"src":"2715:2:6"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"2744:0:6"},"scope":2100,"src":"2684:111:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"2871:113:6","statements":[{"assignments":[2018],"declarations":[{"constant":false,"id":2018,"mutability":"mutable","name":"$","nameLocation":"2912:1:6","nodeType":"VariableDeclaration","scope":2028,"src":"2881:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2017,"nodeType":"UserDefinedTypeName","pathNode":{"id":2016,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"2881:22:6"},"referencedDeclaration":1988,"src":"2881:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2021,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2019,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2916:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1988_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:6"},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2022,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"2954:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1987,"src":"2954:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2025,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"2966:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"2954:23:6"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[{"id":2014,"kind":"modifierInvocation","modifierName":{"id":2013,"name":"onlyInitializing","nameLocations":["2854:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2854:16:6"},"nodeType":"ModifierInvocation","src":"2854:16:6"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:6","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"2842:2:6"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[],"src":"2871:0:6"},"scope":2100,"src":"2801:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2039,"nodeType":"Block","src":"3385:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2032,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"3395:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2034,"nodeType":"ExpressionStatement","src":"3395:21:6"},{"id":2035,"nodeType":"PlaceholderStatement","src":"3426:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2036,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"3437:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2038,"nodeType":"ExpressionStatement","src":"3437:20:6"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"2990:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2040,"name":"nonReentrant","nameLocation":"3370:12:6","nodeType":"ModifierDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"3382:2:6"},"src":"3361:103:6","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"3509:345:6","statements":[{"assignments":[2045],"declarations":[{"constant":false,"id":2045,"mutability":"mutable","name":"$","nameLocation":"3550:1:6","nodeType":"VariableDeclaration","scope":2064,"src":"3519:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2044,"nodeType":"UserDefinedTypeName","pathNode":{"id":2043,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"3519:22:6"},"referencedDeclaration":1988,"src":"3519:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2048,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2046,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3554:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1988_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2049,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"3670:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1987,"src":"3670:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2051,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"3683:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2057,"nodeType":"IfStatement","src":"3666:88:6","trueBody":{"id":2056,"nodeType":"Block","src":"3692:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2053,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3713:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2055,"nodeType":"RevertStatement","src":"3706:37:6"}]}},{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2058,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"3828:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1987,"src":"3828:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2061,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"3840:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"nodeType":"ExpressionStatement","src":"3828:19:6"}]},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:6","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[],"src":"3498:2:6"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[],"src":"3509:0:6"},"scope":2100,"src":"3470:384:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2080,"nodeType":"Block","src":"3898:245:6","statements":[{"assignments":[2070],"declarations":[{"constant":false,"id":2070,"mutability":"mutable","name":"$","nameLocation":"3939:1:6","nodeType":"VariableDeclaration","scope":2080,"src":"3908:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2069,"nodeType":"UserDefinedTypeName","pathNode":{"id":2068,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"3908:22:6"},"referencedDeclaration":1988,"src":"3908:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2073,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2071,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3943:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1988_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:6"},{"expression":{"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2074,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"4113:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1987,"src":"4113:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2077,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"4125:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2079,"nodeType":"ExpressionStatement","src":"4113:23:6"}]},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:6","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[],"src":"3887:2:6"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[],"src":"3898:0:6"},"scope":2100,"src":"3860:283:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2098,"nodeType":"Block","src":"4386:117:6","statements":[{"assignments":[2089],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"$","nameLocation":"4427:1:6","nodeType":"VariableDeclaration","scope":2098,"src":"4396:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2088,"nodeType":"UserDefinedTypeName","pathNode":{"id":2087,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"4396:22:6"},"referencedDeclaration":1988,"src":"4396:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2092,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2090,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"4431:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1988_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2093,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"4476:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1988_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1987,"src":"4476:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2095,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"4489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2086,"id":2097,"nodeType":"Return","src":"4469:27:6"}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"4149:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2099,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:6","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[],"src":"4354:2:6"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2099,"src":"4380:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2084,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:6"},"scope":2100,"src":"4322:181:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2101,"src":"1094:3411:6","usedErrors":[211,214,2002],"usedEvents":[219]}],"src":"109:4397:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2140],"IERC165":[6263],"Initializable":[462]},"id":2141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2102,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2141,"sourceUnit":6264,"src":"140:80:7","symbolAliases":[{"foreign":{"id":2103,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"148:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2141,"sourceUnit":463,"src":"221:66:7","symbolAliases":[{"foreign":{"id":2105,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"229:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2108,"name":"Initializable","nameLocations":["808:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"808:13:7"},"id":2109,"nodeType":"InheritanceSpecifier","src":"808:13:7"},{"baseName":{"id":2110,"name":"IERC165","nameLocations":["823:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":6263,"src":"823:7:7"},"id":2111,"nodeType":"InheritanceSpecifier","src":"823:7:7"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"289:479:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2140,"linearizedBaseContracts":[2140,6263,462],"name":"ERC165Upgradeable","nameLocation":"787:17:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2116,"nodeType":"Block","src":"888:7:7","statements":[]},"id":2117,"implemented":true,"kind":"function","modifiers":[{"id":2114,"kind":"modifierInvocation","modifierName":{"id":2113,"name":"onlyInitializing","nameLocations":["871:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"871:16:7"},"nodeType":"ModifierInvocation","src":"871:16:7"}],"name":"__ERC165_init","nameLocation":"846:13:7","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[],"src":"859:2:7"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[],"src":"888:0:7"},"scope":2140,"src":"837:58:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2122,"nodeType":"Block","src":"962:7:7","statements":[]},"id":2123,"implemented":true,"kind":"function","modifiers":[{"id":2120,"kind":"modifierInvocation","modifierName":{"id":2119,"name":"onlyInitializing","nameLocations":["945:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"945:16:7"},"nodeType":"ModifierInvocation","src":"945:16:7"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:7","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"933:2:7"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[],"src":"962:0:7"},"scope":2140,"src":"901:68:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6262],"body":{"id":2138,"nodeType":"Block","src":"1084:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2131,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"1101:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2133,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"1121:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6263_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6263_$","typeString":"type(contract IERC165)"}],"id":2132,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1116:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6263","typeString":"type(contract IERC165)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1130:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1116:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1101:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2130,"id":2137,"nodeType":"Return","src":"1094:47:7"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"974:23:7","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1011:17:7","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"interfaceId","nameLocation":"1036:11:7","nodeType":"VariableDeclaration","scope":2139,"src":"1029:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2125,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:20:7"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"1078:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2128,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1077:6:7"},"scope":2140,"src":"1002:146:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2141,"src":"769:381:7","usedErrors":[211,214],"usedEvents":[219]}],"src":"114:1037:7"},"id":7},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3469],"Ownable":[2288]},"id":2289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2142,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2289,"sourceUnit":3470,"src":"128:45:8","symbolAliases":[{"foreign":{"id":2143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"136:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2146,"name":"Context","nameLocations":["692:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3469,"src":"692:7:8"},"id":2147,"nodeType":"InheritanceSpecifier","src":"692:7:8"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"175:487:8","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2288,"linearizedBaseContracts":[2288,3469],"name":"Ownable","nameLocation":"681:7:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2149,"mutability":"mutable","name":"_owner","nameLocation":"722:6:8","nodeType":"VariableDeclaration","scope":2288,"src":"706:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"735:85:8","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":2154,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:8","nodeType":"ErrorDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"account","nameLocation":"866:7:8","nodeType":"VariableDeclaration","scope":2154,"src":"858:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:8"},"src":"825:50:8"},{"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"881:82:8","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":2159,"name":"OwnableInvalidOwner","nameLocation":"974:19:8","nodeType":"ErrorDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"owner","nameLocation":"1002:5:8","nodeType":"VariableDeclaration","scope":2159,"src":"994:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:8"},"src":"968:41:8"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2165,"name":"OwnershipTransferred","nameLocation":"1021:20:8","nodeType":"EventDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:8","nodeType":"VariableDeclaration","scope":2165,"src":"1042:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:8","nodeType":"VariableDeclaration","scope":2165,"src":"1073:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:8"},"src":"1015:84:8"},{"body":{"id":2190,"nodeType":"Block","src":"1259:153:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"1273:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:8","typeDescriptions":{}}},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2185,"nodeType":"IfStatement","src":"1269:95:8","trueBody":{"id":2184,"nodeType":"Block","src":"1301:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:8","typeDescriptions":{}}},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2177,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"1322:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"RevertStatement","src":"1315:38:8"}]}},{"expression":{"arguments":[{"id":2187,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"1392:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2186,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1373:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"ExpressionStatement","src":"1373:32:8"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"1105:115:8","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":2191,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:8","nodeType":"VariableDeclaration","scope":2191,"src":"1237:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:8"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[],"src":"1259:0:8"},"scope":2288,"src":"1225:187:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2198,"nodeType":"Block","src":"1521:41:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2194,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1531:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"1531:13:8"},{"id":2197,"nodeType":"PlaceholderStatement","src":"1554:1:8"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"1418:77:8","text":" @dev Throws if called by any account other than the owner."},"id":2199,"name":"onlyOwner","nameLocation":"1509:9:8","nodeType":"ModifierDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[],"src":"1518:2:8"},"src":"1500:62:8","virtual":false,"visibility":"internal"},{"body":{"id":2207,"nodeType":"Block","src":"1693:30:8","statements":[{"expression":{"id":2205,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1710:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2204,"id":2206,"nodeType":"Return","src":"1703:13:8"}]},"documentation":{"id":2200,"nodeType":"StructuredDocumentation","src":"1568:65:8","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:8","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"1652:2:8"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"1684:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:8"},"scope":2288,"src":"1638:85:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2224,"nodeType":"Block","src":"1841:117:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2212,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1855:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"1866:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"1851:101:8","trueBody":{"id":2222,"nodeType":"Block","src":"1880:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"1928:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2217,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"1901:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2221,"nodeType":"RevertStatement","src":"1894:47:8"}]}}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"1729:62:8","text":" @dev Throws if the sender is not the owner."},"id":2225,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:8","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"1816:2:8"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[],"src":"1841:0:8"},"scope":2288,"src":"1796:162:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"2347:47:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:8","typeDescriptions":{}}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2231,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2357:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2237,"nodeType":"ExpressionStatement","src":"2357:30:8"}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"1964:324:8","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2239,"implemented":true,"kind":"function","modifiers":[{"id":2229,"kind":"modifierInvocation","modifierName":{"id":2228,"name":"onlyOwner","nameLocations":["2337:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"2337:9:8"},"nodeType":"ModifierInvocation","src":"2337:9:8"}],"name":"renounceOwnership","nameLocation":"2302:17:8","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[],"src":"2319:2:8"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[],"src":"2347:0:8"},"scope":2288,"src":"2293:101:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2266,"nodeType":"Block","src":"2613:145:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"2627:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:8","typeDescriptions":{}}},"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2261,"nodeType":"IfStatement","src":"2623:91:8","trueBody":{"id":2260,"nodeType":"Block","src":"2651:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:8","typeDescriptions":{}}},"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2253,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2672:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2259,"nodeType":"RevertStatement","src":"2665:38:8"}]}},{"expression":{"arguments":[{"id":2263,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"2742:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2262,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2723:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2265,"nodeType":"ExpressionStatement","src":"2723:28:8"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"2400:138:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2267,"implemented":true,"kind":"function","modifiers":[{"id":2245,"kind":"modifierInvocation","modifierName":{"id":2244,"name":"onlyOwner","nameLocations":["2603:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"2603:9:8"},"nodeType":"ModifierInvocation","src":"2603:9:8"}],"name":"transferOwnership","nameLocation":"2552:17:8","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:8","nodeType":"VariableDeclaration","scope":2267,"src":"2570:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:8"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[],"src":"2613:0:8"},"scope":2288,"src":"2543:215:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2286,"nodeType":"Block","src":"2975:124:8","statements":[{"assignments":[2274],"declarations":[{"constant":false,"id":2274,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:8","nodeType":"VariableDeclaration","scope":2286,"src":"2985:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2276,"initialValue":{"id":2275,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3004:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:8"},{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2277,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3020:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2278,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3029:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2280,"nodeType":"ExpressionStatement","src":"3020:17:8"},{"eventCall":{"arguments":[{"id":2282,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"3073:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2283,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3083:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2281,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3052:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2285,"nodeType":"EmitStatement","src":"3047:45:8"}]},"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"2764:143:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2287,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:8","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:8","nodeType":"VariableDeclaration","scope":2287,"src":"2940:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:8"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[],"src":"2975:0:8"},"scope":2288,"src":"2912:187:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2289,"src":"663:2438:8","usedErrors":[2154,2159],"usedEvents":[2165]}],"src":"102:3000:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2309]},"id":2310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2290,"literals":["solidity",">=","0.4",".11"],"nodeType":"PragmaDirective","src":"107:25:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"134:101:9","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2309,"linearizedBaseContracts":[2309],"name":"IERC1967","nameLocation":"246:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"261:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2296,"name":"Upgraded","nameLocation":"340:8:9","nodeType":"EventDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"365:14:9","nodeType":"VariableDeclaration","scope":2296,"src":"349:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:32:9"},"src":"334:47:9"},{"anonymous":false,"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"387:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2303,"name":"AdminChanged","nameLocation":"465:12:9","nodeType":"EventDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"486:13:9","nodeType":"VariableDeclaration","scope":2303,"src":"478:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2301,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"509:8:9","nodeType":"VariableDeclaration","scope":2303,"src":"501:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2300,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:41:9"},"src":"459:60:9"},{"anonymous":false,"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"525:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2308,"name":"BeaconUpgraded","nameLocation":"595:14:9","nodeType":"EventDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"626:6:9","nodeType":"VariableDeclaration","scope":2308,"src":"610:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:24:9"},"src":"589:45:9"}],"scope":2310,"src":"236:400:9","usedErrors":[],"usedEvents":[2296,2303,2308]}],"src":"107:530:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[6263],"IERC2981":[2329]},"id":2330,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2311,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":2313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2330,"sourceUnit":6264,"src":"133:59:10","symbolAliases":[{"foreign":{"id":2312,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2315,"name":"IERC165","nameLocations":["476:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":6263,"src":"476:7:10"},"id":2316,"nodeType":"InheritanceSpecifier","src":"476:7:10"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"194:259:10","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":2329,"linearizedBaseContracts":[2329,6263],"name":"IERC2981","nameLocation":"464:8:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"490:473:10","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":2328,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:10","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:10","nodeType":"VariableDeclaration","scope":2328,"src":"998:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:10","nodeType":"VariableDeclaration","scope":2328,"src":"1023:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:10"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:10","nodeType":"VariableDeclaration","scope":2328,"src":"1070:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:10","nodeType":"VariableDeclaration","scope":2328,"src":"1088:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:10"},"scope":2329,"src":"968:143:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2330,"src":"454:659:10","usedErrors":[],"usedEvents":[]}],"src":"107:1007:10"},"id":10},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2466],"IERC20Errors":[2371],"IERC721Errors":[2419]},"id":2467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2331,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"138:141:11","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2371,"linearizedBaseContracts":[2371],"name":"IERC20Errors","nameLocation":"290:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"309:309:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2341,"name":"ERC20InsufficientBalance","nameLocation":"629:24:11","nodeType":"ErrorDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"sender","nameLocation":"662:6:11","nodeType":"VariableDeclaration","scope":2341,"src":"654:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"balance","nameLocation":"678:7:11","nodeType":"VariableDeclaration","scope":2341,"src":"670:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"needed","nameLocation":"695:6:11","nodeType":"VariableDeclaration","scope":2341,"src":"687:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:11"},"src":"623:80:11"},{"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"709:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2346,"name":"ERC20InvalidSender","nameLocation":"872:18:11","nodeType":"ErrorDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"sender","nameLocation":"899:6:11","nodeType":"VariableDeclaration","scope":2346,"src":"891:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:11"},"src":"866:41:11"},{"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"913:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2351,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:11","nodeType":"ErrorDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:11","nodeType":"VariableDeclaration","scope":2351,"src":"1104:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:11"},"src":"1077:45:11"},{"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"1128:345:11","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2360,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:11","nodeType":"ErrorDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"spender","nameLocation":"1519:7:11","nodeType":"VariableDeclaration","scope":2360,"src":"1511:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:11","nodeType":"VariableDeclaration","scope":2360,"src":"1528:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"needed","nameLocation":"1555:6:11","nodeType":"VariableDeclaration","scope":2360,"src":"1547:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:11"},"src":"1478:85:11"},{"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"1569:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2365,"name":"ERC20InvalidApprover","nameLocation":"1754:20:11","nodeType":"ErrorDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"approver","nameLocation":"1783:8:11","nodeType":"VariableDeclaration","scope":2365,"src":"1775:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:11"},"src":"1748:45:11"},{"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"1799:195:11","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2370,"name":"ERC20InvalidSpender","nameLocation":"2005:19:11","nodeType":"ErrorDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"spender","nameLocation":"2033:7:11","nodeType":"VariableDeclaration","scope":2370,"src":"2025:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:11"},"src":"1999:43:11"}],"scope":2467,"src":"280:1764:11","usedErrors":[2341,2346,2351,2360,2365,2370],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"2046:143:11","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2419,"linearizedBaseContracts":[2419],"name":"IERC721Errors","nameLocation":"2200:13:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"2220:219:11","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2377,"name":"ERC721InvalidOwner","nameLocation":"2450:18:11","nodeType":"ErrorDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"owner","nameLocation":"2477:5:11","nodeType":"VariableDeclaration","scope":2377,"src":"2469:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:11"},"src":"2444:40:11"},{"documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"2490:132:11","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2382,"name":"ERC721NonexistentToken","nameLocation":"2633:22:11","nodeType":"ErrorDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:11","nodeType":"VariableDeclaration","scope":2382,"src":"2656:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:11"},"src":"2627:46:11"},{"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"2679:289:11","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2391,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:11","nodeType":"ErrorDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"sender","nameLocation":"3008:6:11","nodeType":"VariableDeclaration","scope":2391,"src":"3000:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:11","nodeType":"VariableDeclaration","scope":2391,"src":"3016:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"owner","nameLocation":"3041:5:11","nodeType":"VariableDeclaration","scope":2391,"src":"3033:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:11"},"src":"2973:75:11"},{"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"3054:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2396,"name":"ERC721InvalidSender","nameLocation":"3217:19:11","nodeType":"ErrorDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"sender","nameLocation":"3245:6:11","nodeType":"VariableDeclaration","scope":2396,"src":"3237:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:11"},"src":"3211:42:11"},{"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"3259:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2401,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:11","nodeType":"ErrorDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:11","nodeType":"VariableDeclaration","scope":2401,"src":"3451:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:11"},"src":"3423:46:11"},{"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"3475:247:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2408,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:11","nodeType":"ErrorDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"operator","nameLocation":"3768:8:11","nodeType":"VariableDeclaration","scope":2408,"src":"3760:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2403,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:11","nodeType":"VariableDeclaration","scope":2408,"src":"3778:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:11"},"src":"3727:68:11"},{"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"3801:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2413,"name":"ERC721InvalidApprover","nameLocation":"3986:21:11","nodeType":"ErrorDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"approver","nameLocation":"4016:8:11","nodeType":"VariableDeclaration","scope":2413,"src":"4008:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:11"},"src":"3980:46:11"},{"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"4032:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2418,"name":"ERC721InvalidOperator","nameLocation":"4240:21:11","nodeType":"ErrorDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"operator","nameLocation":"4270:8:11","nodeType":"VariableDeclaration","scope":2418,"src":"4262:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2415,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:11"},"src":"4234:46:11"}],"scope":2467,"src":"2190:2092:11","usedErrors":[2377,2382,2391,2396,2401,2408,2413,2418],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"4284:145:11","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2466,"linearizedBaseContracts":[2466],"name":"IERC1155Errors","nameLocation":"4440:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"4461:361:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2431,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:11","nodeType":"ErrorDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"sender","nameLocation":"4868:6:11","nodeType":"VariableDeclaration","scope":2431,"src":"4860:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2422,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"balance","nameLocation":"4884:7:11","nodeType":"VariableDeclaration","scope":2431,"src":"4876:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"needed","nameLocation":"4901:6:11","nodeType":"VariableDeclaration","scope":2431,"src":"4893:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:11","nodeType":"VariableDeclaration","scope":2431,"src":"4909:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:11"},"src":"4827:99:11"},{"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"4932:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2436,"name":"ERC1155InvalidSender","nameLocation":"5095:20:11","nodeType":"ErrorDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"sender","nameLocation":"5124:6:11","nodeType":"VariableDeclaration","scope":2436,"src":"5116:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:11"},"src":"5089:43:11"},{"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"5138:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2441,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:11","nodeType":"ErrorDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:11","nodeType":"VariableDeclaration","scope":2441,"src":"5331:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2438,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:11"},"src":"5302:47:11"},{"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"5355:256:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2448,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:11","nodeType":"ErrorDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"operator","nameLocation":"5659:8:11","nodeType":"VariableDeclaration","scope":2448,"src":"5651:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"owner","nameLocation":"5677:5:11","nodeType":"VariableDeclaration","scope":2448,"src":"5669:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:11"},"src":"5616:68:11"},{"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"5690:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2453,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:11","nodeType":"ErrorDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"approver","nameLocation":"5906:8:11","nodeType":"VariableDeclaration","scope":2453,"src":"5898:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:11"},"src":"5869:47:11"},{"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"5922:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2458,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:11","nodeType":"ErrorDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"operator","nameLocation":"6161:8:11","nodeType":"VariableDeclaration","scope":2458,"src":"6153:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:11"},"src":"6124:47:11"},{"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"6177:280:11","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2465,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:11","nodeType":"ErrorDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:11","nodeType":"VariableDeclaration","scope":2465,"src":"6494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:11","nodeType":"VariableDeclaration","scope":2465,"src":"6513:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:11"},"src":"6462:73:11"}],"scope":2467,"src":"4430:2107:11","usedErrors":[2431,2436,2441,2448,2453,2458,2465],"usedEvents":[]}],"src":"112:6426:11"},"id":11},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"ERC1967Proxy":[2504],"ERC1967Utils":[2798],"Proxy":[2834]},"id":2505,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2468,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":2470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2505,"sourceUnit":2835,"src":"140:35:12","symbolAliases":[{"foreign":{"id":2469,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"148:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"./ERC1967Utils.sol","id":2472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2505,"sourceUnit":2799,"src":"176:48:12","symbolAliases":[{"foreign":{"id":2471,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"184:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2474,"name":"Proxy","nameLocations":["625:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2834,"src":"625:5:12"},"id":2475,"nodeType":"InheritanceSpecifier","src":"625:5:12"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"226:373:12","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":2504,"linearizedBaseContracts":[2504,2834],"name":"ERC1967Proxy","nameLocation":"609:12:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2490,"nodeType":"Block","src":"1145:69:12","statements":[{"expression":{"arguments":[{"id":2486,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"1185:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2487,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"1201:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2483,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"1155:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2798_$","typeString":"type(library ERC1967Utils)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:16:12","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"1155:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"ExpressionStatement","src":"1155:52:12"}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"637:439:12","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."},"id":2491,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"implementation","nameLocation":"1101:14:12","nodeType":"VariableDeclaration","scope":2491,"src":"1093:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"_data","nameLocation":"1130:5:12","nodeType":"VariableDeclaration","scope":2491,"src":"1117:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2479,"name":"bytes","nodeType":"ElementaryTypeName","src":"1117:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1092:44:12"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[],"src":"1145:0:12"},"scope":2504,"src":"1081:133:12","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[2815],"body":{"id":2502,"nodeType":"Block","src":"1659:56:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2498,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"1676:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2798_$","typeString":"type(library ERC1967Utils)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1689:17:12","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":2550,"src":"1676:30:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1676:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2497,"id":2501,"nodeType":"Return","src":"1669:39:12"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"1220:358:12","text":" @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1592:15:12","nodeType":"FunctionDefinition","overrides":{"id":2494,"nodeType":"OverrideSpecifier","overrides":[],"src":"1632:8:12"},"parameters":{"id":2493,"nodeType":"ParameterList","parameters":[],"src":"1607:2:12"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2503,"src":"1650:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2495,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:9:12"},"scope":2504,"src":"1583:132:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2505,"src":"600:1117:12","usedErrors":[2524,2537,3094,3482],"usedEvents":[2296]}],"src":"114:1604:12"},"id":12},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3344],"ERC1967Utils":[2798],"IBeacon":[2844],"IERC1967":[2309],"StorageSlot":[3736]},"id":2799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2506,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:13"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2799,"sourceUnit":2845,"src":"140:46:13","symbolAliases":[{"foreign":{"id":2507,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"148:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2799,"sourceUnit":2310,"src":"187:55:13","symbolAliases":[{"foreign":{"id":2509,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"195:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2799,"sourceUnit":3345,"src":"243:48:13","symbolAliases":[{"foreign":{"id":2511,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"251:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2799,"sourceUnit":3737,"src":"292:56:13","symbolAliases":[{"foreign":{"id":2513,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"300:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"350:145:13","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":2798,"linearizedBaseContracts":[2798],"name":"ERC1967Utils","nameLocation":"504:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"523:170:13","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":2519,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:13","nodeType":"VariableDeclaration","scope":2798,"src":"763:114:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:13","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"884:69:13","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":2524,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:13","nodeType":"ErrorDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:13","nodeType":"VariableDeclaration","scope":2524,"src":"993:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:13"},"src":"958:59:13"},{"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"1023:60:13","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":2529,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:13","nodeType":"ErrorDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"admin","nameLocation":"1122:5:13","nodeType":"VariableDeclaration","scope":2529,"src":"1114:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:13"},"src":"1088:41:13"},{"documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"1135:61:13","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":2534,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:13","nodeType":"ErrorDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:13","nodeType":"VariableDeclaration","scope":2534,"src":"1228:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:13"},"src":"1201:43:13"},{"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"1250:82:13","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":2537,"name":"ERC1967NonPayable","nameLocation":"1343:17:13","nodeType":"ErrorDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[],"src":"1360:2:13"},"src":"1337:26:13"},{"body":{"id":2549,"nodeType":"Block","src":"1502:77:13","statements":[{"expression":{"expression":{"arguments":[{"id":2545,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"1546:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2543,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"1519:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3736_$","typeString":"type(library StorageSlot)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3647,"src":"1519:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3618_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"1519:53:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2542,"id":2548,"nodeType":"Return","src":"1512:60:13"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"1369:67:13","text":" @dev Returns the current implementation address."},"id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:13","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[],"src":"1467:2:13"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"1493:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2540,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:13"},"scope":2798,"src":"1441:138:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2576,"nodeType":"Block","src":"1734:218:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2556,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1748:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:13","memberName":"code","nodeType":"MemberAccess","src":"1748:22:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:13","memberName":"length","nodeType":"MemberAccess","src":"1748:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"nodeType":"IfStatement","src":"1744:119:13","trueBody":{"id":2565,"nodeType":"Block","src":"1784:79:13","statements":[{"errorCall":{"arguments":[{"id":2562,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1834:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2561,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1805:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2564,"nodeType":"RevertStatement","src":"1798:54:13"}]}},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2570,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"1899:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2567,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"1872:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3736_$","typeString":"type(library StorageSlot)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3647,"src":"1872:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3618_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"1872:53:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2573,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1928:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2575,"nodeType":"ExpressionStatement","src":"1872:73:13"}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"1585:81:13","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2577,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:13","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:13","nodeType":"VariableDeclaration","scope":2577,"src":"1699:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2552,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:13"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[],"src":"1734:0:13"},"scope":2798,"src":"1671:281:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2612,"nodeType":"Block","src":"2345:263:13","statements":[{"expression":{"arguments":[{"id":2586,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2374:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2585,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"2355:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2588,"nodeType":"ExpressionStatement","src":"2355:37:13"},{"eventCall":{"arguments":[{"id":2592,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2425:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2589,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2407:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2309_$","typeString":"type(contract IERC1967)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:13","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2296,"src":"2407:17:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2594,"nodeType":"EmitStatement","src":"2402:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2595,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"2458:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:13","memberName":"length","nodeType":"MemberAccess","src":"2458:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2610,"nodeType":"Block","src":"2559:43:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2607,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"2573:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2609,"nodeType":"ExpressionStatement","src":"2573:18:13"}]},"id":2611,"nodeType":"IfStatement","src":"2454:148:13","trueBody":{"id":2606,"nodeType":"Block","src":"2475:78:13","statements":[{"expression":{"arguments":[{"id":2602,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2518:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2603,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"2537:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2599,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"2489:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3344_$","typeString":"type(library Address)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:13","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3261,"src":"2489:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2605,"nodeType":"ExpressionStatement","src":"2489:53:13"}]}}]},"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"1958:301:13","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:13","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:13","nodeType":"VariableDeclaration","scope":2613,"src":"2290:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"data","nameLocation":"2330:4:13","nodeType":"VariableDeclaration","scope":2613,"src":"2317:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2581,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:13"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[],"src":"2345:0:13"},"scope":2798,"src":"2264:344:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"2614:145:13","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2617,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:13","nodeType":"VariableDeclaration","scope":2798,"src":"2829:105:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:13","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2629,"nodeType":"Block","src":"3339:68:13","statements":[{"expression":{"expression":{"arguments":[{"id":2625,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3383:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2623,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"3356:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3736_$","typeString":"type(library StorageSlot)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3647,"src":"3356:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3618_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"3356:44:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2622,"id":2628,"nodeType":"Return","src":"3349:51:13"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"2941:341:13","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2630,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:13","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[],"src":"3304:2:13"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2630,"src":"3330:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:13"},"scope":2798,"src":"3287:120:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2660,"nodeType":"Block","src":"3535:172:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"3549:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:13","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"3545:91:13","trueBody":{"id":2649,"nodeType":"Block","src":"3573:63:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:13","typeDescriptions":{}}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2642,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3594:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"RevertStatement","src":"3587:38:13"}]}},{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2654,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3672:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2651,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"3645:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3736_$","typeString":"type(library StorageSlot)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3647,"src":"3645:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3618_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"3645:44:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2657,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"3692:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2659,"nodeType":"ExpressionStatement","src":"3645:55:13"}]},"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"3413:72:13","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2661,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:13","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:13","nodeType":"VariableDeclaration","scope":2661,"src":"3509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:13"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"3535:0:13"},"scope":2798,"src":"3490:217:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2679,"nodeType":"Block","src":"3875:94:13","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2670,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3912:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2672,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3924:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2667,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3890:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2309_$","typeString":"type(contract IERC1967)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:13","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2303,"src":"3890:21:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2674,"nodeType":"EmitStatement","src":"3885:48:13"},{"expression":{"arguments":[{"id":2676,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3953:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2675,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3943:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"3943:19:13"}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"3713:109:13","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2680,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:13","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:13","nodeType":"VariableDeclaration","scope":2680,"src":"3848:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:13"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[],"src":"3875:0:13"},"scope":2798,"src":"3827:142:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"3975:201:13","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2684,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:13","nodeType":"VariableDeclaration","scope":2798,"src":"4246:106:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:13","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"4468:69:13","statements":[{"expression":{"expression":{"arguments":[{"id":2692,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4512:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2690,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"4485:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3736_$","typeString":"type(library StorageSlot)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3647,"src":"4485:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3618_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"4485:45:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2689,"id":2695,"nodeType":"Return","src":"4478:52:13"}]},"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"4359:51:13","text":" @dev Returns the current beacon."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:13","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[],"src":"4433:2:13"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"4459:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:13"},"scope":2798,"src":"4415:122:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2742,"nodeType":"Block","src":"4667:390:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2703,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4681:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:13","memberName":"code","nodeType":"MemberAccess","src":"4681:14:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:13","memberName":"length","nodeType":"MemberAccess","src":"4681:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2713,"nodeType":"IfStatement","src":"4677:95:13","trueBody":{"id":2712,"nodeType":"Block","src":"4709:63:13","statements":[{"errorCall":{"arguments":[{"id":2709,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4751:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2708,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"4730:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"RevertStatement","src":"4723:38:13"}]}},{"expression":{"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2717,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4809:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2714,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"4782:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3736_$","typeString":"type(library StorageSlot)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:13","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3647,"src":"4782:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3618_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"4782:45:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2720,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4830:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2722,"nodeType":"ExpressionStatement","src":"4782:57:13"},{"assignments":[2724],"declarations":[{"constant":false,"id":2724,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:13","nodeType":"VariableDeclaration","scope":2742,"src":"4850:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2730,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2726,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4889:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2725,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"4881:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2844_$","typeString":"type(contract IBeacon)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2844","typeString":"contract IBeacon"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:13","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2843,"src":"4881:33:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2731,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"4930:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:13","memberName":"code","nodeType":"MemberAccess","src":"4930:25:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:13","memberName":"length","nodeType":"MemberAccess","src":"4930:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2741,"nodeType":"IfStatement","src":"4926:125:13","trueBody":{"id":2740,"nodeType":"Block","src":"4969:82:13","statements":[{"errorCall":{"arguments":[{"id":2737,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"5019:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2736,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"4990:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"RevertStatement","src":"4983:57:13"}]}}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"4543:72:13","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:13","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"4640:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:13"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[],"src":"4667:0:13"},"scope":2798,"src":"4620:437:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2782,"nodeType":"Block","src":"5661:263:13","statements":[{"expression":{"arguments":[{"id":2752,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"5682:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2751,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"5671:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"ExpressionStatement","src":"5671:21:13"},{"eventCall":{"arguments":[{"id":2758,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"5731:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2755,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"5707:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2309_$","typeString":"type(contract IERC1967)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:13","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2308,"src":"5707:23:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2760,"nodeType":"EmitStatement","src":"5702:39:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2761,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"5756:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:13","memberName":"length","nodeType":"MemberAccess","src":"5756:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2780,"nodeType":"Block","src":"5875:43:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2777,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"5889:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2779,"nodeType":"ExpressionStatement","src":"5889:18:13"}]},"id":2781,"nodeType":"IfStatement","src":"5752:166:13","trueBody":{"id":2776,"nodeType":"Block","src":"5773:96:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2769,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"5824:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2768,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"5816:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2844_$","typeString":"type(contract IBeacon)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2844","typeString":"contract IBeacon"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:13","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2843,"src":"5816:33:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2773,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"5853:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2765,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"5787:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3344_$","typeString":"type(library Address)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:13","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3261,"src":"5787:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2775,"nodeType":"ExpressionStatement","src":"5787:71:13"}]}}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"5063:514:13","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:13","nodeType":"FunctionDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:13","nodeType":"VariableDeclaration","scope":2783,"src":"5614:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"data","nameLocation":"5646:4:13","nodeType":"VariableDeclaration","scope":2783,"src":"5633:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2747,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:13"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[],"src":"5661:0:13"},"scope":2798,"src":"5582:342:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"6149:86:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:13","memberName":"value","nodeType":"MemberAccess","src":"6163:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2795,"nodeType":"IfStatement","src":"6159:70:13","trueBody":{"id":2794,"nodeType":"Block","src":"6178:51:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2791,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"6199:17:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2793,"nodeType":"RevertStatement","src":"6192:26:13"}]}}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"5930:178:13","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:13","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[],"src":"6138:2:13"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[],"src":"6149:0:13"},"scope":2798,"src":"6113:122:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2799,"src":"496:5741:13","usedErrors":[2524,2529,2534,2537],"usedEvents":[]}],"src":"114:6124:13"},"id":13},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[2834]},"id":2835,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":2801,"nodeType":"StructuredDocumentation","src":"125:598:14","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":2834,"linearizedBaseContracts":[2834],"name":"Proxy","nameLocation":"742:5:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2808,"nodeType":"Block","src":"1009:835:14","statements":[{"AST":{"nativeSrc":"1028:810:14","nodeType":"YulBlock","src":"1028:810:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1281:1:14","nodeType":"YulLiteral","src":"1281:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1284:1:14","nodeType":"YulLiteral","src":"1284:1:14","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1287:12:14","nodeType":"YulIdentifier","src":"1287:12:14"},"nativeSrc":"1287:14:14","nodeType":"YulFunctionCall","src":"1287:14:14"}],"functionName":{"name":"calldatacopy","nativeSrc":"1268:12:14","nodeType":"YulIdentifier","src":"1268:12:14"},"nativeSrc":"1268:34:14","nodeType":"YulFunctionCall","src":"1268:34:14"},"nativeSrc":"1268:34:14","nodeType":"YulExpressionStatement","src":"1268:34:14"},{"nativeSrc":"1429:74:14","nodeType":"YulVariableDeclaration","src":"1429:74:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1456:3:14","nodeType":"YulIdentifier","src":"1456:3:14"},"nativeSrc":"1456:5:14","nodeType":"YulFunctionCall","src":"1456:5:14"},{"name":"implementation","nativeSrc":"1463:14:14","nodeType":"YulIdentifier","src":"1463:14:14"},{"kind":"number","nativeSrc":"1479:1:14","nodeType":"YulLiteral","src":"1479:1:14","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1482:12:14","nodeType":"YulIdentifier","src":"1482:12:14"},"nativeSrc":"1482:14:14","nodeType":"YulFunctionCall","src":"1482:14:14"},{"kind":"number","nativeSrc":"1498:1:14","nodeType":"YulLiteral","src":"1498:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1501:1:14","nodeType":"YulLiteral","src":"1501:1:14","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1443:12:14","nodeType":"YulIdentifier","src":"1443:12:14"},"nativeSrc":"1443:60:14","nodeType":"YulFunctionCall","src":"1443:60:14"},"variables":[{"name":"result","nativeSrc":"1433:6:14","nodeType":"YulTypedName","src":"1433:6:14","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1571:1:14","nodeType":"YulLiteral","src":"1571:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1574:1:14","nodeType":"YulLiteral","src":"1574:1:14","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1577:14:14","nodeType":"YulIdentifier","src":"1577:14:14"},"nativeSrc":"1577:16:14","nodeType":"YulFunctionCall","src":"1577:16:14"}],"functionName":{"name":"returndatacopy","nativeSrc":"1556:14:14","nodeType":"YulIdentifier","src":"1556:14:14"},"nativeSrc":"1556:38:14","nodeType":"YulFunctionCall","src":"1556:38:14"},"nativeSrc":"1556:38:14","nodeType":"YulExpressionStatement","src":"1556:38:14"},{"cases":[{"body":{"nativeSrc":"1689:59:14","nodeType":"YulBlock","src":"1689:59:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1714:1:14","nodeType":"YulLiteral","src":"1714:1:14","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1717:14:14","nodeType":"YulIdentifier","src":"1717:14:14"},"nativeSrc":"1717:16:14","nodeType":"YulFunctionCall","src":"1717:16:14"}],"functionName":{"name":"revert","nativeSrc":"1707:6:14","nodeType":"YulIdentifier","src":"1707:6:14"},"nativeSrc":"1707:27:14","nodeType":"YulFunctionCall","src":"1707:27:14"},"nativeSrc":"1707:27:14","nodeType":"YulExpressionStatement","src":"1707:27:14"}]},"nativeSrc":"1682:66:14","nodeType":"YulCase","src":"1682:66:14","value":{"kind":"number","nativeSrc":"1687:1:14","nodeType":"YulLiteral","src":"1687:1:14","type":"","value":"0"}},{"body":{"nativeSrc":"1769:59:14","nodeType":"YulBlock","src":"1769:59:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1794:1:14","nodeType":"YulLiteral","src":"1794:1:14","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1797:14:14","nodeType":"YulIdentifier","src":"1797:14:14"},"nativeSrc":"1797:16:14","nodeType":"YulFunctionCall","src":"1797:16:14"}],"functionName":{"name":"return","nativeSrc":"1787:6:14","nodeType":"YulIdentifier","src":"1787:6:14"},"nativeSrc":"1787:27:14","nodeType":"YulFunctionCall","src":"1787:27:14"},"nativeSrc":"1787:27:14","nodeType":"YulExpressionStatement","src":"1787:27:14"}]},"nativeSrc":"1761:67:14","nodeType":"YulCase","src":"1761:67:14","value":"default"}],"expression":{"name":"result","nativeSrc":"1615:6:14","nodeType":"YulIdentifier","src":"1615:6:14"},"nativeSrc":"1608:220:14","nodeType":"YulSwitch","src":"1608:220:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2804,"isOffset":false,"isSlot":false,"src":"1463:14:14","valueSize":1}],"id":2807,"nodeType":"InlineAssembly","src":"1019:819:14"}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"754:190:14","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":2809,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:14","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"implementation","nameLocation":"976:14:14","nodeType":"VariableDeclaration","scope":2809,"src":"968:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:14"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[],"src":"1009:0:14"},"scope":2834,"src":"949:895:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":2810,"nodeType":"StructuredDocumentation","src":"1850:173:14","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":2815,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:14","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[],"src":"2052:2:14"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"2086:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:14"},"scope":2834,"src":"2028:67:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2824,"nodeType":"Block","src":"2361:45:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2820,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2381:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2819,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2371:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2823,"nodeType":"ExpressionStatement","src":"2371:28:14"}]},"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"2101:217:14","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:14","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[],"src":"2341:2:14"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"2361:0:14"},"scope":2834,"src":"2323:83:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"2639:28:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2829,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"2649:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2831,"nodeType":"ExpressionStatement","src":"2649:11:14"}]},"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"2412:186:14","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":2833,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"2611:2:14"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[],"src":"2639:0:14"},"scope":2834,"src":"2603:64:14","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":2835,"src":"724:1945:14","usedErrors":[],"usedEvents":[]}],"src":"99:2571:14"},"id":14},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2844]},"id":2845,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2836,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"108:25:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"135:79:15","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2844,"linearizedBaseContracts":[2844],"name":"IBeacon","nameLocation":"225:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"239:168:15","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2843,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"421:14:15","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[],"src":"435:2:15"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2843,"src":"461:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:9:15"},"scope":2844,"src":"412:58:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2845,"src":"215:257:15","usedErrors":[],"usedEvents":[]}],"src":"108:365:15"},"id":15},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[6263],"IERC721":[2961]},"id":2962,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2846,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2962,"sourceUnit":6264,"src":"134:62:16","symbolAliases":[{"foreign":{"id":2847,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"142:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2850,"name":"IERC165","nameLocations":["288:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":6263,"src":"288:7:16"},"id":2851,"nodeType":"InheritanceSpecifier","src":"288:7:16"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2849,"nodeType":"StructuredDocumentation","src":"198:68:16","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2961,"linearizedBaseContracts":[2961,6263],"name":"IERC721","nameLocation":"277:7:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2852,"nodeType":"StructuredDocumentation","src":"302:88:16","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2860,"name":"Transfer","nameLocation":"401:8:16","nodeType":"EventDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:16","nodeType":"VariableDeclaration","scope":2860,"src":"410:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2856,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:16","nodeType":"VariableDeclaration","scope":2860,"src":"432:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2858,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:16","nodeType":"VariableDeclaration","scope":2860,"src":"452:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:16"},"src":"395:82:16"},{"anonymous":false,"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"483:94:16","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2869,"name":"Approval","nameLocation":"588:8:16","nodeType":"EventDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:16","nodeType":"VariableDeclaration","scope":2869,"src":"597:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:16","nodeType":"VariableDeclaration","scope":2869,"src":"620:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2867,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:16","nodeType":"VariableDeclaration","scope":2869,"src":"646:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:16"},"src":"582:89:16"},{"anonymous":false,"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"677:117:16","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2878,"name":"ApprovalForAll","nameLocation":"805:14:16","nodeType":"EventDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:16","nodeType":"VariableDeclaration","scope":2878,"src":"820:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2871,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2874,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:16","nodeType":"VariableDeclaration","scope":2878,"src":"843:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2876,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:16","nodeType":"VariableDeclaration","scope":2878,"src":"869:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2875,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:16"},"src":"799:85:16"},{"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"890:76:16","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2886,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:16","nodeType":"FunctionDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"owner","nameLocation":"998:5:16","nodeType":"VariableDeclaration","scope":2886,"src":"990:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2880,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:16"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"balance","nameLocation":"1036:7:16","nodeType":"VariableDeclaration","scope":2886,"src":"1028:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:16"},"scope":2961,"src":"971:74:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"1051:131:16","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2894,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:16","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:16","nodeType":"VariableDeclaration","scope":2894,"src":"1204:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:16"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"owner","nameLocation":"1252:5:16","nodeType":"VariableDeclaration","scope":2894,"src":"1244:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2891,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:16"},"scope":2961,"src":"1187:72:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"1265:565:16","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2906,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:16","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"from","nameLocation":"1869:4:16","nodeType":"VariableDeclaration","scope":2906,"src":"1861:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"to","nameLocation":"1883:2:16","nodeType":"VariableDeclaration","scope":2906,"src":"1875:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:16","nodeType":"VariableDeclaration","scope":2906,"src":"1887:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"data","nameLocation":"1919:4:16","nodeType":"VariableDeclaration","scope":2906,"src":"1904:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2902,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:16"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[],"src":"1933:0:16"},"scope":2961,"src":"1835:99:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"1940:706:16","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2916,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:16","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"from","nameLocation":"2685:4:16","nodeType":"VariableDeclaration","scope":2916,"src":"2677:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"to","nameLocation":"2699:2:16","nodeType":"VariableDeclaration","scope":2916,"src":"2691:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:16","nodeType":"VariableDeclaration","scope":2916,"src":"2703:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:16"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[],"src":"2728:0:16"},"scope":2961,"src":"2651:78:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"2735:733:16","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2926,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:16","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"from","nameLocation":"3503:4:16","nodeType":"VariableDeclaration","scope":2926,"src":"3495:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"to","nameLocation":"3517:2:16","nodeType":"VariableDeclaration","scope":2926,"src":"3509:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2920,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:16","nodeType":"VariableDeclaration","scope":2926,"src":"3521:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:16"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[],"src":"3546:0:16"},"scope":2961,"src":"3473:74:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"3553:452:16","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2934,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:16","nodeType":"FunctionDefinition","parameters":{"id":2932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"to","nameLocation":"4035:2:16","nodeType":"VariableDeclaration","scope":2934,"src":"4027:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2931,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:16","nodeType":"VariableDeclaration","scope":2934,"src":"4039:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2930,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:16"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[],"src":"4064:0:16"},"scope":2961,"src":"4010:55:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"4071:315:16","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2942,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:16","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"operator","nameLocation":"4426:8:16","nodeType":"VariableDeclaration","scope":2942,"src":"4418:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2936,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"approved","nameLocation":"4441:8:16","nodeType":"VariableDeclaration","scope":2942,"src":"4436:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2938,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:16"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[],"src":"4459:0:16"},"scope":2961,"src":"4391:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"4466:139:16","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2950,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:16","nodeType":"FunctionDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:16","nodeType":"VariableDeclaration","scope":2950,"src":"4631:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:16"},"returnParameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"operator","nameLocation":"4679:8:16","nodeType":"VariableDeclaration","scope":2950,"src":"4671:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:16"},"scope":2961,"src":"4610:79:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"4695:138:16","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2960,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:16","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"owner","nameLocation":"4872:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"4864:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2952,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"operator","nameLocation":"4887:8:16","nodeType":"VariableDeclaration","scope":2960,"src":"4879:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:16"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2960,"src":"4920:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2957,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:16"},"scope":2961,"src":"4838:88:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2962,"src":"267:4661:16","usedErrors":[],"usedEvents":[2860,2869,2878]}],"src":"108:4821:16"},"id":16},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2979]},"id":2980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2963,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"142:154:17","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2979,"linearizedBaseContracts":[2979],"name":"IERC721Receiver","nameLocation":"307:15:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"329:500:17","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:17","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"operator","nameLocation":"877:8:17","nodeType":"VariableDeclaration","scope":2978,"src":"869:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"from","nameLocation":"903:4:17","nodeType":"VariableDeclaration","scope":2978,"src":"895:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:17","nodeType":"VariableDeclaration","scope":2978,"src":"917:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"data","nameLocation":"957:4:17","nodeType":"VariableDeclaration","scope":2978,"src":"942:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2972,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:17"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"986:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2975,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:17"},"scope":2979,"src":"834:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2980,"src":"297:699:17","usedErrors":[],"usedEvents":[]}],"src":"116:881:17"},"id":17},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2961],"IERC721Metadata":[3007]},"id":3008,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2981,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2983,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3008,"sourceUnit":2962,"src":"153:39:18","symbolAliases":[{"foreign":{"id":2982,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"161:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2985,"name":"IERC721","nameLocations":["357:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2961,"src":"357:7:18"},"id":2986,"nodeType":"InheritanceSpecifier","src":"357:7:18"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"194:133:18","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3007,"linearizedBaseContracts":[3007,2961,6263],"name":"IERC721Metadata","nameLocation":"338:15:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"371:58:18","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2992,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:18","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[],"src":"447:2:18"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2992,"src":"473:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2989,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:18"},"scope":3007,"src":"434:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"494:60:18","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2998,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:18","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[],"src":"574:2:18"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"600:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:18"},"scope":3007,"src":"559:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"621:90:18","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3006,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:18","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:18","nodeType":"VariableDeclaration","scope":3006,"src":"734:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:18"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3006,"src":"774:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3003,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:18"},"scope":3007,"src":"716:73:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3008,"src":"328:463:18","usedErrors":[],"usedEvents":[2860,2869,2878]}],"src":"127:665:18"},"id":18},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[3084],"IERC721Errors":[2419],"IERC721Receiver":[2979]},"id":3085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3009,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":3011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3085,"sourceUnit":2980,"src":"144:55:19","symbolAliases":[{"foreign":{"id":3010,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"152:15:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3085,"sourceUnit":2467,"src":"200:69:19","symbolAliases":[{"foreign":{"id":3012,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"208:13:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"271:159:19","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":3084,"linearizedBaseContracts":[3084],"name":"ERC721Utils","nameLocation":"439:11:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3082,"nodeType":"Block","src":"1159:760:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"1173:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:19","memberName":"code","nodeType":"MemberAccess","src":"1173:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:19","memberName":"length","nodeType":"MemberAccess","src":"1173:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"1169:744:19","trueBody":{"id":3080,"nodeType":"Block","src":"1193:720:19","statements":[{"clauses":[{"block":{"id":3058,"nodeType":"Block","src":"1303:214:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"1325:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3046,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"1335:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2979_$","typeString":"type(contract IERC721Receiver)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:19","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"1335:32:19","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:19","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3057,"nodeType":"IfStatement","src":"1321:182:19","trueBody":{"id":3056,"nodeType":"Block","src":"1378:125:19","statements":[{"errorCall":{"arguments":[{"id":3053,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"1481:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3050,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"1445:13:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$2419_$","typeString":"type(contract IERC721Errors)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:19","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"1445:35:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3055,"nodeType":"RevertStatement","src":"1438:46:19"}]}}]},"errorName":"","id":3059,"nodeType":"TryCatchClause","parameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"retval","nameLocation":"1295:6:19","nodeType":"VariableDeclaration","scope":3059,"src":"1288:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3042,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:19"},"src":"1279:238:19"},{"block":{"id":3077,"nodeType":"Block","src":"1546:357:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3063,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"1568:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:19","memberName":"length","nodeType":"MemberAccess","src":"1568:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3075,"nodeType":"Block","src":"1736:153:19","statements":[{"AST":{"nativeSrc":"1783:88:19","nodeType":"YulBlock","src":"1783:88:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:19","nodeType":"YulIdentifier","src":"1820:6:19"},{"kind":"number","nativeSrc":"1828:4:19","nodeType":"YulLiteral","src":"1828:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:19","nodeType":"YulIdentifier","src":"1816:3:19"},"nativeSrc":"1816:17:19","nodeType":"YulFunctionCall","src":"1816:17:19"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:19","nodeType":"YulIdentifier","src":"1841:6:19"}],"functionName":{"name":"mload","nativeSrc":"1835:5:19","nodeType":"YulIdentifier","src":"1835:5:19"},"nativeSrc":"1835:13:19","nodeType":"YulFunctionCall","src":"1835:13:19"}],"functionName":{"name":"revert","nativeSrc":"1809:6:19","nodeType":"YulIdentifier","src":"1809:6:19"},"nativeSrc":"1809:40:19","nodeType":"YulFunctionCall","src":"1809:40:19"},"nativeSrc":"1809:40:19","nodeType":"YulExpressionStatement","src":"1809:40:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3061,"isOffset":false,"isSlot":false,"src":"1820:6:19","valueSize":1},{"declaration":3061,"isOffset":false,"isSlot":false,"src":"1841:6:19","valueSize":1}],"flags":["memory-safe"],"id":3074,"nodeType":"InlineAssembly","src":"1758:113:19"}]},"id":3076,"nodeType":"IfStatement","src":"1564:325:19","trueBody":{"id":3073,"nodeType":"Block","src":"1588:142:19","statements":[{"errorCall":{"arguments":[{"id":3070,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"1708:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3067,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"1672:13:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$2419_$","typeString":"type(contract IERC721Errors)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:19","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"1672:35:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3072,"nodeType":"RevertStatement","src":"1665:46:19"}]}}]},"errorName":"","id":3078,"nodeType":"TryCatchClause","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"reason","nameLocation":"1538:6:19","nodeType":"VariableDeclaration","scope":3078,"src":"1525:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3060,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:19"},"src":"1518:385:19"}],"externalCall":{"arguments":[{"id":3037,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"1248:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3038,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"1258:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1264:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3040,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"1273:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3034,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"1227:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3033,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"1211:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2979_$","typeString":"type(contract IERC721Receiver)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2979","typeString":"contract IERC721Receiver"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:19","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"1211:36:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:19","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3079,"nodeType":"TryStatement","src":"1207:696:19"}]}}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"457:531:19","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":3083,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:19","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"operator","nameLocation":"1041:8:19","nodeType":"VariableDeclaration","scope":3083,"src":"1033:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"from","nameLocation":"1067:4:19","nodeType":"VariableDeclaration","scope":3083,"src":"1059:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"to","nameLocation":"1089:2:19","nodeType":"VariableDeclaration","scope":3083,"src":"1081:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:19","nodeType":"VariableDeclaration","scope":3083,"src":"1101:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"data","nameLocation":"1139:4:19","nodeType":"VariableDeclaration","scope":3083,"src":"1126:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3024,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:19"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[],"src":"1159:0:19"},"scope":3084,"src":"993:926:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3085,"src":"431:1490:19","usedErrors":[],"usedEvents":[]}],"src":"118:1804:19"},"id":19},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3344],"Errors":[3491]},"id":3345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3086,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":3088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3345,"sourceUnit":3492,"src":"127:36:20","symbolAliases":[{"foreign":{"id":3087,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"135:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"165:67:20","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3344,"linearizedBaseContracts":[3344],"name":"Address","nameLocation":"241:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"255:75:20","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":3094,"name":"AddressEmptyCode","nameLocation":"341:16:20","nodeType":"ErrorDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"target","nameLocation":"366:6:20","nodeType":"VariableDeclaration","scope":3094,"src":"358:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:20"},"src":"335:39:20"},{"body":{"id":3141,"nodeType":"Block","src":"1361:294:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3104,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3102,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:20","typeDescriptions":{}}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:20","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3107,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"1399:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3121,"nodeType":"IfStatement","src":"1371:125:20","trueBody":{"id":3120,"nodeType":"Block","src":"1407:89:20","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3114,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}],"id":3113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3112,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:20","typeDescriptions":{}}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:20","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"1478:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3109,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"1428:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3491_$","typeString":"type(library Errors)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:20","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"1428:26:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"RevertStatement","src":"1421:64:20"}]}},{"assignments":[3123,3125],"declarations":[{"constant":false,"id":3123,"mutability":"mutable","name":"success","nameLocation":"1512:7:20","nodeType":"VariableDeclaration","scope":3141,"src":"1507:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3122,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:20","nodeType":"VariableDeclaration","scope":3141,"src":"1521:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3124,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3132,"initialValue":{"arguments":[{"hexValue":"","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3126,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"1548:9:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:20","memberName":"call","nodeType":"MemberAccess","src":"1548:14:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3128,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"1570:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:20"},{"condition":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:20","subExpression":{"id":3133,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"1596:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"nodeType":"IfStatement","src":"1591:58:20","trueBody":{"id":3139,"nodeType":"Block","src":"1605:44:20","statements":[{"expression":{"arguments":[{"id":3136,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"1627:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3135,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"1619:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3138,"nodeType":"ExpressionStatement","src":"1619:19:20"}]}}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"380:905:20","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:20","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:20","nodeType":"VariableDeclaration","scope":3142,"src":"1309:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"amount","nameLocation":"1344:6:20","nodeType":"VariableDeclaration","scope":3142,"src":"1336:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:20"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[],"src":"1361:0:20"},"scope":3344,"src":"1290:365:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3158,"nodeType":"Block","src":"2589:62:20","statements":[{"expression":{"arguments":[{"id":3153,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"2628:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3154,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"2636:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3152,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"2606:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3151,"id":3157,"nodeType":"Return","src":"2599:45:20"}]},"documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"1661:834:20","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3159,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:20","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"target","nameLocation":"2530:6:20","nodeType":"VariableDeclaration","scope":3159,"src":"2522:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3144,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"data","nameLocation":"2551:4:20","nodeType":"VariableDeclaration","scope":3159,"src":"2538:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:20"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"2575:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3149,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:20"},"scope":3344,"src":"2500:151:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"3088:294:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3173,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}],"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3171,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:20","typeDescriptions":{}}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:20","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3126:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3190,"nodeType":"IfStatement","src":"3098:123:20","trueBody":{"id":3189,"nodeType":"Block","src":"3133:88:20","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3344","typeString":"library Address"}],"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:20","typeDescriptions":{}}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:20","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3204:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3178,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"3154:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3491_$","typeString":"type(library Errors)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:20","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"3154:26:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3188,"nodeType":"RevertStatement","src":"3147:63:20"}]}},{"assignments":[3192,3194],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"success","nameLocation":"3236:7:20","nodeType":"VariableDeclaration","scope":3208,"src":"3231:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3191,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:20","nodeType":"VariableDeclaration","scope":3208,"src":"3245:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3193,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3201,"initialValue":{"arguments":[{"id":3199,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"3298:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3195,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"3272:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:20","memberName":"call","nodeType":"MemberAccess","src":"3272:11:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"3291:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:20"},{"expression":{"arguments":[{"id":3203,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"3347:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3204,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3355:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3205,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"3364:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3202,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"3320:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3170,"id":3207,"nodeType":"Return","src":"3313:62:20"}]},"documentation":{"id":3160,"nodeType":"StructuredDocumentation","src":"2657:313:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:20","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"target","nameLocation":"3014:6:20","nodeType":"VariableDeclaration","scope":3209,"src":"3006:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3161,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"data","nameLocation":"3035:4:20","nodeType":"VariableDeclaration","scope":3209,"src":"3022:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3163,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"value","nameLocation":"3049:5:20","nodeType":"VariableDeclaration","scope":3209,"src":"3041:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:20"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"3074:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3168,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:20"},"scope":3344,"src":"2975:407:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3234,"nodeType":"Block","src":"3621:154:20","statements":[{"assignments":[3220,3222],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"success","nameLocation":"3637:7:20","nodeType":"VariableDeclaration","scope":3234,"src":"3632:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3219,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:20","nodeType":"VariableDeclaration","scope":3234,"src":"3646:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3221,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3227,"initialValue":{"arguments":[{"id":3225,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"3691:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3223,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3673:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:20","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:20","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:20"},{"expression":{"arguments":[{"id":3229,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3740:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3230,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"3748:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3231,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3757:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3228,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"3713:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3218,"id":3233,"nodeType":"Return","src":"3706:62:20"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"3388:128:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3235,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:20","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"target","nameLocation":"3557:6:20","nodeType":"VariableDeclaration","scope":3235,"src":"3549:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"data","nameLocation":"3578:4:20","nodeType":"VariableDeclaration","scope":3235,"src":"3565:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3213,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:20"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3235,"src":"3607:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3216,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:20"},"scope":3344,"src":"3521:254:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"4013:156:20","statements":[{"assignments":[3246,3248],"declarations":[{"constant":false,"id":3246,"mutability":"mutable","name":"success","nameLocation":"4029:7:20","nodeType":"VariableDeclaration","scope":3260,"src":"4024:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3245,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:20","nodeType":"VariableDeclaration","scope":3260,"src":"4038:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3247,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3253,"initialValue":{"arguments":[{"id":3251,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"4085:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3249,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"4065:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:20","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:20","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:20"},{"expression":{"arguments":[{"id":3255,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"4134:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3256,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"4142:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3257,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"4151:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3254,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"4107:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3244,"id":3259,"nodeType":"Return","src":"4100:62:20"}]},"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"3781:130:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:20","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"target","nameLocation":"3954:6:20","nodeType":"VariableDeclaration","scope":3261,"src":"3946:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"data","nameLocation":"3975:4:20","nodeType":"VariableDeclaration","scope":3261,"src":"3962:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3239,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:20"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"3999:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3242,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:20"},"scope":3344,"src":"3916:253:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"4595:424:20","statements":[{"condition":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:20","subExpression":{"id":3273,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"4610:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3298,"nodeType":"Block","src":"4669:344:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3280,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4857:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:20","memberName":"length","nodeType":"MemberAccess","src":"4857:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3284,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"4883:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:20","memberName":"code","nodeType":"MemberAccess","src":"4883:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:20","memberName":"length","nodeType":"MemberAccess","src":"4883:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3295,"nodeType":"IfStatement","src":"4853:119:20","trueBody":{"id":3294,"nodeType":"Block","src":"4908:64:20","statements":[{"errorCall":{"arguments":[{"id":3291,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"4950:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3290,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"4933:16:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"RevertStatement","src":"4926:31:20"}]}},{"expression":{"id":3296,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4992:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3272,"id":3297,"nodeType":"Return","src":"4985:17:20"}]},"id":3299,"nodeType":"IfStatement","src":"4605:408:20","trueBody":{"id":3279,"nodeType":"Block","src":"4619:44:20","statements":[{"expression":{"arguments":[{"id":3276,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"4641:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3275,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"4633:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3278,"nodeType":"ExpressionStatement","src":"4633:19:20"}]}}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"4175:257:20","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:20","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"target","nameLocation":"4490:6:20","nodeType":"VariableDeclaration","scope":3301,"src":"4482:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"success","nameLocation":"4511:7:20","nodeType":"VariableDeclaration","scope":3301,"src":"4506:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3265,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:20","nodeType":"VariableDeclaration","scope":3301,"src":"4528:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:20"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3301,"src":"4581:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3270,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:20"},"scope":3344,"src":"4437:582:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3322,"nodeType":"Block","src":"5323:122:20","statements":[{"condition":{"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:20","subExpression":{"id":3311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5338:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3320,"nodeType":"Block","src":"5397:42:20","statements":[{"expression":{"id":3318,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5418:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3310,"id":3319,"nodeType":"Return","src":"5411:17:20"}]},"id":3321,"nodeType":"IfStatement","src":"5333:106:20","trueBody":{"id":3317,"nodeType":"Block","src":"5347:44:20","statements":[{"expression":{"arguments":[{"id":3314,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5369:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3313,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"5361:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3316,"nodeType":"ExpressionStatement","src":"5361:19:20"}]}}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"5025:191:20","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:20","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"success","nameLocation":"5252:7:20","nodeType":"VariableDeclaration","scope":3323,"src":"5247:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3303,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:20","nodeType":"VariableDeclaration","scope":3323,"src":"5261:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3305,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:20"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3323,"src":"5309:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3308,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:20"},"scope":3344,"src":"5221:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3342,"nodeType":"Block","src":"5614:379:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3329,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"5690:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:20","memberName":"length","nodeType":"MemberAccess","src":"5690:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3340,"nodeType":"Block","src":"5936:51:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3335,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"5957:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3491_$","typeString":"type(library Errors)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:20","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"5957:17:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3339,"nodeType":"RevertStatement","src":"5950:26:20"}]},"id":3341,"nodeType":"IfStatement","src":"5686:301:20","trueBody":{"id":3334,"nodeType":"Block","src":"5713:217:20","statements":[{"AST":{"nativeSrc":"5840:80:20","nodeType":"YulBlock","src":"5840:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:20","nodeType":"YulIdentifier","src":"5869:10:20"},{"kind":"number","nativeSrc":"5881:4:20","nodeType":"YulLiteral","src":"5881:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:20","nodeType":"YulIdentifier","src":"5865:3:20"},"nativeSrc":"5865:21:20","nodeType":"YulFunctionCall","src":"5865:21:20"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:20","nodeType":"YulIdentifier","src":"5894:10:20"}],"functionName":{"name":"mload","nativeSrc":"5888:5:20","nodeType":"YulIdentifier","src":"5888:5:20"},"nativeSrc":"5888:17:20","nodeType":"YulFunctionCall","src":"5888:17:20"}],"functionName":{"name":"revert","nativeSrc":"5858:6:20","nodeType":"YulIdentifier","src":"5858:6:20"},"nativeSrc":"5858:48:20","nodeType":"YulFunctionCall","src":"5858:48:20"},"nativeSrc":"5858:48:20","nodeType":"YulExpressionStatement","src":"5858:48:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3326,"isOffset":false,"isSlot":false,"src":"5869:10:20","valueSize":1},{"declaration":3326,"isOffset":false,"isSlot":false,"src":"5894:10:20","valueSize":1}],"flags":["memory-safe"],"id":3333,"nodeType":"InlineAssembly","src":"5815:105:20"}]}}]},"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"5451:103:20","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:20","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:20","nodeType":"VariableDeclaration","scope":3343,"src":"5576:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3325,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:20"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[],"src":"5614:0:20"},"scope":3344,"src":"5559:434:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3345,"src":"233:5762:20","usedErrors":[3094],"usedEvents":[]}],"src":"101:5895:20"},"id":20},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[3439]},"id":3440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3346,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"126:75:21","text":" @dev Provides a set of functions to operate with Base64 strings."},"fullyImplemented":true,"id":3439,"linearizedBaseContracts":[3439],"name":"Base64","nameLocation":"210:6:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"223:131:21","text":" @dev Base64 Encoding/Decoding Table\n See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648"},"id":3351,"mutability":"constant","name":"_TABLE","nameLocation":"384:6:21","nodeType":"VariableDeclaration","scope":3439,"src":"359:100:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3349,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"393:66:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":3354,"mutability":"constant","name":"_TABLE_URL","nameLocation":"490:10:21","nodeType":"VariableDeclaration","scope":3439,"src":"465:104:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3352,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"503:66:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f7e6d3cba140c1411e96b7033571a229a3135b5c436a9698b398a19a1c64b50","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"},"visibility":"internal"},{"body":{"id":3368,"nodeType":"Block","src":"736:51:21","statements":[{"expression":{"arguments":[{"id":3363,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"761:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3364,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"767:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"775:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3362,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"753:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3361,"id":3367,"nodeType":"Return","src":"746:34:21"}]},"documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"576:82:21","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":3369,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"672:6:21","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"data","nameLocation":"692:4:21","nodeType":"VariableDeclaration","scope":3369,"src":"679:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3356,"name":"bytes","nodeType":"ElementaryTypeName","src":"679:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"678:19:21"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3369,"src":"721:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3359,"name":"string","nodeType":"ElementaryTypeName","src":"721:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"720:15:21"},"scope":3439,"src":"663:124:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3383,"nodeType":"Block","src":"1061:56:21","statements":[{"expression":{"arguments":[{"id":3378,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1086:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3379,"name":"_TABLE_URL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"1092:10:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1104:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3377,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"1078:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3376,"id":3382,"nodeType":"Return","src":"1071:39:21"}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"793:187:21","text":" @dev Converts a `bytes` to its Bytes64Url `string` representation.\n Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648]."},"id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"encodeURL","nameLocation":"994:9:21","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"data","nameLocation":"1017:4:21","nodeType":"VariableDeclaration","scope":3384,"src":"1004:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3371,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1003:19:21"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3384,"src":"1046:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3374,"name":"string","nodeType":"ElementaryTypeName","src":"1046:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1045:15:21"},"scope":3439,"src":"985:132:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3437,"nodeType":"Block","src":"1298:3882:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3396,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"1515:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1520:6:21","memberName":"length","nodeType":"MemberAccess","src":"1515:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1515:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":3402,"nodeType":"IfStatement","src":"1511:31:21","trueBody":{"expression":{"hexValue":"","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1540:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":3395,"id":3401,"nodeType":"Return","src":"1533:9:21"}},{"assignments":[3404],"declarations":[{"constant":false,"id":3404,"mutability":"mutable","name":"resultLength","nameLocation":"2488:12:21","nodeType":"VariableDeclaration","scope":3437,"src":"2480:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3426,"initialValue":{"condition":{"id":3405,"name":"withPadding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"2503:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2548:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3417,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"2552:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2557:6:21","memberName":"length","nodeType":"MemberAccess","src":"2552:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2566:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2548:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2547:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2571:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2547:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2503:69:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3407,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"2523:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:21","memberName":"length","nodeType":"MemberAccess","src":"2523:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2523:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2522:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2522:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2521:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2480:92:21"},{"assignments":[3428],"declarations":[{"constant":false,"id":3428,"mutability":"mutable","name":"result","nameLocation":"2597:6:21","nodeType":"VariableDeclaration","scope":3437,"src":"2583:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3427,"name":"string","nodeType":"ElementaryTypeName","src":"2583:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3433,"initialValue":{"arguments":[{"id":3431,"name":"resultLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"2617:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2606:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3429,"name":"string","nodeType":"ElementaryTypeName","src":"2610:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2583:47:21"},{"AST":{"nativeSrc":"2666:2484:21","nodeType":"YulBlock","src":"2666:2484:21","statements":[{"nativeSrc":"2751:29:21","nodeType":"YulVariableDeclaration","src":"2751:29:21","value":{"arguments":[{"name":"table","nativeSrc":"2771:5:21","nodeType":"YulIdentifier","src":"2771:5:21"},{"kind":"number","nativeSrc":"2778:1:21","nodeType":"YulLiteral","src":"2778:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2767:3:21","nodeType":"YulIdentifier","src":"2767:3:21"},"nativeSrc":"2767:13:21","nodeType":"YulFunctionCall","src":"2767:13:21"},"variables":[{"name":"tablePtr","nativeSrc":"2755:8:21","nodeType":"YulTypedName","src":"2755:8:21","type":""}]},{"nativeSrc":"2850:34:21","nodeType":"YulVariableDeclaration","src":"2850:34:21","value":{"arguments":[{"name":"result","nativeSrc":"2871:6:21","nodeType":"YulIdentifier","src":"2871:6:21"},{"kind":"number","nativeSrc":"2879:4:21","nodeType":"YulLiteral","src":"2879:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2867:3:21","nodeType":"YulIdentifier","src":"2867:3:21"},"nativeSrc":"2867:17:21","nodeType":"YulFunctionCall","src":"2867:17:21"},"variables":[{"name":"resultPtr","nativeSrc":"2854:9:21","nodeType":"YulTypedName","src":"2854:9:21","type":""}]},{"nativeSrc":"2897:19:21","nodeType":"YulVariableDeclaration","src":"2897:19:21","value":{"name":"data","nativeSrc":"2912:4:21","nodeType":"YulIdentifier","src":"2912:4:21"},"variables":[{"name":"dataPtr","nativeSrc":"2901:7:21","nodeType":"YulTypedName","src":"2901:7:21","type":""}]},{"nativeSrc":"2929:36:21","nodeType":"YulVariableDeclaration","src":"2929:36:21","value":{"arguments":[{"name":"data","nativeSrc":"2947:4:21","nodeType":"YulIdentifier","src":"2947:4:21"},{"arguments":[{"name":"data","nativeSrc":"2959:4:21","nodeType":"YulIdentifier","src":"2959:4:21"}],"functionName":{"name":"mload","nativeSrc":"2953:5:21","nodeType":"YulIdentifier","src":"2953:5:21"},"nativeSrc":"2953:11:21","nodeType":"YulFunctionCall","src":"2953:11:21"}],"functionName":{"name":"add","nativeSrc":"2943:3:21","nodeType":"YulIdentifier","src":"2943:3:21"},"nativeSrc":"2943:22:21","nodeType":"YulFunctionCall","src":"2943:22:21"},"variables":[{"name":"endPtr","nativeSrc":"2933:6:21","nodeType":"YulTypedName","src":"2933:6:21","type":""}]},{"nativeSrc":"3179:33:21","nodeType":"YulVariableDeclaration","src":"3179:33:21","value":{"arguments":[{"name":"endPtr","nativeSrc":"3199:6:21","nodeType":"YulIdentifier","src":"3199:6:21"},{"kind":"number","nativeSrc":"3207:4:21","nodeType":"YulLiteral","src":"3207:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3195:3:21","nodeType":"YulIdentifier","src":"3195:3:21"},"nativeSrc":"3195:17:21","nodeType":"YulFunctionCall","src":"3195:17:21"},"variables":[{"name":"afterPtr","nativeSrc":"3183:8:21","nodeType":"YulTypedName","src":"3183:8:21","type":""}]},{"nativeSrc":"3225:33:21","nodeType":"YulVariableDeclaration","src":"3225:33:21","value":{"arguments":[{"name":"afterPtr","nativeSrc":"3249:8:21","nodeType":"YulIdentifier","src":"3249:8:21"}],"functionName":{"name":"mload","nativeSrc":"3243:5:21","nodeType":"YulIdentifier","src":"3243:5:21"},"nativeSrc":"3243:15:21","nodeType":"YulFunctionCall","src":"3243:15:21"},"variables":[{"name":"afterCache","nativeSrc":"3229:10:21","nodeType":"YulTypedName","src":"3229:10:21","type":""}]},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"3278:8:21","nodeType":"YulIdentifier","src":"3278:8:21"},{"kind":"number","nativeSrc":"3288:4:21","nodeType":"YulLiteral","src":"3288:4:21","type":"","value":"0x00"}],"functionName":{"name":"mstore","nativeSrc":"3271:6:21","nodeType":"YulIdentifier","src":"3271:6:21"},"nativeSrc":"3271:22:21","nodeType":"YulFunctionCall","src":"3271:22:21"},"nativeSrc":"3271:22:21","nodeType":"YulExpressionStatement","src":"3271:22:21"},{"body":{"nativeSrc":"3390:1201:21","nodeType":"YulBlock","src":"3390:1201:21","statements":[{"nativeSrc":"3443:26:21","nodeType":"YulAssignment","src":"3443:26:21","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3458:7:21","nodeType":"YulIdentifier","src":"3458:7:21"},{"kind":"number","nativeSrc":"3467:1:21","nodeType":"YulLiteral","src":"3467:1:21","type":"","value":"3"}],"functionName":{"name":"add","nativeSrc":"3454:3:21","nodeType":"YulIdentifier","src":"3454:3:21"},"nativeSrc":"3454:15:21","nodeType":"YulFunctionCall","src":"3454:15:21"},"variableNames":[{"name":"dataPtr","nativeSrc":"3443:7:21","nodeType":"YulIdentifier","src":"3443:7:21"}]},{"nativeSrc":"3486:27:21","nodeType":"YulVariableDeclaration","src":"3486:27:21","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3505:7:21","nodeType":"YulIdentifier","src":"3505:7:21"}],"functionName":{"name":"mload","nativeSrc":"3499:5:21","nodeType":"YulIdentifier","src":"3499:5:21"},"nativeSrc":"3499:14:21","nodeType":"YulFunctionCall","src":"3499:14:21"},"variables":[{"name":"input","nativeSrc":"3490:5:21","nodeType":"YulTypedName","src":"3490:5:21","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4041:9:21","nodeType":"YulIdentifier","src":"4041:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4062:8:21","nodeType":"YulIdentifier","src":"4062:8:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4080:2:21","nodeType":"YulLiteral","src":"4080:2:21","type":"","value":"18"},{"name":"input","nativeSrc":"4084:5:21","nodeType":"YulIdentifier","src":"4084:5:21"}],"functionName":{"name":"shr","nativeSrc":"4076:3:21","nodeType":"YulIdentifier","src":"4076:3:21"},"nativeSrc":"4076:14:21","nodeType":"YulFunctionCall","src":"4076:14:21"},{"kind":"number","nativeSrc":"4092:4:21","nodeType":"YulLiteral","src":"4092:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4072:3:21","nodeType":"YulIdentifier","src":"4072:3:21"},"nativeSrc":"4072:25:21","nodeType":"YulFunctionCall","src":"4072:25:21"}],"functionName":{"name":"add","nativeSrc":"4058:3:21","nodeType":"YulIdentifier","src":"4058:3:21"},"nativeSrc":"4058:40:21","nodeType":"YulFunctionCall","src":"4058:40:21"}],"functionName":{"name":"mload","nativeSrc":"4052:5:21","nodeType":"YulIdentifier","src":"4052:5:21"},"nativeSrc":"4052:47:21","nodeType":"YulFunctionCall","src":"4052:47:21"}],"functionName":{"name":"mstore8","nativeSrc":"4033:7:21","nodeType":"YulIdentifier","src":"4033:7:21"},"nativeSrc":"4033:67:21","nodeType":"YulFunctionCall","src":"4033:67:21"},"nativeSrc":"4033:67:21","nodeType":"YulExpressionStatement","src":"4033:67:21"},{"nativeSrc":"4117:30:21","nodeType":"YulAssignment","src":"4117:30:21","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4134:9:21","nodeType":"YulIdentifier","src":"4134:9:21"},{"kind":"number","nativeSrc":"4145:1:21","nodeType":"YulLiteral","src":"4145:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4130:3:21","nodeType":"YulIdentifier","src":"4130:3:21"},"nativeSrc":"4130:17:21","nodeType":"YulFunctionCall","src":"4130:17:21"},"variableNames":[{"name":"resultPtr","nativeSrc":"4117:9:21","nodeType":"YulIdentifier","src":"4117:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4184:9:21","nodeType":"YulIdentifier","src":"4184:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4205:8:21","nodeType":"YulIdentifier","src":"4205:8:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4223:2:21","nodeType":"YulLiteral","src":"4223:2:21","type":"","value":"12"},{"name":"input","nativeSrc":"4227:5:21","nodeType":"YulIdentifier","src":"4227:5:21"}],"functionName":{"name":"shr","nativeSrc":"4219:3:21","nodeType":"YulIdentifier","src":"4219:3:21"},"nativeSrc":"4219:14:21","nodeType":"YulFunctionCall","src":"4219:14:21"},{"kind":"number","nativeSrc":"4235:4:21","nodeType":"YulLiteral","src":"4235:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4215:3:21","nodeType":"YulIdentifier","src":"4215:3:21"},"nativeSrc":"4215:25:21","nodeType":"YulFunctionCall","src":"4215:25:21"}],"functionName":{"name":"add","nativeSrc":"4201:3:21","nodeType":"YulIdentifier","src":"4201:3:21"},"nativeSrc":"4201:40:21","nodeType":"YulFunctionCall","src":"4201:40:21"}],"functionName":{"name":"mload","nativeSrc":"4195:5:21","nodeType":"YulIdentifier","src":"4195:5:21"},"nativeSrc":"4195:47:21","nodeType":"YulFunctionCall","src":"4195:47:21"}],"functionName":{"name":"mstore8","nativeSrc":"4176:7:21","nodeType":"YulIdentifier","src":"4176:7:21"},"nativeSrc":"4176:67:21","nodeType":"YulFunctionCall","src":"4176:67:21"},"nativeSrc":"4176:67:21","nodeType":"YulExpressionStatement","src":"4176:67:21"},{"nativeSrc":"4260:30:21","nodeType":"YulAssignment","src":"4260:30:21","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4277:9:21","nodeType":"YulIdentifier","src":"4277:9:21"},{"kind":"number","nativeSrc":"4288:1:21","nodeType":"YulLiteral","src":"4288:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4273:3:21","nodeType":"YulIdentifier","src":"4273:3:21"},"nativeSrc":"4273:17:21","nodeType":"YulFunctionCall","src":"4273:17:21"},"variableNames":[{"name":"resultPtr","nativeSrc":"4260:9:21","nodeType":"YulIdentifier","src":"4260:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4327:9:21","nodeType":"YulIdentifier","src":"4327:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4348:8:21","nodeType":"YulIdentifier","src":"4348:8:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4366:1:21","nodeType":"YulLiteral","src":"4366:1:21","type":"","value":"6"},{"name":"input","nativeSrc":"4369:5:21","nodeType":"YulIdentifier","src":"4369:5:21"}],"functionName":{"name":"shr","nativeSrc":"4362:3:21","nodeType":"YulIdentifier","src":"4362:3:21"},"nativeSrc":"4362:13:21","nodeType":"YulFunctionCall","src":"4362:13:21"},{"kind":"number","nativeSrc":"4377:4:21","nodeType":"YulLiteral","src":"4377:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4358:3:21","nodeType":"YulIdentifier","src":"4358:3:21"},"nativeSrc":"4358:24:21","nodeType":"YulFunctionCall","src":"4358:24:21"}],"functionName":{"name":"add","nativeSrc":"4344:3:21","nodeType":"YulIdentifier","src":"4344:3:21"},"nativeSrc":"4344:39:21","nodeType":"YulFunctionCall","src":"4344:39:21"}],"functionName":{"name":"mload","nativeSrc":"4338:5:21","nodeType":"YulIdentifier","src":"4338:5:21"},"nativeSrc":"4338:46:21","nodeType":"YulFunctionCall","src":"4338:46:21"}],"functionName":{"name":"mstore8","nativeSrc":"4319:7:21","nodeType":"YulIdentifier","src":"4319:7:21"},"nativeSrc":"4319:66:21","nodeType":"YulFunctionCall","src":"4319:66:21"},"nativeSrc":"4319:66:21","nodeType":"YulExpressionStatement","src":"4319:66:21"},{"nativeSrc":"4402:30:21","nodeType":"YulAssignment","src":"4402:30:21","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4419:9:21","nodeType":"YulIdentifier","src":"4419:9:21"},{"kind":"number","nativeSrc":"4430:1:21","nodeType":"YulLiteral","src":"4430:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4415:3:21","nodeType":"YulIdentifier","src":"4415:3:21"},"nativeSrc":"4415:17:21","nodeType":"YulFunctionCall","src":"4415:17:21"},"variableNames":[{"name":"resultPtr","nativeSrc":"4402:9:21","nodeType":"YulIdentifier","src":"4402:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4469:9:21","nodeType":"YulIdentifier","src":"4469:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4490:8:21","nodeType":"YulIdentifier","src":"4490:8:21"},{"arguments":[{"name":"input","nativeSrc":"4504:5:21","nodeType":"YulIdentifier","src":"4504:5:21"},{"kind":"number","nativeSrc":"4511:4:21","nodeType":"YulLiteral","src":"4511:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4500:3:21","nodeType":"YulIdentifier","src":"4500:3:21"},"nativeSrc":"4500:16:21","nodeType":"YulFunctionCall","src":"4500:16:21"}],"functionName":{"name":"add","nativeSrc":"4486:3:21","nodeType":"YulIdentifier","src":"4486:3:21"},"nativeSrc":"4486:31:21","nodeType":"YulFunctionCall","src":"4486:31:21"}],"functionName":{"name":"mload","nativeSrc":"4480:5:21","nodeType":"YulIdentifier","src":"4480:5:21"},"nativeSrc":"4480:38:21","nodeType":"YulFunctionCall","src":"4480:38:21"}],"functionName":{"name":"mstore8","nativeSrc":"4461:7:21","nodeType":"YulIdentifier","src":"4461:7:21"},"nativeSrc":"4461:58:21","nodeType":"YulFunctionCall","src":"4461:58:21"},"nativeSrc":"4461:58:21","nodeType":"YulExpressionStatement","src":"4461:58:21"},{"nativeSrc":"4536:30:21","nodeType":"YulAssignment","src":"4536:30:21","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4553:9:21","nodeType":"YulIdentifier","src":"4553:9:21"},{"kind":"number","nativeSrc":"4564:1:21","nodeType":"YulLiteral","src":"4564:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4549:3:21","nodeType":"YulIdentifier","src":"4549:3:21"},"nativeSrc":"4549:17:21","nodeType":"YulFunctionCall","src":"4549:17:21"},"variableNames":[{"name":"resultPtr","nativeSrc":"4536:9:21","nodeType":"YulIdentifier","src":"4536:9:21"}]}]},"condition":{"arguments":[{"name":"dataPtr","nativeSrc":"3370:7:21","nodeType":"YulIdentifier","src":"3370:7:21"},{"name":"endPtr","nativeSrc":"3379:6:21","nodeType":"YulIdentifier","src":"3379:6:21"}],"functionName":{"name":"lt","nativeSrc":"3367:2:21","nodeType":"YulIdentifier","src":"3367:2:21"},"nativeSrc":"3367:19:21","nodeType":"YulFunctionCall","src":"3367:19:21"},"nativeSrc":"3360:1231:21","nodeType":"YulForLoop","post":{"nativeSrc":"3387:2:21","nodeType":"YulBlock","src":"3387:2:21","statements":[]},"pre":{"nativeSrc":"3364:2:21","nodeType":"YulBlock","src":"3364:2:21","statements":[]},"src":"3360:1231:21"},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"4659:8:21","nodeType":"YulIdentifier","src":"4659:8:21"},{"name":"afterCache","nativeSrc":"4669:10:21","nodeType":"YulIdentifier","src":"4669:10:21"}],"functionName":{"name":"mstore","nativeSrc":"4652:6:21","nodeType":"YulIdentifier","src":"4652:6:21"},"nativeSrc":"4652:28:21","nodeType":"YulFunctionCall","src":"4652:28:21"},"nativeSrc":"4652:28:21","nodeType":"YulExpressionStatement","src":"4652:28:21"},{"body":{"nativeSrc":"4709:431:21","nodeType":"YulBlock","src":"4709:431:21","statements":[{"cases":[{"body":{"nativeSrc":"4905:125:21","nodeType":"YulBlock","src":"4905:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"4939:9:21","nodeType":"YulIdentifier","src":"4939:9:21"},{"kind":"number","nativeSrc":"4950:1:21","nodeType":"YulLiteral","src":"4950:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4935:3:21","nodeType":"YulIdentifier","src":"4935:3:21"},"nativeSrc":"4935:17:21","nodeType":"YulFunctionCall","src":"4935:17:21"},{"kind":"number","nativeSrc":"4954:4:21","nodeType":"YulLiteral","src":"4954:4:21","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"4927:7:21","nodeType":"YulIdentifier","src":"4927:7:21"},"nativeSrc":"4927:32:21","nodeType":"YulFunctionCall","src":"4927:32:21"},"nativeSrc":"4927:32:21","nodeType":"YulExpressionStatement","src":"4927:32:21"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"4992:9:21","nodeType":"YulIdentifier","src":"4992:9:21"},{"kind":"number","nativeSrc":"5003:1:21","nodeType":"YulLiteral","src":"5003:1:21","type":"","value":"2"}],"functionName":{"name":"sub","nativeSrc":"4988:3:21","nodeType":"YulIdentifier","src":"4988:3:21"},"nativeSrc":"4988:17:21","nodeType":"YulFunctionCall","src":"4988:17:21"},{"kind":"number","nativeSrc":"5007:4:21","nodeType":"YulLiteral","src":"5007:4:21","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"4980:7:21","nodeType":"YulIdentifier","src":"4980:7:21"},"nativeSrc":"4980:32:21","nodeType":"YulFunctionCall","src":"4980:32:21"},"nativeSrc":"4980:32:21","nodeType":"YulExpressionStatement","src":"4980:32:21"}]},"nativeSrc":"4898:132:21","nodeType":"YulCase","src":"4898:132:21","value":{"kind":"number","nativeSrc":"4903:1:21","nodeType":"YulLiteral","src":"4903:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"5054:72:21","nodeType":"YulBlock","src":"5054:72:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"5088:9:21","nodeType":"YulIdentifier","src":"5088:9:21"},{"kind":"number","nativeSrc":"5099:1:21","nodeType":"YulLiteral","src":"5099:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5084:3:21","nodeType":"YulIdentifier","src":"5084:3:21"},"nativeSrc":"5084:17:21","nodeType":"YulFunctionCall","src":"5084:17:21"},{"kind":"number","nativeSrc":"5103:4:21","nodeType":"YulLiteral","src":"5103:4:21","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"5076:7:21","nodeType":"YulIdentifier","src":"5076:7:21"},"nativeSrc":"5076:32:21","nodeType":"YulFunctionCall","src":"5076:32:21"},"nativeSrc":"5076:32:21","nodeType":"YulExpressionStatement","src":"5076:32:21"}]},"nativeSrc":"5047:79:21","nodeType":"YulCase","src":"5047:79:21","value":{"kind":"number","nativeSrc":"5052:1:21","nodeType":"YulLiteral","src":"5052:1:21","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"4872:4:21","nodeType":"YulIdentifier","src":"4872:4:21"}],"functionName":{"name":"mload","nativeSrc":"4866:5:21","nodeType":"YulIdentifier","src":"4866:5:21"},"nativeSrc":"4866:11:21","nodeType":"YulFunctionCall","src":"4866:11:21"},{"kind":"number","nativeSrc":"4879:1:21","nodeType":"YulLiteral","src":"4879:1:21","type":"","value":"3"}],"functionName":{"name":"mod","nativeSrc":"4862:3:21","nodeType":"YulIdentifier","src":"4862:3:21"},"nativeSrc":"4862:19:21","nodeType":"YulFunctionCall","src":"4862:19:21"},"nativeSrc":"4855:271:21","nodeType":"YulSwitch","src":"4855:271:21"}]},"condition":{"name":"withPadding","nativeSrc":"4697:11:21","nodeType":"YulIdentifier","src":"4697:11:21"},"nativeSrc":"4694:446:21","nodeType":"YulIf","src":"4694:446:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3387,"isOffset":false,"isSlot":false,"src":"2912:4:21","valueSize":1},{"declaration":3387,"isOffset":false,"isSlot":false,"src":"2947:4:21","valueSize":1},{"declaration":3387,"isOffset":false,"isSlot":false,"src":"2959:4:21","valueSize":1},{"declaration":3387,"isOffset":false,"isSlot":false,"src":"4872:4:21","valueSize":1},{"declaration":3428,"isOffset":false,"isSlot":false,"src":"2871:6:21","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"2771:5:21","valueSize":1},{"declaration":3391,"isOffset":false,"isSlot":false,"src":"4697:11:21","valueSize":1}],"flags":["memory-safe"],"id":3434,"nodeType":"InlineAssembly","src":"2641:2509:21"},{"expression":{"id":3435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"5167:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3395,"id":3436,"nodeType":"Return","src":"5160:13:21"}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"1123:58:21","text":" @dev Internal table-agnostic conversion"},"id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"_encode","nameLocation":"1195:7:21","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"data","nameLocation":"1216:4:21","nodeType":"VariableDeclaration","scope":3438,"src":"1203:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3386,"name":"bytes","nodeType":"ElementaryTypeName","src":"1203:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"table","nameLocation":"1236:5:21","nodeType":"VariableDeclaration","scope":3438,"src":"1222:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3388,"name":"string","nodeType":"ElementaryTypeName","src":"1222:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"withPadding","nameLocation":"1248:11:21","nodeType":"VariableDeclaration","scope":3438,"src":"1243:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3390,"name":"bool","nodeType":"ElementaryTypeName","src":"1243:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1202:58:21"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3438,"src":"1283:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3393,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:21"},"scope":3439,"src":"1186:3994:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3440,"src":"202:4980:21","usedErrors":[],"usedEvents":[]}],"src":"100:5083:21"},"id":21},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3469]},"id":3470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3441,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3442,"nodeType":"StructuredDocumentation","src":"127:496:22","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3469,"linearizedBaseContracts":[3469],"name":"Context","nameLocation":"642:7:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3450,"nodeType":"Block","src":"718:34:22","statements":[{"expression":{"expression":{"id":3447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:22","memberName":"sender","nodeType":"MemberAccess","src":"735:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3446,"id":3449,"nodeType":"Return","src":"728:17:22"}]},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:22","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[],"src":"675:2:22"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3451,"src":"709:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3444,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:22"},"scope":3469,"src":"656:96:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"825:32:22","statements":[{"expression":{"expression":{"id":3456,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:22","memberName":"data","nodeType":"MemberAccess","src":"842:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3455,"id":3458,"nodeType":"Return","src":"835:15:22"}]},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:22","nodeType":"FunctionDefinition","parameters":{"id":3452,"nodeType":"ParameterList","parameters":[],"src":"775:2:22"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3460,"src":"809:14:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3453,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:22"},"scope":3469,"src":"758:99:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"935:25:22","statements":[{"expression":{"hexValue":"30","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3464,"id":3466,"nodeType":"Return","src":"945:8:22"}]},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:22","nodeType":"FunctionDefinition","parameters":{"id":3461,"nodeType":"ParameterList","parameters":[],"src":"892:2:22"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3468,"src":"926:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:22"},"scope":3469,"src":"863:97:22","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3470,"src":"624:338:22","usedErrors":[],"usedEvents":[]}],"src":"101:862:22"},"id":22},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3491]},"id":3492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3471,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"126:284:23","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3491,"linearizedBaseContracts":[3491],"name":"Errors","nameLocation":"419:6:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"432:94:23","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3479,"name":"InsufficientBalance","nameLocation":"537:19:23","nodeType":"ErrorDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"balance","nameLocation":"565:7:23","nodeType":"VariableDeclaration","scope":3479,"src":"557:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"needed","nameLocation":"582:6:23","nodeType":"VariableDeclaration","scope":3479,"src":"574:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:23"},"src":"531:59:23"},{"documentation":{"id":3480,"nodeType":"StructuredDocumentation","src":"596:89:23","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3482,"name":"FailedCall","nameLocation":"696:10:23","nodeType":"ErrorDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[],"src":"706:2:23"},"src":"690:19:23"},{"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"715:46:23","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3485,"name":"FailedDeployment","nameLocation":"772:16:23","nodeType":"ErrorDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[],"src":"788:2:23"},"src":"766:25:23"},{"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"797:58:23","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3490,"name":"MissingPrecompile","nameLocation":"866:17:23","nodeType":"ErrorDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"884:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:23"},"src":"860:33:23"}],"scope":3492,"src":"411:484:23","usedErrors":[3479,3482,3485,3490],"usedEvents":[]}],"src":"100:796:23"},"id":23},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3543]},"id":3544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3493,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"125:489:24","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3543,"linearizedBaseContracts":[3543],"name":"Panic","nameLocation":"665:5:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3495,"nodeType":"StructuredDocumentation","src":"677:36:24","text":"@dev generic / unspecified error"},"id":3498,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:24","nodeType":"VariableDeclaration","scope":3543,"src":"718:40:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"764:37:24","text":"@dev used by the assert() builtin"},"id":3502,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:24","nodeType":"VariableDeclaration","scope":3543,"src":"806:39:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"851:41:24","text":"@dev arithmetic underflow or overflow"},"id":3506,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:24","nodeType":"VariableDeclaration","scope":3543,"src":"897:47:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:24","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3507,"nodeType":"StructuredDocumentation","src":"950:35:24","text":"@dev division or modulo by zero"},"id":3510,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:24","nodeType":"VariableDeclaration","scope":3543,"src":"990:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:24","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"1045:30:24","text":"@dev enum conversion error"},"id":3514,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:24","nodeType":"VariableDeclaration","scope":3543,"src":"1080:54:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:24","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"1140:36:24","text":"@dev invalid encoding in storage"},"id":3518,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:24","nodeType":"VariableDeclaration","scope":3543,"src":"1181:55:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:24","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"1242:24:24","text":"@dev empty array pop"},"id":3522,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:24","nodeType":"VariableDeclaration","scope":3543,"src":"1271:48:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:24","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"1325:35:24","text":"@dev array out of bounds access"},"id":3526,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:24","nodeType":"VariableDeclaration","scope":3543,"src":"1365:52:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:24","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"1423:65:24","text":"@dev resource error (too large allocation or too large array)"},"id":3530,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:24","nodeType":"VariableDeclaration","scope":3543,"src":"1493:47:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:24","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"1546:42:24","text":"@dev calling invalid internal function"},"id":3534,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:24","nodeType":"VariableDeclaration","scope":3543,"src":"1593:58:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:24","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3541,"nodeType":"Block","src":"1819:151:24","statements":[{"AST":{"nativeSrc":"1854:110:24","nodeType":"YulBlock","src":"1854:110:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:24","nodeType":"YulLiteral","src":"1875:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:24","nodeType":"YulLiteral","src":"1881:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:24","nodeType":"YulIdentifier","src":"1868:6:24"},"nativeSrc":"1868:24:24","nodeType":"YulFunctionCall","src":"1868:24:24"},"nativeSrc":"1868:24:24","nodeType":"YulExpressionStatement","src":"1868:24:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:24","nodeType":"YulLiteral","src":"1912:4:24","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:24","nodeType":"YulIdentifier","src":"1918:4:24"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:24","nodeType":"YulIdentifier","src":"1905:6:24"},"nativeSrc":"1905:18:24","nodeType":"YulFunctionCall","src":"1905:18:24"},"nativeSrc":"1905:18:24","nodeType":"YulExpressionStatement","src":"1905:18:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:24","nodeType":"YulLiteral","src":"1943:4:24","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:24","nodeType":"YulLiteral","src":"1949:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:24","nodeType":"YulIdentifier","src":"1936:6:24"},"nativeSrc":"1936:18:24","nodeType":"YulFunctionCall","src":"1936:18:24"},"nativeSrc":"1936:18:24","nodeType":"YulExpressionStatement","src":"1936:18:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3537,"isOffset":false,"isSlot":false,"src":"1918:4:24","valueSize":1}],"flags":["memory-safe"],"id":3540,"nodeType":"InlineAssembly","src":"1829:135:24"}]},"documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"1658:113:24","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:24","nodeType":"FunctionDefinition","parameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"code","nameLocation":"1799:4:24","nodeType":"VariableDeclaration","scope":3542,"src":"1791:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:24"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[],"src":"1819:0:24"},"scope":3543,"src":"1776:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3544,"src":"657:1315:24","usedErrors":[],"usedEvents":[]}],"src":"99:1874:24"},"id":24},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3612]},"id":3613,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3545,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"135:894:25","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3612,"linearizedBaseContracts":[3612],"name":"ReentrancyGuard","nameLocation":"1048:15:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3549,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:25","nodeType":"VariableDeclaration","scope":3612,"src":"1818:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3552,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:25","nodeType":"VariableDeclaration","scope":3612,"src":"1864:36:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3554,"mutability":"mutable","name":"_status","nameLocation":"1923:7:25","nodeType":"VariableDeclaration","scope":3612,"src":"1907:23:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3555,"nodeType":"StructuredDocumentation","src":"1937:52:25","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3557,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:25","nodeType":"ErrorDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[],"src":"2028:2:25"},"src":"1994:37:25"},{"body":{"id":3564,"nodeType":"Block","src":"2051:38:25","statements":[{"expression":{"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3560,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2061:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3561,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"2071:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ExpressionStatement","src":"2061:21:25"}]},"id":3565,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[],"src":"2048:2:25"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"2051:0:25"},"scope":3612,"src":"2037:52:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3575,"nodeType":"Block","src":"2490:79:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3568,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"2500:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3570,"nodeType":"ExpressionStatement","src":"2500:21:25"},{"id":3571,"nodeType":"PlaceholderStatement","src":"2531:1:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3572,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"2542:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3574,"nodeType":"ExpressionStatement","src":"2542:20:25"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"2095:366:25","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3576,"name":"nonReentrant","nameLocation":"2475:12:25","nodeType":"ModifierDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[],"src":"2487:2:25"},"src":"2466:103:25","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"2614:268:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3580,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2713:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"2698:86:25","trueBody":{"id":3585,"nodeType":"Block","src":"2722:62:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3582,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"2743:28:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3584,"nodeType":"RevertStatement","src":"2736:37:25"}]}},{"expression":{"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2858:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3588,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2868:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3590,"nodeType":"ExpressionStatement","src":"2858:17:25"}]},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:25","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[],"src":"2603:2:25"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[],"src":"2614:0:25"},"scope":3612,"src":"2575:307:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3599,"nodeType":"Block","src":"2926:170:25","statements":[{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"3068:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3596,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"3078:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"3068:21:25"}]},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:25","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[],"src":"2915:2:25"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[],"src":"2926:0:25"},"scope":3612,"src":"2888:208:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3610,"nodeType":"Block","src":"3339:42:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"3356:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3607,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"3367:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3605,"id":3609,"nodeType":"Return","src":"3349:25:25"}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"3102:168:25","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3611,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:25","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[],"src":"3307:2:25"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3611,"src":"3333:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3603,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:25"},"scope":3612,"src":"3275:106:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3613,"src":"1030:2353:25","usedErrors":[3557],"usedEvents":[]}],"src":"109:3275:25"},"id":25},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3736]},"id":3737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3614,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"219:1187:26","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3736,"linearizedBaseContracts":[3736],"name":"StorageSlot","nameLocation":"1415:11:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3618,"members":[{"constant":false,"id":3617,"mutability":"mutable","name":"value","nameLocation":"1470:5:26","nodeType":"VariableDeclaration","scope":3618,"src":"1462:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:26","nodeType":"StructDefinition","scope":3736,"src":"1433:49:26","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3621,"members":[{"constant":false,"id":3620,"mutability":"mutable","name":"value","nameLocation":"1522:5:26","nodeType":"VariableDeclaration","scope":3621,"src":"1517:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3619,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:26","nodeType":"StructDefinition","scope":3736,"src":"1488:46:26","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3624,"members":[{"constant":false,"id":3623,"mutability":"mutable","name":"value","nameLocation":"1577:5:26","nodeType":"VariableDeclaration","scope":3624,"src":"1569:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:26","nodeType":"StructDefinition","scope":3736,"src":"1540:49:26","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3627,"members":[{"constant":false,"id":3626,"mutability":"mutable","name":"value","nameLocation":"1632:5:26","nodeType":"VariableDeclaration","scope":3627,"src":"1624:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:26","nodeType":"StructDefinition","scope":3736,"src":"1595:49:26","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3630,"members":[{"constant":false,"id":3629,"mutability":"mutable","name":"value","nameLocation":"1685:5:26","nodeType":"VariableDeclaration","scope":3630,"src":"1678:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3628,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:26","nodeType":"StructDefinition","scope":3736,"src":"1650:47:26","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3633,"members":[{"constant":false,"id":3632,"mutability":"mutable","name":"value","nameLocation":"1738:5:26","nodeType":"VariableDeclaration","scope":3633,"src":"1731:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3631,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:26","nodeType":"StructDefinition","scope":3736,"src":"1703:47:26","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3636,"members":[{"constant":false,"id":3635,"mutability":"mutable","name":"value","nameLocation":"1789:5:26","nodeType":"VariableDeclaration","scope":3636,"src":"1783:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:26","nodeType":"StructDefinition","scope":3736,"src":"1756:45:26","visibility":"public"},{"body":{"id":3646,"nodeType":"Block","src":"1983:79:26","statements":[{"AST":{"nativeSrc":"2018:38:26","nodeType":"YulBlock","src":"2018:38:26","statements":[{"nativeSrc":"2032:14:26","nodeType":"YulAssignment","src":"2032:14:26","value":{"name":"slot","nativeSrc":"2042:4:26","nodeType":"YulIdentifier","src":"2042:4:26"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:26","nodeType":"YulIdentifier","src":"2032:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3643,"isOffset":false,"isSlot":true,"src":"2032:6:26","suffix":"slot","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"2042:4:26","valueSize":1}],"flags":["memory-safe"],"id":3645,"nodeType":"InlineAssembly","src":"1993:63:26"}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"1807:87:26","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:26","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"slot","nameLocation":"1931:4:26","nodeType":"VariableDeclaration","scope":3647,"src":"1923:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:26"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"r","nameLocation":"1980:1:26","nodeType":"VariableDeclaration","scope":3647,"src":"1960:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3642,"nodeType":"UserDefinedTypeName","pathNode":{"id":3641,"name":"AddressSlot","nameLocations":["1960:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3618,"src":"1960:11:26"},"referencedDeclaration":3618,"src":"1960:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3618_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:26"},"scope":3736,"src":"1899:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3657,"nodeType":"Block","src":"2243:79:26","statements":[{"AST":{"nativeSrc":"2278:38:26","nodeType":"YulBlock","src":"2278:38:26","statements":[{"nativeSrc":"2292:14:26","nodeType":"YulAssignment","src":"2292:14:26","value":{"name":"slot","nativeSrc":"2302:4:26","nodeType":"YulIdentifier","src":"2302:4:26"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:26","nodeType":"YulIdentifier","src":"2292:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3654,"isOffset":false,"isSlot":true,"src":"2292:6:26","suffix":"slot","valueSize":1},{"declaration":3650,"isOffset":false,"isSlot":false,"src":"2302:4:26","valueSize":1}],"flags":["memory-safe"],"id":3656,"nodeType":"InlineAssembly","src":"2253:63:26"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"2068:86:26","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3658,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:26","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"slot","nameLocation":"2191:4:26","nodeType":"VariableDeclaration","scope":3658,"src":"2183:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:26"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"r","nameLocation":"2240:1:26","nodeType":"VariableDeclaration","scope":3658,"src":"2220:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3621_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3653,"nodeType":"UserDefinedTypeName","pathNode":{"id":3652,"name":"BooleanSlot","nameLocations":["2220:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3621,"src":"2220:11:26"},"referencedDeclaration":3621,"src":"2220:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3621_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:26"},"scope":3736,"src":"2159:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"2503:79:26","statements":[{"AST":{"nativeSrc":"2538:38:26","nodeType":"YulBlock","src":"2538:38:26","statements":[{"nativeSrc":"2552:14:26","nodeType":"YulAssignment","src":"2552:14:26","value":{"name":"slot","nativeSrc":"2562:4:26","nodeType":"YulIdentifier","src":"2562:4:26"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:26","nodeType":"YulIdentifier","src":"2552:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3665,"isOffset":false,"isSlot":true,"src":"2552:6:26","suffix":"slot","valueSize":1},{"declaration":3661,"isOffset":false,"isSlot":false,"src":"2562:4:26","valueSize":1}],"flags":["memory-safe"],"id":3667,"nodeType":"InlineAssembly","src":"2513:63:26"}]},"documentation":{"id":3659,"nodeType":"StructuredDocumentation","src":"2328:86:26","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:26","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"slot","nameLocation":"2451:4:26","nodeType":"VariableDeclaration","scope":3669,"src":"2443:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:26"},"returnParameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"r","nameLocation":"2500:1:26","nodeType":"VariableDeclaration","scope":3669,"src":"2480:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3624_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3664,"nodeType":"UserDefinedTypeName","pathNode":{"id":3663,"name":"Bytes32Slot","nameLocations":["2480:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3624,"src":"2480:11:26"},"referencedDeclaration":3624,"src":"2480:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3624_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:26"},"scope":3736,"src":"2419:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3679,"nodeType":"Block","src":"2763:79:26","statements":[{"AST":{"nativeSrc":"2798:38:26","nodeType":"YulBlock","src":"2798:38:26","statements":[{"nativeSrc":"2812:14:26","nodeType":"YulAssignment","src":"2812:14:26","value":{"name":"slot","nativeSrc":"2822:4:26","nodeType":"YulIdentifier","src":"2822:4:26"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:26","nodeType":"YulIdentifier","src":"2812:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3676,"isOffset":false,"isSlot":true,"src":"2812:6:26","suffix":"slot","valueSize":1},{"declaration":3672,"isOffset":false,"isSlot":false,"src":"2822:4:26","valueSize":1}],"flags":["memory-safe"],"id":3678,"nodeType":"InlineAssembly","src":"2773:63:26"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"2588:86:26","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3680,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:26","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"slot","nameLocation":"2711:4:26","nodeType":"VariableDeclaration","scope":3680,"src":"2703:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:26"},"returnParameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"r","nameLocation":"2760:1:26","nodeType":"VariableDeclaration","scope":3680,"src":"2740:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3627_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3675,"nodeType":"UserDefinedTypeName","pathNode":{"id":3674,"name":"Uint256Slot","nameLocations":["2740:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3627,"src":"2740:11:26"},"referencedDeclaration":3627,"src":"2740:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3627_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:26"},"scope":3736,"src":"2679:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3690,"nodeType":"Block","src":"3020:79:26","statements":[{"AST":{"nativeSrc":"3055:38:26","nodeType":"YulBlock","src":"3055:38:26","statements":[{"nativeSrc":"3069:14:26","nodeType":"YulAssignment","src":"3069:14:26","value":{"name":"slot","nativeSrc":"3079:4:26","nodeType":"YulIdentifier","src":"3079:4:26"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:26","nodeType":"YulIdentifier","src":"3069:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3687,"isOffset":false,"isSlot":true,"src":"3069:6:26","suffix":"slot","valueSize":1},{"declaration":3683,"isOffset":false,"isSlot":false,"src":"3079:4:26","valueSize":1}],"flags":["memory-safe"],"id":3689,"nodeType":"InlineAssembly","src":"3030:63:26"}]},"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"2848:85:26","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3691,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:26","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"slot","nameLocation":"2969:4:26","nodeType":"VariableDeclaration","scope":3691,"src":"2961:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:26"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"r","nameLocation":"3017:1:26","nodeType":"VariableDeclaration","scope":3691,"src":"2998:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3630_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3686,"nodeType":"UserDefinedTypeName","pathNode":{"id":3685,"name":"Int256Slot","nameLocations":["2998:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3630,"src":"2998:10:26"},"referencedDeclaration":3630,"src":"2998:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3630_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:26"},"scope":3736,"src":"2938:161:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3701,"nodeType":"Block","src":"3277:79:26","statements":[{"AST":{"nativeSrc":"3312:38:26","nodeType":"YulBlock","src":"3312:38:26","statements":[{"nativeSrc":"3326:14:26","nodeType":"YulAssignment","src":"3326:14:26","value":{"name":"slot","nativeSrc":"3336:4:26","nodeType":"YulIdentifier","src":"3336:4:26"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:26","nodeType":"YulIdentifier","src":"3326:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3698,"isOffset":false,"isSlot":true,"src":"3326:6:26","suffix":"slot","valueSize":1},{"declaration":3694,"isOffset":false,"isSlot":false,"src":"3336:4:26","valueSize":1}],"flags":["memory-safe"],"id":3700,"nodeType":"InlineAssembly","src":"3287:63:26"}]},"documentation":{"id":3692,"nodeType":"StructuredDocumentation","src":"3105:85:26","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:26","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"slot","nameLocation":"3226:4:26","nodeType":"VariableDeclaration","scope":3702,"src":"3218:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:26"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"r","nameLocation":"3274:1:26","nodeType":"VariableDeclaration","scope":3702,"src":"3255:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3633_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3697,"nodeType":"UserDefinedTypeName","pathNode":{"id":3696,"name":"StringSlot","nameLocations":["3255:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3633,"src":"3255:10:26"},"referencedDeclaration":3633,"src":"3255:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3633_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:26"},"scope":3736,"src":"3195:161:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3712,"nodeType":"Block","src":"3558:85:26","statements":[{"AST":{"nativeSrc":"3593:44:26","nodeType":"YulBlock","src":"3593:44:26","statements":[{"nativeSrc":"3607:20:26","nodeType":"YulAssignment","src":"3607:20:26","value":{"name":"store.slot","nativeSrc":"3617:10:26","nodeType":"YulIdentifier","src":"3617:10:26"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:26","nodeType":"YulIdentifier","src":"3607:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3709,"isOffset":false,"isSlot":true,"src":"3607:6:26","suffix":"slot","valueSize":1},{"declaration":3705,"isOffset":false,"isSlot":true,"src":"3617:10:26","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3711,"nodeType":"InlineAssembly","src":"3568:69:26"}]},"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"3362:101:26","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3713,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:26","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"store","nameLocation":"3506:5:26","nodeType":"VariableDeclaration","scope":3713,"src":"3491:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3704,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:26"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"r","nameLocation":"3555:1:26","nodeType":"VariableDeclaration","scope":3713,"src":"3536:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3633_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3708,"nodeType":"UserDefinedTypeName","pathNode":{"id":3707,"name":"StringSlot","nameLocations":["3536:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3633,"src":"3536:10:26"},"referencedDeclaration":3633,"src":"3536:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3633_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:26"},"scope":3736,"src":"3468:175:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3723,"nodeType":"Block","src":"3818:79:26","statements":[{"AST":{"nativeSrc":"3853:38:26","nodeType":"YulBlock","src":"3853:38:26","statements":[{"nativeSrc":"3867:14:26","nodeType":"YulAssignment","src":"3867:14:26","value":{"name":"slot","nativeSrc":"3877:4:26","nodeType":"YulIdentifier","src":"3877:4:26"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:26","nodeType":"YulIdentifier","src":"3867:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3720,"isOffset":false,"isSlot":true,"src":"3867:6:26","suffix":"slot","valueSize":1},{"declaration":3716,"isOffset":false,"isSlot":false,"src":"3877:4:26","valueSize":1}],"flags":["memory-safe"],"id":3722,"nodeType":"InlineAssembly","src":"3828:63:26"}]},"documentation":{"id":3714,"nodeType":"StructuredDocumentation","src":"3649:84:26","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:26","nodeType":"FunctionDefinition","parameters":{"id":3717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"slot","nameLocation":"3768:4:26","nodeType":"VariableDeclaration","scope":3724,"src":"3760:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:26"},"returnParameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"r","nameLocation":"3815:1:26","nodeType":"VariableDeclaration","scope":3724,"src":"3797:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3636_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3719,"nodeType":"UserDefinedTypeName","pathNode":{"id":3718,"name":"BytesSlot","nameLocations":["3797:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":3636,"src":"3797:9:26"},"referencedDeclaration":3636,"src":"3797:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3636_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:26"},"scope":3736,"src":"3738:159:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3734,"nodeType":"Block","src":"4094:85:26","statements":[{"AST":{"nativeSrc":"4129:44:26","nodeType":"YulBlock","src":"4129:44:26","statements":[{"nativeSrc":"4143:20:26","nodeType":"YulAssignment","src":"4143:20:26","value":{"name":"store.slot","nativeSrc":"4153:10:26","nodeType":"YulIdentifier","src":"4153:10:26"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:26","nodeType":"YulIdentifier","src":"4143:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3731,"isOffset":false,"isSlot":true,"src":"4143:6:26","suffix":"slot","valueSize":1},{"declaration":3727,"isOffset":false,"isSlot":true,"src":"4153:10:26","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3733,"nodeType":"InlineAssembly","src":"4104:69:26"}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"3903:99:26","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3735,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:26","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"store","nameLocation":"4043:5:26","nodeType":"VariableDeclaration","scope":3735,"src":"4029:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3726,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:26"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"r","nameLocation":"4091:1:26","nodeType":"VariableDeclaration","scope":3735,"src":"4073:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3636_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3730,"nodeType":"UserDefinedTypeName","pathNode":{"id":3729,"name":"BytesSlot","nameLocations":["4073:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":3636,"src":"4073:9:26"},"referencedDeclaration":3636,"src":"4073:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3636_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:26"},"scope":3736,"src":"4007:172:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3737,"src":"1407:2774:26","usedErrors":[],"usedEvents":[]}],"src":"193:3989:26"},"id":26},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7884],"SafeCast":[9649],"SignedMath":[9793],"Strings":[5138]},"id":5139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3738,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5139,"sourceUnit":7885,"src":"127:37:27","symbolAliases":[{"foreign":{"id":3739,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"135:4:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5139,"sourceUnit":9650,"src":"165:45:27","symbolAliases":[{"foreign":{"id":3741,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"173:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5139,"sourceUnit":9794,"src":"211:49:27","symbolAliases":[{"foreign":{"id":3743,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9793,"src":"219:10:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3745,"nodeType":"StructuredDocumentation","src":"262:34:27","text":" @dev String operations."},"fullyImplemented":true,"id":5138,"linearizedBaseContracts":[5138],"name":"Strings","nameLocation":"305:7:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3747,"libraryName":{"id":3746,"name":"SafeCast","nameLocations":["325:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":9649,"src":"325:8:27"},"nodeType":"UsingForDirective","src":"319:21:27"},{"constant":true,"id":3750,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:27","nodeType":"VariableDeclaration","scope":5138,"src":"346:56:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3748,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:27","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3753,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:27","nodeType":"VariableDeclaration","scope":5138,"src":"408:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3751,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":3789,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:27","nodeType":"VariableDeclaration","scope":5138,"src":"456:302:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":3761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:27","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:27","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":3762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:27","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:27","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:27","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":3767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:27","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:27","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:27","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:27","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":3772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:27","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:27","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":3776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:27","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:27","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":3777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:27","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:27","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:27","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:27","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":3782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:27","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:27","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:27","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:27","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":3787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:27","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:27","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"778:81:27","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3796,"name":"StringsInsufficientHexLength","nameLocation":"870:28:27","nodeType":"ErrorDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"value","nameLocation":"907:5:27","nodeType":"VariableDeclaration","scope":3796,"src":"899:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"length","nameLocation":"922:6:27","nodeType":"VariableDeclaration","scope":3796,"src":"914:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:27"},"src":"864:66:27"},{"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"936:108:27","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3799,"name":"StringsInvalidChar","nameLocation":"1055:18:27","nodeType":"ErrorDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[],"src":"1073:2:27"},"src":"1049:27:27"},{"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"1082:84:27","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3802,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:27","nodeType":"ErrorDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[],"src":"1204:2:27"},"src":"1171:36:27"},{"body":{"id":3849,"nodeType":"Block","src":"1379:563:27","statements":[{"id":3848,"nodeType":"UncheckedBlock","src":"1389:547:27","statements":[{"assignments":[3811],"declarations":[{"constant":false,"id":3811,"mutability":"mutable","name":"length","nameLocation":"1421:6:27","nodeType":"VariableDeclaration","scope":3848,"src":"1413:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3818,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"1441:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3812,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"1430:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7884_$","typeString":"type(library Math)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:27","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7716,"src":"1430:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:27"},{"assignments":[3820],"declarations":[{"constant":false,"id":3820,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:27","nodeType":"VariableDeclaration","scope":3848,"src":"1465:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3819,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3825,"initialValue":{"arguments":[{"id":3823,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"1499:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3821,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:27"},{"assignments":[3827],"declarations":[{"constant":false,"id":3827,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:27","nodeType":"VariableDeclaration","scope":3848,"src":"1520:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3828,"nodeType":"VariableDeclarationStatement","src":"1520:11:27"},{"AST":{"nativeSrc":"1570:69:27","nodeType":"YulBlock","src":"1570:69:27","statements":[{"nativeSrc":"1588:37:27","nodeType":"YulAssignment","src":"1588:37:27","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:27","nodeType":"YulIdentifier","src":"1603:6:27"},{"kind":"number","nativeSrc":"1611:4:27","nodeType":"YulLiteral","src":"1611:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:27","nodeType":"YulIdentifier","src":"1599:3:27"},"nativeSrc":"1599:17:27","nodeType":"YulFunctionCall","src":"1599:17:27"},{"name":"length","nativeSrc":"1618:6:27","nodeType":"YulIdentifier","src":"1618:6:27"}],"functionName":{"name":"add","nativeSrc":"1595:3:27","nodeType":"YulIdentifier","src":"1595:3:27"},"nativeSrc":"1595:30:27","nodeType":"YulFunctionCall","src":"1595:30:27"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:27","nodeType":"YulIdentifier","src":"1588:3:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3820,"isOffset":false,"isSlot":false,"src":"1603:6:27","valueSize":1},{"declaration":3811,"isOffset":false,"isSlot":false,"src":"1618:6:27","valueSize":1},{"declaration":3827,"isOffset":false,"isSlot":false,"src":"1588:3:27","valueSize":1}],"flags":["memory-safe"],"id":3829,"nodeType":"InlineAssembly","src":"1545:94:27"},{"body":{"id":3844,"nodeType":"Block","src":"1665:234:27","statements":[{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:27","subExpression":{"id":3831,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"1683:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"nodeType":"ExpressionStatement","src":"1683:5:27"},{"AST":{"nativeSrc":"1731:86:27","nodeType":"YulBlock","src":"1731:86:27","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:27","nodeType":"YulIdentifier","src":"1761:3:27"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:27","nodeType":"YulIdentifier","src":"1775:5:27"},{"kind":"number","nativeSrc":"1782:2:27","nodeType":"YulLiteral","src":"1782:2:27","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:27","nodeType":"YulIdentifier","src":"1771:3:27"},"nativeSrc":"1771:14:27","nodeType":"YulFunctionCall","src":"1771:14:27"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:27","nodeType":"YulIdentifier","src":"1787:10:27"}],"functionName":{"name":"byte","nativeSrc":"1766:4:27","nodeType":"YulIdentifier","src":"1766:4:27"},"nativeSrc":"1766:32:27","nodeType":"YulFunctionCall","src":"1766:32:27"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:27","nodeType":"YulIdentifier","src":"1753:7:27"},"nativeSrc":"1753:46:27","nodeType":"YulFunctionCall","src":"1753:46:27"},"nativeSrc":"1753:46:27","nodeType":"YulExpressionStatement","src":"1753:46:27"}]},"evmVersion":"paris","externalReferences":[{"declaration":3750,"isOffset":false,"isSlot":false,"src":"1787:10:27","valueSize":1},{"declaration":3827,"isOffset":false,"isSlot":false,"src":"1761:3:27","valueSize":1},{"declaration":3805,"isOffset":false,"isSlot":false,"src":"1775:5:27","valueSize":1}],"flags":["memory-safe"],"id":3834,"nodeType":"InlineAssembly","src":"1706:111:27"},{"expression":{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"1834:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3838,"nodeType":"ExpressionStatement","src":"1834:11:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"1867:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3843,"nodeType":"IfStatement","src":"1863:21:27","trueBody":{"id":3842,"nodeType":"Break","src":"1879:5:27"}}]},"condition":{"hexValue":"74727565","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3845,"nodeType":"WhileStatement","src":"1652:247:27"},{"expression":{"id":3846,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"1919:6:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3809,"id":3847,"nodeType":"Return","src":"1912:13:27"}]}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"1213:90:27","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:27","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"value","nameLocation":"1334:5:27","nodeType":"VariableDeclaration","scope":3850,"src":"1326:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:27"},"returnParameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3850,"src":"1364:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3807,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:27"},"scope":5138,"src":"1308:634:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3875,"nodeType":"Block","src":"2118:92:27","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"2149:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:27","trueExpression":{"hexValue":"2d","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"2195:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3868,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9793,"src":"2180:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9793_$","typeString":"type(library SignedMath)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:27","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9792,"src":"2180:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3867,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"2171:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3858,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:27","typeDescriptions":{}}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:27","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:27","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3857,"id":3874,"nodeType":"Return","src":"2128:75:27"}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"1948:89:27","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3876,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:27","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"value","nameLocation":"2073:5:27","nodeType":"VariableDeclaration","scope":3876,"src":"2066:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3852,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:27"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3876,"src":"2103:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3855,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:27"},"scope":5138,"src":"2042:168:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3895,"nodeType":"Block","src":"2389:100:27","statements":[{"id":3894,"nodeType":"UncheckedBlock","src":"2399:84:27","statements":[{"expression":{"arguments":[{"id":3885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"2442:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"2461:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3886,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"2449:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7884_$","typeString":"type(library Math)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:27","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7827,"src":"2449:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3884,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3896,3979,3999],"referencedDeclaration":3979,"src":"2430:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3883,"id":3893,"nodeType":"Return","src":"2423:49:27"}]}]},"documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"2216:94:27","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:27","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"value","nameLocation":"2344:5:27","nodeType":"VariableDeclaration","scope":3896,"src":"2336:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:27"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3896,"src":"2374:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3881,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:27"},"scope":5138,"src":"2315:174:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"2702:435:27","statements":[{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:27","nodeType":"VariableDeclaration","scope":3978,"src":"2712:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"id":3908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"2733:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:27"},{"assignments":[3911],"declarations":[{"constant":false,"id":3911,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:27","nodeType":"VariableDeclaration","scope":3978,"src":"2748:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3910,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3920,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3915,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"2784:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3912,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:27"},{"expression":{"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3921,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"2805:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3923,"indexExpression":{"hexValue":"30","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3926,"nodeType":"ExpressionStatement","src":"2805:15:27"},{"expression":{"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3927,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"2830:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3929,"indexExpression":{"hexValue":"31","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3932,"nodeType":"ExpressionStatement","src":"2830:15:27"},{"body":{"id":3961,"nodeType":"Block","src":"2900:95:27","statements":[{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3947,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"2914:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3949,"indexExpression":{"id":3948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"2921:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3950,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"2926:10:27","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3954,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"2937:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3956,"nodeType":"ExpressionStatement","src":"2914:40:27"},{"expression":{"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3957,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"2968:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3960,"nodeType":"ExpressionStatement","src":"2968:16:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"2888:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3962,"initializationExpression":{"assignments":[3934],"declarations":[{"constant":false,"id":3934,"mutability":"mutable","name":"i","nameLocation":"2868:1:27","nodeType":"VariableDeclaration","scope":3962,"src":"2860:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3940,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3936,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"2876:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:27"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:27","subExpression":{"id":3944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"2897:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3946,"nodeType":"ExpressionStatement","src":"2895:3:27"},"nodeType":"ForStatement","src":"2855:140:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"3008:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3972,"nodeType":"IfStatement","src":"3004:96:27","trueBody":{"id":3971,"nodeType":"Block","src":"3025:75:27","statements":[{"errorCall":{"arguments":[{"id":3967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"3075:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3968,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"3082:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3966,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"3046:28:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3970,"nodeType":"RevertStatement","src":"3039:50:27"}]}},{"expression":{"arguments":[{"id":3975,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"3123:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3973,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:27","typeDescriptions":{}}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3905,"id":3977,"nodeType":"Return","src":"3109:21:27"}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"2495:112:27","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:27","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"value","nameLocation":"2641:5:27","nodeType":"VariableDeclaration","scope":3979,"src":"2633:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"length","nameLocation":"2656:6:27","nodeType":"VariableDeclaration","scope":3979,"src":"2648:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:27"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3979,"src":"2687:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3903,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:27"},"scope":5138,"src":"2612:525:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"3369:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3992,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"3414:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3990,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:27","typeDescriptions":{}}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:27","typeDescriptions":{}}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3995,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"3422:14:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3987,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3896,3979,3999],"referencedDeclaration":3979,"src":"3386:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3986,"id":3997,"nodeType":"Return","src":"3379:58:27"}]},"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"3143:148:27","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:27","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"addr","nameLocation":"3325:4:27","nodeType":"VariableDeclaration","scope":3999,"src":"3317:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:27"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"3354:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3984,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:27"},"scope":5138,"src":"3296:148:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4063,"nodeType":"Block","src":"3701:642:27","statements":[{"assignments":[4008],"declarations":[{"constant":false,"id":4008,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:27","nodeType":"VariableDeclaration","scope":4063,"src":"3711:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4007,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4015,"initialValue":{"arguments":[{"arguments":[{"id":4012,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"3751:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4011,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3896,3979,3999],"referencedDeclaration":3999,"src":"3739:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4009,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:27","typeDescriptions":{}}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:27"},{"assignments":[4017],"declarations":[{"constant":false,"id":4017,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:27","nodeType":"VariableDeclaration","scope":4063,"src":"3842:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4018,"nodeType":"VariableDeclarationStatement","src":"3842:17:27"},{"AST":{"nativeSrc":"3894:78:27","nodeType":"YulBlock","src":"3894:78:27","statements":[{"nativeSrc":"3908:54:27","nodeType":"YulAssignment","src":"3908:54:27","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:27","nodeType":"YulLiteral","src":"3925:2:27","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:27","nodeType":"YulIdentifier","src":"3943:6:27"},{"kind":"number","nativeSrc":"3951:4:27","nodeType":"YulLiteral","src":"3951:4:27","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:27","nodeType":"YulIdentifier","src":"3939:3:27"},"nativeSrc":"3939:17:27","nodeType":"YulFunctionCall","src":"3939:17:27"},{"kind":"number","nativeSrc":"3958:2:27","nodeType":"YulLiteral","src":"3958:2:27","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:27","nodeType":"YulIdentifier","src":"3929:9:27"},"nativeSrc":"3929:32:27","nodeType":"YulFunctionCall","src":"3929:32:27"}],"functionName":{"name":"shr","nativeSrc":"3921:3:27","nodeType":"YulIdentifier","src":"3921:3:27"},"nativeSrc":"3921:41:27","nodeType":"YulFunctionCall","src":"3921:41:27"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:27","nodeType":"YulIdentifier","src":"3908:9:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4008,"isOffset":false,"isSlot":false,"src":"3943:6:27","valueSize":1},{"declaration":4017,"isOffset":false,"isSlot":false,"src":"3908:9:27","valueSize":1}],"flags":["memory-safe"],"id":4019,"nodeType":"InlineAssembly","src":"3869:103:27"},{"body":{"id":4056,"nodeType":"Block","src":"4015:291:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4030,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"4121:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:27","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4037,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"4150:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4039,"indexExpression":{"id":4038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4157:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4035,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:27","typeDescriptions":{}}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4051,"nodeType":"IfStatement","src":"4117:150:27","trueBody":{"id":4050,"nodeType":"Block","src":"4167:100:27","statements":[{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4044,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"4235:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4046,"indexExpression":{"id":4045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4242:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4049,"nodeType":"ExpressionStatement","src":"4235:17:27"}]}},{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4052,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"4280:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4055,"nodeType":"ExpressionStatement","src":"4280:15:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4003:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4057,"initializationExpression":{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"i","nameLocation":"3995:1:27","nodeType":"VariableDeclaration","scope":4057,"src":"3987:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4023,"initialValue":{"hexValue":"3431","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:27","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:27"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:27","subExpression":{"id":4027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"4012:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"4010:3:27"},"nodeType":"ForStatement","src":"3982:324:27"},{"expression":{"arguments":[{"id":4060,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"4329:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4058,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:27","typeDescriptions":{}}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4006,"id":4062,"nodeType":"Return","src":"4315:21:27"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"3450:165:27","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4064,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:27","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"addr","nameLocation":"3657:4:27","nodeType":"VariableDeclaration","scope":4064,"src":"3649:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4001,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:27"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4064,"src":"3686:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4004,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:27"},"scope":5138,"src":"3620:723:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4100,"nodeType":"Block","src":"4498:104:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"4521:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4074,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:27","typeDescriptions":{}}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:27","memberName":"length","nodeType":"MemberAccess","src":"4515:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"4540:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4079,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:27","typeDescriptions":{}}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:27","memberName":"length","nodeType":"MemberAccess","src":"4534:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"4569:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4086,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:27","typeDescriptions":{}}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4085,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"4592:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4092,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:27","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4091,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4073,"id":4099,"nodeType":"Return","src":"4508:87:27"}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"4349:66:27","text":" @dev Returns true if the two strings are equal."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:27","nodeType":"FunctionDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"a","nameLocation":"4449:1:27","nodeType":"VariableDeclaration","scope":4101,"src":"4435:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4066,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"b","nameLocation":"4466:1:27","nodeType":"VariableDeclaration","scope":4101,"src":"4452:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4068,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:27"},"returnParameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4101,"src":"4492:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4071,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:27"},"scope":5138,"src":"4420:182:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4119,"nodeType":"Block","src":"4899:64:27","statements":[{"expression":{"arguments":[{"id":4110,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"4926:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4114,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"4942:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4112,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:27","typeDescriptions":{}}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:27","memberName":"length","nodeType":"MemberAccess","src":"4936:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4109,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4120,4151],"referencedDeclaration":4151,"src":"4916:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4108,"id":4118,"nodeType":"Return","src":"4909:47:27"}]},"documentation":{"id":4102,"nodeType":"StructuredDocumentation","src":"4608:214:27","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4120,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:27","nodeType":"FunctionDefinition","parameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"input","nameLocation":"4860:5:27","nodeType":"VariableDeclaration","scope":4120,"src":"4846:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4103,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:27"},"returnParameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4120,"src":"4890:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:27"},"scope":5138,"src":"4827:136:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4150,"nodeType":"Block","src":"5368:153:27","statements":[{"assignments":[4133,4135],"declarations":[{"constant":false,"id":4133,"mutability":"mutable","name":"success","nameLocation":"5384:7:27","nodeType":"VariableDeclaration","scope":4150,"src":"5379:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4132,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"value","nameLocation":"5401:5:27","nodeType":"VariableDeclaration","scope":4150,"src":"5393:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4141,"initialValue":{"arguments":[{"id":4137,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"5423:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4138,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"5430:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4139,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"5437:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4136,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4172,4209],"referencedDeclaration":4209,"src":"5410:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:27"},{"condition":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:27","subExpression":{"id":4142,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"5456:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4147,"nodeType":"IfStatement","src":"5451:41:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4144,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"5472:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4146,"nodeType":"RevertStatement","src":"5465:27:27"}},{"expression":{"id":4148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"5509:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4131,"id":4149,"nodeType":"Return","src":"5502:12:27"}]},"documentation":{"id":4121,"nodeType":"StructuredDocumentation","src":"4969:294:27","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4151,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:27","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"input","nameLocation":"5301:5:27","nodeType":"VariableDeclaration","scope":4151,"src":"5287:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4122,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"begin","nameLocation":"5316:5:27","nodeType":"VariableDeclaration","scope":4151,"src":"5308:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"end","nameLocation":"5331:3:27","nodeType":"VariableDeclaration","scope":4151,"src":"5323:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:27"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4151,"src":"5359:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:27"},"scope":5138,"src":"5268:253:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4171,"nodeType":"Block","src":"5842:83:27","statements":[{"expression":{"arguments":[{"id":4162,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"5888:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4166,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"5904:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4164,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:27","typeDescriptions":{}}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:27","memberName":"length","nodeType":"MemberAccess","src":"5898:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4161,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"5859:28:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4160,"id":4170,"nodeType":"Return","src":"5852:66:27"}]},"documentation":{"id":4152,"nodeType":"StructuredDocumentation","src":"5527:215:27","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:27","nodeType":"FunctionDefinition","parameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"input","nameLocation":"5783:5:27","nodeType":"VariableDeclaration","scope":4172,"src":"5769:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4153,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:27"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"success","nameLocation":"5818:7:27","nodeType":"VariableDeclaration","scope":4172,"src":"5813:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4156,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"value","nameLocation":"5835:5:27","nodeType":"VariableDeclaration","scope":4172,"src":"5827:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:27"},"scope":5138,"src":"5747:178:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4208,"nodeType":"Block","src":"6327:144:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"6341:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4189,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"6353:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4187,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:27","typeDescriptions":{}}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:27","memberName":"length","nodeType":"MemberAccess","src":"6347:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6370:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4194,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"6378:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4201,"nodeType":"IfStatement","src":"6337:63:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4185,"id":4200,"nodeType":"Return","src":"6383:17:27"}},{"expression":{"arguments":[{"id":4203,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"6446:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4204,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6453:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4205,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"6460:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4202,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"6417:28:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4185,"id":4207,"nodeType":"Return","src":"6410:54:27"}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"5931:238:27","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4209,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:27","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"input","nameLocation":"6219:5:27","nodeType":"VariableDeclaration","scope":4209,"src":"6205:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4174,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"begin","nameLocation":"6242:5:27","nodeType":"VariableDeclaration","scope":4209,"src":"6234:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"end","nameLocation":"6265:3:27","nodeType":"VariableDeclaration","scope":4209,"src":"6257:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:27"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"success","nameLocation":"6303:7:27","nodeType":"VariableDeclaration","scope":4209,"src":"6298:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4181,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4184,"mutability":"mutable","name":"value","nameLocation":"6320:5:27","nodeType":"VariableDeclaration","scope":4209,"src":"6312:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:27"},"scope":5138,"src":"6174:297:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4278,"nodeType":"Block","src":"6874:347:27","statements":[{"assignments":[4224],"declarations":[{"constant":false,"id":4224,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:27","nodeType":"VariableDeclaration","scope":4278,"src":"6884:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4223,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4229,"initialValue":{"arguments":[{"id":4227,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"6912:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4225,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:27","typeDescriptions":{}}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:27"},{"assignments":[4231],"declarations":[{"constant":false,"id":4231,"mutability":"mutable","name":"result","nameLocation":"6937:6:27","nodeType":"VariableDeclaration","scope":4278,"src":"6929:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4233,"initialValue":{"hexValue":"30","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:27"},{"body":{"id":4272,"nodeType":"Block","src":"6995:189:27","statements":[{"assignments":[4245],"declarations":[{"constant":false,"id":4245,"mutability":"mutable","name":"chr","nameLocation":"7015:3:27","nodeType":"VariableDeclaration","scope":4272,"src":"7009:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4244,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4255,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4250,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"7064:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"7072:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4249,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"7041:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4247,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:27","typeDescriptions":{}}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4246,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"7021:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"7094:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:27","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4263,"nodeType":"IfStatement","src":"7090:30:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4222,"id":4262,"nodeType":"Return","src":"7103:17:27"}},{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"7134:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"7134:12:27"},{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"7160:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4269,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"7170:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4271,"nodeType":"ExpressionStatement","src":"7160:13:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"6981:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4239,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"6985:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4273,"initializationExpression":{"assignments":[4235],"declarations":[{"constant":false,"id":4235,"mutability":"mutable","name":"i","nameLocation":"6970:1:27","nodeType":"VariableDeclaration","scope":4273,"src":"6962:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4237,"initialValue":{"id":4236,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"6974:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:27","subExpression":{"id":4241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"6992:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4243,"nodeType":"ExpressionStatement","src":"6990:3:27"},"nodeType":"ForStatement","src":"6957:227:27"},{"expression":{"components":[{"hexValue":"74727565","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"7207:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4222,"id":4277,"nodeType":"Return","src":"7193:21:27"}]},"documentation":{"id":4210,"nodeType":"StructuredDocumentation","src":"6477:224:27","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:27","nodeType":"FunctionDefinition","parameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"input","nameLocation":"6767:5:27","nodeType":"VariableDeclaration","scope":4279,"src":"6753:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4211,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4214,"mutability":"mutable","name":"begin","nameLocation":"6790:5:27","nodeType":"VariableDeclaration","scope":4279,"src":"6782:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4213,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"end","nameLocation":"6813:3:27","nodeType":"VariableDeclaration","scope":4279,"src":"6805:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:27"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"success","nameLocation":"6850:7:27","nodeType":"VariableDeclaration","scope":4279,"src":"6845:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4218,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"value","nameLocation":"6867:5:27","nodeType":"VariableDeclaration","scope":4279,"src":"6859:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:27"},"scope":5138,"src":"6706:515:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4297,"nodeType":"Block","src":"7518:63:27","statements":[{"expression":{"arguments":[{"id":4288,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7544:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4292,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7560:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4290,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:27","typeDescriptions":{}}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:27","memberName":"length","nodeType":"MemberAccess","src":"7554:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4287,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4298,4329],"referencedDeclaration":4329,"src":"7535:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4286,"id":4296,"nodeType":"Return","src":"7528:46:27"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"7227:216:27","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:27","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"input","nameLocation":"7480:5:27","nodeType":"VariableDeclaration","scope":4298,"src":"7466:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4281,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:27"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"7510:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4284,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:27"},"scope":5138,"src":"7448:133:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4328,"nodeType":"Block","src":"7986:151:27","statements":[{"assignments":[4311,4313],"declarations":[{"constant":false,"id":4311,"mutability":"mutable","name":"success","nameLocation":"8002:7:27","nodeType":"VariableDeclaration","scope":4328,"src":"7997:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4310,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"value","nameLocation":"8018:5:27","nodeType":"VariableDeclaration","scope":4328,"src":"8011:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4312,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4319,"initialValue":{"arguments":[{"id":4315,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"8039:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4316,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"8046:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4317,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"8053:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4314,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4350,4392],"referencedDeclaration":4392,"src":"8027:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:27"},{"condition":{"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:27","subExpression":{"id":4320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"8072:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4325,"nodeType":"IfStatement","src":"8067:41:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4322,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"8088:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4324,"nodeType":"RevertStatement","src":"8081:27:27"}},{"expression":{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"8125:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4309,"id":4327,"nodeType":"Return","src":"8118:12:27"}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"7587:296:27","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4329,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:27","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"input","nameLocation":"7920:5:27","nodeType":"VariableDeclaration","scope":4329,"src":"7906:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4300,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4303,"mutability":"mutable","name":"begin","nameLocation":"7935:5:27","nodeType":"VariableDeclaration","scope":4329,"src":"7927:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4305,"mutability":"mutable","name":"end","nameLocation":"7950:3:27","nodeType":"VariableDeclaration","scope":4329,"src":"7942:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:27"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4329,"src":"7978:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4307,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:27"},"scope":5138,"src":"7888:249:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4349,"nodeType":"Block","src":"8528:82:27","statements":[{"expression":{"arguments":[{"id":4340,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"8573:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4344,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"8589:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4342,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:27","typeDescriptions":{}}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:27","memberName":"length","nodeType":"MemberAccess","src":"8583:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4339,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"8545:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4338,"id":4348,"nodeType":"Return","src":"8538:65:27"}]},"documentation":{"id":4330,"nodeType":"StructuredDocumentation","src":"8143:287:27","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4350,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:27","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"input","nameLocation":"8470:5:27","nodeType":"VariableDeclaration","scope":4350,"src":"8456:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4331,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:27"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"success","nameLocation":"8505:7:27","nodeType":"VariableDeclaration","scope":4350,"src":"8500:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4334,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4337,"mutability":"mutable","name":"value","nameLocation":"8521:5:27","nodeType":"VariableDeclaration","scope":4350,"src":"8514:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4336,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:27"},"scope":5138,"src":"8435:175:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4355,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:27","nodeType":"VariableDeclaration","scope":5138,"src":"8616:50:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:27","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4391,"nodeType":"Block","src":"9132:143:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4369,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"9146:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4372,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"9158:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4370,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:27","typeDescriptions":{}}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:27","memberName":"length","nodeType":"MemberAccess","src":"9152:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"9175:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4377,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"9183:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4384,"nodeType":"IfStatement","src":"9142:63:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4368,"id":4383,"nodeType":"Return","src":"9188:17:27"}},{"expression":{"arguments":[{"id":4386,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"9250:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4387,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"9257:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4388,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"9264:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4385,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"9222:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4368,"id":4390,"nodeType":"Return","src":"9215:53:27"}]},"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"8673:303:27","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4392,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:27","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"input","nameLocation":"9025:5:27","nodeType":"VariableDeclaration","scope":4392,"src":"9011:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4357,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"begin","nameLocation":"9048:5:27","nodeType":"VariableDeclaration","scope":4392,"src":"9040:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4362,"mutability":"mutable","name":"end","nameLocation":"9071:3:27","nodeType":"VariableDeclaration","scope":4392,"src":"9063:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:27"},"returnParameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"success","nameLocation":"9109:7:27","nodeType":"VariableDeclaration","scope":4392,"src":"9104:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4364,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"value","nameLocation":"9125:5:27","nodeType":"VariableDeclaration","scope":4392,"src":"9118:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4366,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:27"},"scope":5138,"src":"8981:294:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4512,"nodeType":"Block","src":"9675:812:27","statements":[{"assignments":[4407],"declarations":[{"constant":false,"id":4407,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:27","nodeType":"VariableDeclaration","scope":4512,"src":"9685:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4406,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4412,"initialValue":{"arguments":[{"id":4410,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"9713:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4408,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:27","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:27"},{"assignments":[4414],"declarations":[{"constant":false,"id":4414,"mutability":"mutable","name":"sign","nameLocation":"9783:4:27","nodeType":"VariableDeclaration","scope":4512,"src":"9776:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4413,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4430,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"9790:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4416,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"9799:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4425,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"9847:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4426,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"9855:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4424,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"9824:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4422,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:27","typeDescriptions":{}}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:27","trueExpression":{"arguments":[{"hexValue":"30","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4418,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:27","typeDescriptions":{}}},"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:27"},{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:27","nodeType":"VariableDeclaration","scope":4512,"src":"9943:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4431,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4439,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"9963:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4434,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:27","typeDescriptions":{}}},"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:27"},{"assignments":[4441],"declarations":[{"constant":false,"id":4441,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:27","nodeType":"VariableDeclaration","scope":4512,"src":"9992:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4440,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4448,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"10012:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4443,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:27","typeDescriptions":{}}},"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:27"},{"assignments":[4450],"declarations":[{"constant":false,"id":4450,"mutability":"mutable","name":"offset","nameLocation":"10049:6:27","nodeType":"VariableDeclaration","scope":4512,"src":"10041:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4457,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10059:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4452,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"10075:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"10058:37:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:27"},{"assignments":[4459,4461],"declarations":[{"constant":false,"id":4459,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:27","nodeType":"VariableDeclaration","scope":4512,"src":"10109:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4458,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:27","nodeType":"VariableDeclaration","scope":4512,"src":"10126:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4469,"initialValue":{"arguments":[{"id":4463,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"10159:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"10166:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4465,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"10174:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4467,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"10182:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4462,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4172,4209],"referencedDeclaration":4209,"src":"10146:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"10201:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"10215:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4472,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"10226:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4490,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"10343:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4491,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"10357:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"10373:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4494,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"10385:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4405,"id":4509,"nodeType":"Return","src":"10463:17:27"},"id":4510,"nodeType":"IfStatement","src":"10339:141:27","trueBody":{"id":4505,"nodeType":"Block","src":"10401:56:27","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4499,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:27","memberName":"min","nodeType":"MemberAccess","src":"10429:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4405,"id":4504,"nodeType":"Return","src":"10415:31:27"}]}},"id":4511,"nodeType":"IfStatement","src":"10197:283:27","trueBody":{"id":4489,"nodeType":"Block","src":"10242:91:27","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4476,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"10270:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4484,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"10312:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4482,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:27","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:27","trueExpression":{"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:27","subExpression":{"arguments":[{"id":4479,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"10293:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4477,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:27","typeDescriptions":{}}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4405,"id":4488,"nodeType":"Return","src":"10256:66:27"}]}}]},"documentation":{"id":4393,"nodeType":"StructuredDocumentation","src":"9281:223:27","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4513,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:27","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"input","nameLocation":"9569:5:27","nodeType":"VariableDeclaration","scope":4513,"src":"9555:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4394,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4397,"mutability":"mutable","name":"begin","nameLocation":"9592:5:27","nodeType":"VariableDeclaration","scope":4513,"src":"9584:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4399,"mutability":"mutable","name":"end","nameLocation":"9615:3:27","nodeType":"VariableDeclaration","scope":4513,"src":"9607:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:27"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"success","nameLocation":"9652:7:27","nodeType":"VariableDeclaration","scope":4513,"src":"9647:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4401,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"value","nameLocation":"9668:5:27","nodeType":"VariableDeclaration","scope":4513,"src":"9661:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4403,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:27"},"scope":5138,"src":"9509:978:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4531,"nodeType":"Block","src":"10832:67:27","statements":[{"expression":{"arguments":[{"id":4522,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"10862:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4526,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"10878:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4524,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:27","typeDescriptions":{}}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:27","memberName":"length","nodeType":"MemberAccess","src":"10872:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4532,4563],"referencedDeclaration":4563,"src":"10849:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4520,"id":4530,"nodeType":"Return","src":"10842:50:27"}]},"documentation":{"id":4514,"nodeType":"StructuredDocumentation","src":"10493:259:27","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4532,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:27","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"input","nameLocation":"10793:5:27","nodeType":"VariableDeclaration","scope":4532,"src":"10779:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4515,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:27"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4532,"src":"10823:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:27"},"scope":5138,"src":"10757:142:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4562,"nodeType":"Block","src":"11320:156:27","statements":[{"assignments":[4545,4547],"declarations":[{"constant":false,"id":4545,"mutability":"mutable","name":"success","nameLocation":"11336:7:27","nodeType":"VariableDeclaration","scope":4562,"src":"11331:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4544,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"value","nameLocation":"11353:5:27","nodeType":"VariableDeclaration","scope":4562,"src":"11345:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4553,"initialValue":{"arguments":[{"id":4549,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"11378:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4550,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"11385:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4551,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"11392:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4548,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4584,4621],"referencedDeclaration":4621,"src":"11362:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:27"},{"condition":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:27","subExpression":{"id":4554,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"11411:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4559,"nodeType":"IfStatement","src":"11406:41:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4556,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"11427:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4558,"nodeType":"RevertStatement","src":"11420:27:27"}},{"expression":{"id":4560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"11464:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4543,"id":4561,"nodeType":"Return","src":"11457:12:27"}]},"documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"10905:307:27","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:27","nodeType":"FunctionDefinition","parameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"input","nameLocation":"11253:5:27","nodeType":"VariableDeclaration","scope":4563,"src":"11239:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4534,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"begin","nameLocation":"11268:5:27","nodeType":"VariableDeclaration","scope":4563,"src":"11260:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4539,"mutability":"mutable","name":"end","nameLocation":"11283:3:27","nodeType":"VariableDeclaration","scope":4563,"src":"11275:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:27"},"returnParameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4563,"src":"11311:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:27"},"scope":5138,"src":"11217:259:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4583,"nodeType":"Block","src":"11803:86:27","statements":[{"expression":{"arguments":[{"id":4574,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"11852:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4578,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"11868:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4576,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:27","typeDescriptions":{}}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:27","memberName":"length","nodeType":"MemberAccess","src":"11862:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"11820:31:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4572,"id":4582,"nodeType":"Return","src":"11813:69:27"}]},"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"11482:218:27","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4584,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:27","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"input","nameLocation":"11744:5:27","nodeType":"VariableDeclaration","scope":4584,"src":"11730:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4565,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:27"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"success","nameLocation":"11779:7:27","nodeType":"VariableDeclaration","scope":4584,"src":"11774:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4568,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4571,"mutability":"mutable","name":"value","nameLocation":"11796:5:27","nodeType":"VariableDeclaration","scope":4584,"src":"11788:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:27"},"scope":5138,"src":"11705:184:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4620,"nodeType":"Block","src":"12297:147:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4598,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12311:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4601,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"12323:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4599,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:27","typeDescriptions":{}}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:27","memberName":"length","nodeType":"MemberAccess","src":"12317:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"12340:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4606,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12348:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4613,"nodeType":"IfStatement","src":"12307:63:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4597,"id":4612,"nodeType":"Return","src":"12353:17:27"}},{"expression":{"arguments":[{"id":4615,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"12419:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4616,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"12426:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4617,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12433:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4614,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"12387:31:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4597,"id":4619,"nodeType":"Return","src":"12380:57:27"}]},"documentation":{"id":4585,"nodeType":"StructuredDocumentation","src":"11895:241:27","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4621,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:27","nodeType":"FunctionDefinition","parameters":{"id":4592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"input","nameLocation":"12189:5:27","nodeType":"VariableDeclaration","scope":4621,"src":"12175:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4586,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4589,"mutability":"mutable","name":"begin","nameLocation":"12212:5:27","nodeType":"VariableDeclaration","scope":4621,"src":"12204:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4588,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4591,"mutability":"mutable","name":"end","nameLocation":"12235:3:27","nodeType":"VariableDeclaration","scope":4621,"src":"12227:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:27"},"returnParameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4594,"mutability":"mutable","name":"success","nameLocation":"12273:7:27","nodeType":"VariableDeclaration","scope":4621,"src":"12268:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4593,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"value","nameLocation":"12290:5:27","nodeType":"VariableDeclaration","scope":4621,"src":"12282:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:27"},"scope":5138,"src":"12141:303:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4723,"nodeType":"Block","src":"12853:881:27","statements":[{"assignments":[4636],"declarations":[{"constant":false,"id":4636,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:27","nodeType":"VariableDeclaration","scope":4723,"src":"12863:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4635,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4641,"initialValue":{"arguments":[{"id":4639,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"12891:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4637,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:27","typeDescriptions":{}}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:27"},{"assignments":[4643],"declarations":[{"constant":false,"id":4643,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:27","nodeType":"VariableDeclaration","scope":4723,"src":"12945:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4642,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4663,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"12963:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"12969:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4653,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"13013:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4654,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"13021:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4652,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"12990:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4650,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:27","typeDescriptions":{}}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4657,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:27","typeDescriptions":{}}},"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:27"},{"assignments":[4665],"declarations":[{"constant":false,"id":4665,"mutability":"mutable","name":"offset","nameLocation":"13133:6:27","nodeType":"VariableDeclaration","scope":4723,"src":"13125:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4671,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4666,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"13142:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"13142:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:27"},{"assignments":[4673],"declarations":[{"constant":false,"id":4673,"mutability":"mutable","name":"result","nameLocation":"13183:6:27","nodeType":"VariableDeclaration","scope":4723,"src":"13175:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4675,"initialValue":{"hexValue":"30","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:27"},{"body":{"id":4717,"nodeType":"Block","src":"13250:447:27","statements":[{"assignments":[4689],"declarations":[{"constant":false,"id":4689,"mutability":"mutable","name":"chr","nameLocation":"13270:3:27","nodeType":"VariableDeclaration","scope":4717,"src":"13264:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4688,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4699,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4694,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"13319:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"13327:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4693,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"13296:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4691,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:27","typeDescriptions":{}}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4690,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"13276:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4700,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"13349:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4707,"nodeType":"IfStatement","src":"13345:31:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4634,"id":4706,"nodeType":"Return","src":"13359:17:27"}},{"expression":{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"13390:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4711,"nodeType":"ExpressionStatement","src":"13390:12:27"},{"id":4716,"nodeType":"UncheckedBlock","src":"13416:271:27","statements":[{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"13659:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4713,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"13669:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"13659:13:27"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"13236:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4683,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"13240:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"initializationExpression":{"assignments":[4677],"declarations":[{"constant":false,"id":4677,"mutability":"mutable","name":"i","nameLocation":"13216:1:27","nodeType":"VariableDeclaration","scope":4718,"src":"13208:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4681,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"13220:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4679,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"13228:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:27","subExpression":{"id":4685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"13247:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4687,"nodeType":"ExpressionStatement","src":"13245:3:27"},"nodeType":"ForStatement","src":"13203:494:27"},{"expression":{"components":[{"hexValue":"74727565","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"13720:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4634,"id":4722,"nodeType":"Return","src":"13706:21:27"}]},"documentation":{"id":4622,"nodeType":"StructuredDocumentation","src":"12450:227:27","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4724,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:27","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"input","nameLocation":"12746:5:27","nodeType":"VariableDeclaration","scope":4724,"src":"12732:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4623,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4626,"mutability":"mutable","name":"begin","nameLocation":"12769:5:27","nodeType":"VariableDeclaration","scope":4724,"src":"12761:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"end","nameLocation":"12792:3:27","nodeType":"VariableDeclaration","scope":4724,"src":"12784:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:27"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"success","nameLocation":"12829:7:27","nodeType":"VariableDeclaration","scope":4724,"src":"12824:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4630,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4633,"mutability":"mutable","name":"value","nameLocation":"12846:5:27","nodeType":"VariableDeclaration","scope":4724,"src":"12838:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:27"},"scope":5138,"src":"12682:1052:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4742,"nodeType":"Block","src":"14032:67:27","statements":[{"expression":{"arguments":[{"id":4733,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"14062:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4737,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"14078:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4735,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:27","typeDescriptions":{}}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:27","memberName":"length","nodeType":"MemberAccess","src":"14072:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4732,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4743,4774],"referencedDeclaration":4774,"src":"14049:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4731,"id":4741,"nodeType":"Return","src":"14042:50:27"}]},"documentation":{"id":4725,"nodeType":"StructuredDocumentation","src":"13740:212:27","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4743,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:27","nodeType":"FunctionDefinition","parameters":{"id":4728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4727,"mutability":"mutable","name":"input","nameLocation":"13993:5:27","nodeType":"VariableDeclaration","scope":4743,"src":"13979:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4726,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:27"},"returnParameters":{"id":4731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4743,"src":"14023:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4729,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:27"},"scope":5138,"src":"13957:142:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"14472:165:27","statements":[{"assignments":[4756,4758],"declarations":[{"constant":false,"id":4756,"mutability":"mutable","name":"success","nameLocation":"14488:7:27","nodeType":"VariableDeclaration","scope":4773,"src":"14483:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4755,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"value","nameLocation":"14505:5:27","nodeType":"VariableDeclaration","scope":4773,"src":"14497:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4757,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4764,"initialValue":{"arguments":[{"id":4760,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"14530:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4761,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"14537:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4762,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"14544:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4759,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4795,4899],"referencedDeclaration":4899,"src":"14514:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:27"},{"condition":{"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:27","subExpression":{"id":4765,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"14563:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4770,"nodeType":"IfStatement","src":"14558:50:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4767,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"14579:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4769,"nodeType":"RevertStatement","src":"14572:36:27"}},{"expression":{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"14625:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4754,"id":4772,"nodeType":"Return","src":"14618:12:27"}]},"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"14105:259:27","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:27","nodeType":"FunctionDefinition","parameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"input","nameLocation":"14405:5:27","nodeType":"VariableDeclaration","scope":4774,"src":"14391:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4745,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4748,"mutability":"mutable","name":"begin","nameLocation":"14420:5:27","nodeType":"VariableDeclaration","scope":4774,"src":"14412:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4750,"mutability":"mutable","name":"end","nameLocation":"14435:3:27","nodeType":"VariableDeclaration","scope":4774,"src":"14427:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:27"},"returnParameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"14463:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4752,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:27"},"scope":5138,"src":"14369:268:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4794,"nodeType":"Block","src":"14944:70:27","statements":[{"expression":{"arguments":[{"id":4785,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14977:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4789,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"14993:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4787,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:27","typeDescriptions":{}}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:27","memberName":"length","nodeType":"MemberAccess","src":"14987:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4784,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4795,4899],"referencedDeclaration":4899,"src":"14961:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4783,"id":4793,"nodeType":"Return","src":"14954:53:27"}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"14643:198:27","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":4795,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:27","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"input","nameLocation":"14885:5:27","nodeType":"VariableDeclaration","scope":4795,"src":"14871:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4776,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:27"},"returnParameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"success","nameLocation":"14920:7:27","nodeType":"VariableDeclaration","scope":4795,"src":"14915:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4779,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4782,"mutability":"mutable","name":"value","nameLocation":"14937:5:27","nodeType":"VariableDeclaration","scope":4795,"src":"14929:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4781,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:27"},"scope":5138,"src":"14846:168:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4898,"nodeType":"Block","src":"15407:733:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"15421:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4812,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"15433:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4810,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:27","typeDescriptions":{}}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:27","memberName":"length","nodeType":"MemberAccess","src":"15427:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4816,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"15450:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4817,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"15458:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"nodeType":"IfStatement","src":"15417:72:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4821,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:27","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4808,"id":4826,"nodeType":"Return","src":"15463:26:27"}},{"assignments":[4829],"declarations":[{"constant":false,"id":4829,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:27","nodeType":"VariableDeclaration","scope":4898,"src":"15500:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4828,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4852,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4830,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"15518:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"15524:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4841,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"15574:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4839,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:27","typeDescriptions":{}}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4843,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"15582:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4838,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"15545:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4836,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:27","typeDescriptions":{}}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4846,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:27","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:27"},{"assignments":[4854],"declarations":[{"constant":false,"id":4854,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:27","nodeType":"VariableDeclaration","scope":4898,"src":"15686:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4853,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4862,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4856,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"15716:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"15716:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4863,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"15803:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4864,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"15809:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4866,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"15818:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4896,"nodeType":"Block","src":"16083:51:27","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4890,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:27","typeDescriptions":{}}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4808,"id":4895,"nodeType":"Return","src":"16097:26:27"}]},"id":4897,"nodeType":"IfStatement","src":"15799:335:27","trueBody":{"id":4888,"nodeType":"Block","src":"15834:243:27","statements":[{"assignments":[4869,4871],"declarations":[{"constant":false,"id":4869,"mutability":"mutable","name":"s","nameLocation":"15955:1:27","nodeType":"VariableDeclaration","scope":4888,"src":"15950:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4868,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"v","nameLocation":"15966:1:27","nodeType":"VariableDeclaration","scope":4888,"src":"15958:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4877,"initialValue":{"arguments":[{"id":4873,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"16003:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4874,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"16010:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4875,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"16017:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4872,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"15971:31:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:27"},{"expression":{"components":[{"id":4878,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"16043:1:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4883,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"16062:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4881,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:27","typeDescriptions":{}}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4879,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:27","typeDescriptions":{}}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4808,"id":4887,"nodeType":"Return","src":"16035:31:27"}]}}]},"documentation":{"id":4796,"nodeType":"StructuredDocumentation","src":"15020:226:27","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4899,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:27","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"mutability":"mutable","name":"input","nameLocation":"15299:5:27","nodeType":"VariableDeclaration","scope":4899,"src":"15285:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4797,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"begin","nameLocation":"15322:5:27","nodeType":"VariableDeclaration","scope":4899,"src":"15314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"end","nameLocation":"15345:3:27","nodeType":"VariableDeclaration","scope":4899,"src":"15337:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:27"},"returnParameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"success","nameLocation":"15383:7:27","nodeType":"VariableDeclaration","scope":4899,"src":"15378:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4804,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"value","nameLocation":"15400:5:27","nodeType":"VariableDeclaration","scope":4899,"src":"15392:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:27"},"scope":5138,"src":"15251:889:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4958,"nodeType":"Block","src":"16209:461:27","statements":[{"assignments":[4907],"declarations":[{"constant":false,"id":4907,"mutability":"mutable","name":"value","nameLocation":"16225:5:27","nodeType":"VariableDeclaration","scope":4958,"src":"16219:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4906,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4912,"initialValue":{"arguments":[{"id":4910,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"16239:3:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4908,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:27","typeDescriptions":{}}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:27"},{"id":4955,"nodeType":"UncheckedBlock","src":"16403:238:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16431:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:27","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16445:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:27","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16491:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16505:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:27","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16552:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16566:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:27","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4947,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:27","memberName":"max","nodeType":"MemberAccess","src":"16615:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4905,"id":4951,"nodeType":"Return","src":"16608:22:27"},"id":4952,"nodeType":"IfStatement","src":"16548:82:27","trueBody":{"expression":{"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16578:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:27","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4945,"nodeType":"ExpressionStatement","src":"16578:11:27"}},"id":4953,"nodeType":"IfStatement","src":"16487:143:27","trueBody":{"expression":{"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16518:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:27","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4934,"nodeType":"ExpressionStatement","src":"16518:11:27"}},"id":4954,"nodeType":"IfStatement","src":"16427:203:27","trueBody":{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16457:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4923,"nodeType":"ExpressionStatement","src":"16457:11:27"}}]},{"expression":{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"16658:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4905,"id":4957,"nodeType":"Return","src":"16651:12:27"}]},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:27","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"chr","nameLocation":"16175:3:27","nodeType":"VariableDeclaration","scope":4959,"src":"16168:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4900,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:27"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4959,"src":"16202:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4903,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:27"},"scope":5138,"src":"16146:524:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5124,"nodeType":"Block","src":"17336:1331:27","statements":[{"assignments":[4968],"declarations":[{"constant":false,"id":4968,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:27","nodeType":"VariableDeclaration","scope":5124,"src":"17346:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4967,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4973,"initialValue":{"arguments":[{"id":4971,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"17374:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4969,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:27","typeDescriptions":{}}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:27"},{"assignments":[4975],"declarations":[{"constant":false,"id":4975,"mutability":"mutable","name":"output","nameLocation":"17403:6:27","nodeType":"VariableDeclaration","scope":5124,"src":"17390:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4974,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4983,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4979,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"17426:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:27","memberName":"length","nodeType":"MemberAccess","src":"17426:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4976,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:27"},{"assignments":[4985],"declarations":[{"constant":false,"id":4985,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:27","nodeType":"VariableDeclaration","scope":5124,"src":"17473:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4987,"initialValue":{"hexValue":"30","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:27"},{"body":{"id":5116,"nodeType":"Block","src":"17548:854:27","statements":[{"assignments":[4999],"declarations":[{"constant":false,"id":4999,"mutability":"mutable","name":"char","nameLocation":"17569:4:27","nodeType":"VariableDeclaration","scope":5116,"src":"17562:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4998,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5007,"initialValue":{"arguments":[{"arguments":[{"id":5003,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"17606:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"17614:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5002,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"17583:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5000,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:27","typeDescriptions":{}}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:27"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"17637:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5012,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17672:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5010,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:27","typeDescriptions":{}}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5114,"nodeType":"Block","src":"18330:62:27","statements":[{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5107,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"18348:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5110,"indexExpression":{"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:27","subExpression":{"id":5108,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"18355:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5111,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"18373:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5113,"nodeType":"ExpressionStatement","src":"18348:29:27"}]},"id":5115,"nodeType":"IfStatement","src":"17631:761:27","trueBody":{"id":5106,"nodeType":"Block","src":"17687:637:27","statements":[{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5021,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"17705:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5024,"indexExpression":{"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:27","subExpression":{"id":5022,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17712:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5027,"nodeType":"ExpressionStatement","src":"17705:29:27"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17756:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17825:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:27","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17894:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17963:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:27","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"18032:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:27","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"18101:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:27","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5088,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"18171:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:27","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"18167:143:27","trueBody":{"id":5098,"nodeType":"Block","src":"18185:125:27","statements":[{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5091,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"18263:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5094,"indexExpression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:27","subExpression":{"id":5092,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"18270:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5097,"nodeType":"ExpressionStatement","src":"18263:28:27"}]}},"id":5100,"nodeType":"IfStatement","src":"18097:213:27","trueBody":{"expression":{"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5081,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"18115:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5084,"indexExpression":{"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:27","subExpression":{"id":5082,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"18122:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5087,"nodeType":"ExpressionStatement","src":"18115:29:27"}},"id":5101,"nodeType":"IfStatement","src":"18028:282:27","trueBody":{"expression":{"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5071,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"18046:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5074,"indexExpression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:27","subExpression":{"id":5072,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"18053:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5077,"nodeType":"ExpressionStatement","src":"18046:28:27"}},"id":5102,"nodeType":"IfStatement","src":"17959:351:27","trueBody":{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5061,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"17977:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5064,"indexExpression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:27","subExpression":{"id":5062,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17984:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5067,"nodeType":"ExpressionStatement","src":"17977:28:27"}},"id":5103,"nodeType":"IfStatement","src":"17890:420:27","trueBody":{"expression":{"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5051,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"17908:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5054,"indexExpression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:27","subExpression":{"id":5052,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17915:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5057,"nodeType":"ExpressionStatement","src":"17908:28:27"}},"id":5104,"nodeType":"IfStatement","src":"17821:489:27","trueBody":{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5041,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"17839:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5044,"indexExpression":{"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:27","subExpression":{"id":5042,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17846:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5047,"nodeType":"ExpressionStatement","src":"17839:28:27"}},"id":5105,"nodeType":"IfStatement","src":"17752:558:27","trueBody":{"expression":{"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5031,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"17770:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5034,"indexExpression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:27","subExpression":{"id":5032,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"17777:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5037,"nodeType":"ExpressionStatement","src":"17770:28:27"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"17524:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4992,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"17528:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:27","memberName":"length","nodeType":"MemberAccess","src":"17528:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5117,"initializationExpression":{"assignments":[4989],"declarations":[{"constant":false,"id":4989,"mutability":"mutable","name":"i","nameLocation":"17521:1:27","nodeType":"VariableDeclaration","scope":5117,"src":"17513:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4990,"nodeType":"VariableDeclarationStatement","src":"17513:9:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:27","subExpression":{"id":4995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"17545:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4997,"nodeType":"ExpressionStatement","src":"17543:3:27"},"nodeType":"ForStatement","src":"17508:894:27"},{"AST":{"nativeSrc":"18500:129:27","nodeType":"YulBlock","src":"18500:129:27","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:27","nodeType":"YulIdentifier","src":"18521:6:27"},{"name":"outputLength","nativeSrc":"18529:12:27","nodeType":"YulIdentifier","src":"18529:12:27"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:27","nodeType":"YulIdentifier","src":"18514:6:27"},"nativeSrc":"18514:28:27","nodeType":"YulFunctionCall","src":"18514:28:27"},"nativeSrc":"18514:28:27","nodeType":"YulExpressionStatement","src":"18514:28:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:27","nodeType":"YulLiteral","src":"18562:4:27","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:27","nodeType":"YulIdentifier","src":"18572:6:27"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:27","nodeType":"YulLiteral","src":"18584:1:27","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:27","nodeType":"YulLiteral","src":"18591:1:27","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:27","nodeType":"YulIdentifier","src":"18598:12:27"},{"kind":"number","nativeSrc":"18612:2:27","nodeType":"YulLiteral","src":"18612:2:27","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:27","nodeType":"YulIdentifier","src":"18594:3:27"},"nativeSrc":"18594:21:27","nodeType":"YulFunctionCall","src":"18594:21:27"}],"functionName":{"name":"shr","nativeSrc":"18587:3:27","nodeType":"YulIdentifier","src":"18587:3:27"},"nativeSrc":"18587:29:27","nodeType":"YulFunctionCall","src":"18587:29:27"}],"functionName":{"name":"shl","nativeSrc":"18580:3:27","nodeType":"YulIdentifier","src":"18580:3:27"},"nativeSrc":"18580:37:27","nodeType":"YulFunctionCall","src":"18580:37:27"}],"functionName":{"name":"add","nativeSrc":"18568:3:27","nodeType":"YulIdentifier","src":"18568:3:27"},"nativeSrc":"18568:50:27","nodeType":"YulFunctionCall","src":"18568:50:27"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:27","nodeType":"YulIdentifier","src":"18555:6:27"},"nativeSrc":"18555:64:27","nodeType":"YulFunctionCall","src":"18555:64:27"},"nativeSrc":"18555:64:27","nodeType":"YulExpressionStatement","src":"18555:64:27"}]},"evmVersion":"paris","externalReferences":[{"declaration":4975,"isOffset":false,"isSlot":false,"src":"18521:6:27","valueSize":1},{"declaration":4975,"isOffset":false,"isSlot":false,"src":"18572:6:27","valueSize":1},{"declaration":4985,"isOffset":false,"isSlot":false,"src":"18529:12:27","valueSize":1},{"declaration":4985,"isOffset":false,"isSlot":false,"src":"18598:12:27","valueSize":1}],"flags":["memory-safe"],"id":5118,"nodeType":"InlineAssembly","src":"18475:154:27"},{"expression":{"arguments":[{"id":5121,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"18653:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5119,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:27","typeDescriptions":{}}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4966,"id":5123,"nodeType":"Return","src":"18639:21:27"}]},"documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"16676:576:27","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:27","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"input","nameLocation":"17291:5:27","nodeType":"VariableDeclaration","scope":5125,"src":"17277:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4961,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:27"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"17321:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4964,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:27"},"scope":5138,"src":"17257:1410:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5136,"nodeType":"Block","src":"19052:225:27","statements":[{"AST":{"nativeSrc":"19201:70:27","nodeType":"YulBlock","src":"19201:70:27","statements":[{"nativeSrc":"19215:46:27","nodeType":"YulAssignment","src":"19215:46:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:27","nodeType":"YulIdentifier","src":"19238:6:27"},{"kind":"number","nativeSrc":"19246:4:27","nodeType":"YulLiteral","src":"19246:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:27","nodeType":"YulIdentifier","src":"19234:3:27"},"nativeSrc":"19234:17:27","nodeType":"YulFunctionCall","src":"19234:17:27"},{"name":"offset","nativeSrc":"19253:6:27","nodeType":"YulIdentifier","src":"19253:6:27"}],"functionName":{"name":"add","nativeSrc":"19230:3:27","nodeType":"YulIdentifier","src":"19230:3:27"},"nativeSrc":"19230:30:27","nodeType":"YulFunctionCall","src":"19230:30:27"}],"functionName":{"name":"mload","nativeSrc":"19224:5:27","nodeType":"YulIdentifier","src":"19224:5:27"},"nativeSrc":"19224:37:27","nodeType":"YulFunctionCall","src":"19224:37:27"},"variableNames":[{"name":"value","nativeSrc":"19215:5:27","nodeType":"YulIdentifier","src":"19215:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5128,"isOffset":false,"isSlot":false,"src":"19238:6:27","valueSize":1},{"declaration":5130,"isOffset":false,"isSlot":false,"src":"19253:6:27","valueSize":1},{"declaration":5133,"isOffset":false,"isSlot":false,"src":"19215:5:27","valueSize":1}],"flags":["memory-safe"],"id":5135,"nodeType":"InlineAssembly","src":"19176:95:27"}]},"documentation":{"id":5126,"nodeType":"StructuredDocumentation","src":"18673:268:27","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5137,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:27","nodeType":"FunctionDefinition","parameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:27","nodeType":"VariableDeclaration","scope":5137,"src":"18978:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5127,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5130,"mutability":"mutable","name":"offset","nameLocation":"19007:6:27","nodeType":"VariableDeclaration","scope":5137,"src":"18999:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5129,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:27"},"returnParameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"value","nameLocation":"19045:5:27","nodeType":"VariableDeclaration","scope":5137,"src":"19037:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:27"},"scope":5138,"src":"18946:331:27","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5139,"src":"297:18982:27","usedErrors":[3796,3799,3802],"usedEvents":[]}],"src":"101:19179:27"},"id":27},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[5178]},"id":5179,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5140,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":5141,"nodeType":"StructuredDocumentation","src":"139:81:28","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":5178,"linearizedBaseContracts":[5178],"name":"Hashes","nameLocation":"229:6:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":5164,"nodeType":"Block","src":"588:83:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"605:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5152,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"609:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5159,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"659:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5160,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"662:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5158,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"640:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:59:28","trueExpression":{"arguments":[{"id":5155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"632:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"635:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5154,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"613:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5150,"id":5163,"nodeType":"Return","src":"598:66:28"}]},"documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"242:257:28","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":5165,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:28","nodeType":"FunctionDefinition","parameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"a","nameLocation":"542:1:28","nodeType":"VariableDeclaration","scope":5165,"src":"534:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5146,"mutability":"mutable","name":"b","nameLocation":"553:1:28","nodeType":"VariableDeclaration","scope":5165,"src":"545:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:28"},"returnParameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5165,"src":"579:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:28"},"scope":5178,"src":"504:167:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5176,"nodeType":"Block","src":"879:151:28","statements":[{"AST":{"nativeSrc":"914:110:28","nodeType":"YulBlock","src":"914:110:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"935:4:28","nodeType":"YulLiteral","src":"935:4:28","type":"","value":"0x00"},{"name":"a","nativeSrc":"941:1:28","nodeType":"YulIdentifier","src":"941:1:28"}],"functionName":{"name":"mstore","nativeSrc":"928:6:28","nodeType":"YulIdentifier","src":"928:6:28"},"nativeSrc":"928:15:28","nodeType":"YulFunctionCall","src":"928:15:28"},"nativeSrc":"928:15:28","nodeType":"YulExpressionStatement","src":"928:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"963:4:28","nodeType":"YulLiteral","src":"963:4:28","type":"","value":"0x20"},{"name":"b","nativeSrc":"969:1:28","nodeType":"YulIdentifier","src":"969:1:28"}],"functionName":{"name":"mstore","nativeSrc":"956:6:28","nodeType":"YulIdentifier","src":"956:6:28"},"nativeSrc":"956:15:28","nodeType":"YulFunctionCall","src":"956:15:28"},"nativeSrc":"956:15:28","nodeType":"YulExpressionStatement","src":"956:15:28"},{"nativeSrc":"984:30:28","nodeType":"YulAssignment","src":"984:30:28","value":{"arguments":[{"kind":"number","nativeSrc":"1003:4:28","nodeType":"YulLiteral","src":"1003:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1009:4:28","nodeType":"YulLiteral","src":"1009:4:28","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"993:9:28","nodeType":"YulIdentifier","src":"993:9:28"},"nativeSrc":"993:21:28","nodeType":"YulFunctionCall","src":"993:21:28"},"variableNames":[{"name":"value","nativeSrc":"984:5:28","nodeType":"YulIdentifier","src":"984:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5168,"isOffset":false,"isSlot":false,"src":"941:1:28","valueSize":1},{"declaration":5170,"isOffset":false,"isSlot":false,"src":"969:1:28","valueSize":1},{"declaration":5173,"isOffset":false,"isSlot":false,"src":"984:5:28","valueSize":1}],"flags":["memory-safe"],"id":5175,"nodeType":"InlineAssembly","src":"889:135:28"}]},"documentation":{"id":5166,"nodeType":"StructuredDocumentation","src":"677:109:28","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":5177,"implemented":true,"kind":"function","modifiers":[],"name":"efficientKeccak256","nameLocation":"800:18:28","nodeType":"FunctionDefinition","parameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5168,"mutability":"mutable","name":"a","nameLocation":"827:1:28","nodeType":"VariableDeclaration","scope":5177,"src":"819:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5170,"mutability":"mutable","name":"b","nameLocation":"838:1:28","nodeType":"VariableDeclaration","scope":5177,"src":"830:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:22:28"},"returnParameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"value","nameLocation":"872:5:28","nodeType":"VariableDeclaration","scope":5177,"src":"864:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:15:28"},"scope":5178,"src":"791:239:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5179,"src":"221:811:28","usedErrors":[],"usedEvents":[]}],"src":"113:920:28"},"id":28},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[5178],"MerkleProof":[6251]},"id":6252,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5180,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":5182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6252,"sourceUnit":5179,"src":"232:36:29","symbolAliases":[{"foreign":{"id":5181,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"240:6:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":5183,"nodeType":"StructuredDocumentation","src":"270:1082:29","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":6251,"linearizedBaseContracts":[6251],"name":"MerkleProof","nameLocation":"1361:11:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5184,"nodeType":"StructuredDocumentation","src":"1379:60:29","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":5186,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:29","nodeType":"ErrorDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[],"src":"1478:2:29"},"src":"1444:37:29"},{"body":{"id":5206,"nodeType":"Block","src":"1999:57:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5200,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"2029:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5201,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"2036:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5199,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[5248,5330],"referencedDeclaration":5248,"src":"2016:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5203,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"2045:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5198,"id":5205,"nodeType":"Return","src":"2009:40:29"}]},"documentation":{"id":5187,"nodeType":"StructuredDocumentation","src":"1487:410:29","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":5207,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:29","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"proof","nameLocation":"1935:5:29","nodeType":"VariableDeclaration","scope":5207,"src":"1918:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5189,"nodeType":"ArrayTypeName","src":"1918:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5192,"mutability":"mutable","name":"root","nameLocation":"1950:4:29","nodeType":"VariableDeclaration","scope":5207,"src":"1942:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5194,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:29","nodeType":"VariableDeclaration","scope":5207,"src":"1956:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:29"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5207,"src":"1993:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5196,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:29"},"scope":6251,"src":"1902:154:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5247,"nodeType":"Block","src":"2549:216:29","statements":[{"assignments":[5219],"declarations":[{"constant":false,"id":5219,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:29","nodeType":"VariableDeclaration","scope":5247,"src":"2559:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5221,"initialValue":{"id":5220,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"2582:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:29"},{"body":{"id":5243,"nodeType":"Block","src":"2639:91:29","statements":[{"expression":{"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5233,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"2653:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5236,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"2696:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5237,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"2710:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5239,"indexExpression":{"id":5238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"2716:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5234,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"2668:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$5178_$","typeString":"type(library Hashes)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:29","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":5165,"src":"2668:27:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5242,"nodeType":"ExpressionStatement","src":"2653:66:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"2616:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5227,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"2620:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:29","memberName":"length","nodeType":"MemberAccess","src":"2620:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5244,"initializationExpression":{"assignments":[5223],"declarations":[{"constant":false,"id":5223,"mutability":"mutable","name":"i","nameLocation":"2609:1:29","nodeType":"VariableDeclaration","scope":5244,"src":"2601:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5225,"initialValue":{"hexValue":"30","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:29","subExpression":{"id":5230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"2634:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5232,"nodeType":"ExpressionStatement","src":"2634:3:29"},"nodeType":"ForStatement","src":"2596:134:29"},{"expression":{"id":5245,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"2746:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5217,"id":5246,"nodeType":"Return","src":"2739:19:29"}]},"documentation":{"id":5208,"nodeType":"StructuredDocumentation","src":"2062:390:29","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":5248,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:29","nodeType":"FunctionDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"proof","nameLocation":"2496:5:29","nodeType":"VariableDeclaration","scope":5248,"src":"2479:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5210,"nodeType":"ArrayTypeName","src":"2479:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5213,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:29","nodeType":"VariableDeclaration","scope":5248,"src":"2503:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:29"},"returnParameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5248,"src":"2540:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:29"},"scope":6251,"src":"2457:308:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5279,"nodeType":"Block","src":"3376:65:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5272,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"3406:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5273,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"3413:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5274,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"3419:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":5271,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[5248,5330],"referencedDeclaration":5330,"src":"3393:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5276,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"3430:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5270,"id":5278,"nodeType":"Return","src":"3386:48:29"}]},"documentation":{"id":5249,"nodeType":"StructuredDocumentation","src":"2771:407:29","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":5280,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:29","nodeType":"FunctionDefinition","parameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"proof","nameLocation":"3225:5:29","nodeType":"VariableDeclaration","scope":5280,"src":"3208:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5251,"nodeType":"ArrayTypeName","src":"3208:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5254,"mutability":"mutable","name":"root","nameLocation":"3248:4:29","nodeType":"VariableDeclaration","scope":5280,"src":"3240:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5256,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:29","nodeType":"VariableDeclaration","scope":5280,"src":"3262:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5266,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:29","nodeType":"VariableDeclaration","scope":5280,"src":"3284:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5265,"nodeType":"FunctionTypeName","parameterTypes":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"3293:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"3302:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:29"},"returnParameterTypes":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"3325:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:29"},"src":"3284:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:29"},"returnParameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5280,"src":"3370:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5268,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:29"},"scope":6251,"src":"3183:258:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5329,"nodeType":"Block","src":"4019:195:29","statements":[{"assignments":[5302],"declarations":[{"constant":false,"id":5302,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:29","nodeType":"VariableDeclaration","scope":5329,"src":"4029:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5304,"initialValue":{"id":5303,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"4052:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:29"},{"body":{"id":5325,"nodeType":"Block","src":"4109:70:29","statements":[{"expression":{"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5316,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"4123:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5318,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"4145:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5319,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"4159:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5321,"indexExpression":{"id":5320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"4165:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5317,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"4138:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5324,"nodeType":"ExpressionStatement","src":"4123:45:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"4086:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5310,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"4090:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:29","memberName":"length","nodeType":"MemberAccess","src":"4090:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5326,"initializationExpression":{"assignments":[5306],"declarations":[{"constant":false,"id":5306,"mutability":"mutable","name":"i","nameLocation":"4079:1:29","nodeType":"VariableDeclaration","scope":5326,"src":"4071:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5308,"initialValue":{"hexValue":"30","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:29","subExpression":{"id":5313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"4104:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5315,"nodeType":"ExpressionStatement","src":"4104:3:29"},"nodeType":"ForStatement","src":"4066:113:29"},{"expression":{"id":5327,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"4195:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5300,"id":5328,"nodeType":"Return","src":"4188:19:29"}]},"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"3447:387:29","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":5330,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:29","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"proof","nameLocation":"3887:5:29","nodeType":"VariableDeclaration","scope":5330,"src":"3870:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5283,"nodeType":"ArrayTypeName","src":"3870:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5286,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:29","nodeType":"VariableDeclaration","scope":5330,"src":"3902:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5296,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:29","nodeType":"VariableDeclaration","scope":5330,"src":"3924:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5295,"nodeType":"FunctionTypeName","parameterTypes":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5295,"src":"3933:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5295,"src":"3942:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:29"},"returnParameterTypes":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5295,"src":"3965:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:29"},"src":"3924:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:29"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5330,"src":"4010:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:29"},"scope":6251,"src":"3839:375:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5350,"nodeType":"Block","src":"4744:65:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5344,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"4782:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":5345,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"4789:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5343,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[5392,5474],"referencedDeclaration":5392,"src":"4761:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5347,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"4798:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5342,"id":5349,"nodeType":"Return","src":"4754:48:29"}]},"documentation":{"id":5331,"nodeType":"StructuredDocumentation","src":"4220:412:29","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":5351,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:29","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"proof","nameLocation":"4680:5:29","nodeType":"VariableDeclaration","scope":5351,"src":"4661:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5333,"nodeType":"ArrayTypeName","src":"4661:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5336,"mutability":"mutable","name":"root","nameLocation":"4695:4:29","nodeType":"VariableDeclaration","scope":5351,"src":"4687:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5338,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:29","nodeType":"VariableDeclaration","scope":5351,"src":"4701:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:29"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5351,"src":"4738:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5340,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:29"},"scope":6251,"src":"4637:172:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5391,"nodeType":"Block","src":"5314:216:29","statements":[{"assignments":[5363],"declarations":[{"constant":false,"id":5363,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:29","nodeType":"VariableDeclaration","scope":5391,"src":"5324:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5365,"initialValue":{"id":5364,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"5347:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:29"},{"body":{"id":5387,"nodeType":"Block","src":"5404:91:29","statements":[{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5377,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"5418:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5380,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"5461:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5381,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"5475:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5383,"indexExpression":{"id":5382,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"5481:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5378,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"5433:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$5178_$","typeString":"type(library Hashes)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:29","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":5165,"src":"5433:27:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5386,"nodeType":"ExpressionStatement","src":"5418:66:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"5381:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5371,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"5385:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:29","memberName":"length","nodeType":"MemberAccess","src":"5385:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5388,"initializationExpression":{"assignments":[5367],"declarations":[{"constant":false,"id":5367,"mutability":"mutable","name":"i","nameLocation":"5374:1:29","nodeType":"VariableDeclaration","scope":5388,"src":"5366:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5366,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5369,"initialValue":{"hexValue":"30","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:29","subExpression":{"id":5374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"5399:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5376,"nodeType":"ExpressionStatement","src":"5399:3:29"},"nodeType":"ForStatement","src":"5361:134:29"},{"expression":{"id":5389,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"5511:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5361,"id":5390,"nodeType":"Return","src":"5504:19:29"}]},"documentation":{"id":5352,"nodeType":"StructuredDocumentation","src":"4815:392:29","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":5392,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:29","nodeType":"FunctionDefinition","parameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"proof","nameLocation":"5261:5:29","nodeType":"VariableDeclaration","scope":5392,"src":"5242:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5354,"nodeType":"ArrayTypeName","src":"5242:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:29","nodeType":"VariableDeclaration","scope":5392,"src":"5268:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:29"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5392,"src":"5305:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:29"},"scope":6251,"src":"5212:318:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"6153:73:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5416,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"6191:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":5417,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"6198:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5418,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"6204:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":5415,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[5392,5474],"referencedDeclaration":5474,"src":"6170:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5420,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"6215:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5414,"id":5422,"nodeType":"Return","src":"6163:56:29"}]},"documentation":{"id":5393,"nodeType":"StructuredDocumentation","src":"5536:409:29","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:29","nodeType":"FunctionDefinition","parameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"proof","nameLocation":"6002:5:29","nodeType":"VariableDeclaration","scope":5424,"src":"5983:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5395,"nodeType":"ArrayTypeName","src":"5983:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5398,"mutability":"mutable","name":"root","nameLocation":"6025:4:29","nodeType":"VariableDeclaration","scope":5424,"src":"6017:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5400,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:29","nodeType":"VariableDeclaration","scope":5424,"src":"6039:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5410,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:29","nodeType":"VariableDeclaration","scope":5424,"src":"6061:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5409,"nodeType":"FunctionTypeName","parameterTypes":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5409,"src":"6070:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5409,"src":"6079:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:29"},"returnParameterTypes":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5409,"src":"6102:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:29"},"src":"6061:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:29"},"returnParameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"6147:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5412,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:29"},"scope":6251,"src":"5950:276:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"6816:195:29","statements":[{"assignments":[5446],"declarations":[{"constant":false,"id":5446,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:29","nodeType":"VariableDeclaration","scope":5473,"src":"6826:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5448,"initialValue":{"id":5447,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"6849:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:29"},{"body":{"id":5469,"nodeType":"Block","src":"6906:70:29","statements":[{"expression":{"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5460,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6920:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5462,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6942:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5463,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"6956:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5465,"indexExpression":{"id":5464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"6962:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5461,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"6935:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5468,"nodeType":"ExpressionStatement","src":"6920:45:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"6883:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5454,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"6887:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:29","memberName":"length","nodeType":"MemberAccess","src":"6887:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5470,"initializationExpression":{"assignments":[5450],"declarations":[{"constant":false,"id":5450,"mutability":"mutable","name":"i","nameLocation":"6876:1:29","nodeType":"VariableDeclaration","scope":5470,"src":"6868:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5452,"initialValue":{"hexValue":"30","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:29","subExpression":{"id":5457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"6901:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5459,"nodeType":"ExpressionStatement","src":"6901:3:29"},"nodeType":"ForStatement","src":"6863:113:29"},{"expression":{"id":5471,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6992:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5444,"id":5472,"nodeType":"Return","src":"6985:19:29"}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"6232:389:29","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:29","nodeType":"FunctionDefinition","parameters":{"id":5441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5428,"mutability":"mutable","name":"proof","nameLocation":"6684:5:29","nodeType":"VariableDeclaration","scope":5474,"src":"6665:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5427,"nodeType":"ArrayTypeName","src":"6665:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:29","nodeType":"VariableDeclaration","scope":5474,"src":"6699:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5440,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:29","nodeType":"VariableDeclaration","scope":5474,"src":"6721:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5439,"nodeType":"FunctionTypeName","parameterTypes":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5439,"src":"6730:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5439,"src":"6739:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:29"},"returnParameterTypes":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5439,"src":"6762:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:29"},"src":"6721:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:29"},"returnParameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5474,"src":"6807:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:29"},"scope":6251,"src":"6626:385:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5499,"nodeType":"Block","src":"7797:76:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5492,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"7832:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5493,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"7839:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":5494,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"7851:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":5491,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[5658,5862],"referencedDeclaration":5658,"src":"7814:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5496,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"7862:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5490,"id":5498,"nodeType":"Return","src":"7807:59:29"}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"7017:593:29","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":5500,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:29","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"proof","nameLocation":"7667:5:29","nodeType":"VariableDeclaration","scope":5500,"src":"7650:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5477,"nodeType":"ArrayTypeName","src":"7650:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5481,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:29","nodeType":"VariableDeclaration","scope":5500,"src":"7682:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5479,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5480,"nodeType":"ArrayTypeName","src":"7682:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5483,"mutability":"mutable","name":"root","nameLocation":"7724:4:29","nodeType":"VariableDeclaration","scope":5500,"src":"7716:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5486,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:29","nodeType":"VariableDeclaration","scope":5500,"src":"7738:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5485,"nodeType":"ArrayTypeName","src":"7738:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:29"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5500,"src":"7791:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5488,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:29"},"scope":6251,"src":"7615:258:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5657,"nodeType":"Block","src":"9159:2104:29","statements":[{"assignments":[5516],"declarations":[{"constant":false,"id":5516,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:29","nodeType":"VariableDeclaration","scope":5657,"src":"9543:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5515,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5519,"initialValue":{"expression":{"id":5517,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"9563:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:29","memberName":"length","nodeType":"MemberAccess","src":"9563:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:29"},{"assignments":[5521],"declarations":[{"constant":false,"id":5521,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:29","nodeType":"VariableDeclaration","scope":5657,"src":"9586:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5524,"initialValue":{"expression":{"id":5522,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"9610:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:29","memberName":"length","nodeType":"MemberAccess","src":"9610:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"9675:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":5526,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"9687:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:29","memberName":"length","nodeType":"MemberAccess","src":"9687:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"9703:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"9671:113:29","trueBody":{"id":5536,"nodeType":"Block","src":"9722:62:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5533,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"9743:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"RevertStatement","src":"9736:37:29"}]}},{"assignments":[5542],"declarations":[{"constant":false,"id":5542,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:29","nodeType":"VariableDeclaration","scope":5657,"src":"10028:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5541,"nodeType":"ArrayTypeName","src":"10028:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5548,"initialValue":{"arguments":[{"id":5546,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"10068:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5544,"nodeType":"ArrayTypeName","src":"10058:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:29"},{"assignments":[5550],"declarations":[{"constant":false,"id":5550,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:29","nodeType":"VariableDeclaration","scope":5657,"src":"10092:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5552,"initialValue":{"hexValue":"30","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:29"},{"assignments":[5554],"declarations":[{"constant":false,"id":5554,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:29","nodeType":"VariableDeclaration","scope":5657,"src":"10121:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5553,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5556,"initialValue":{"hexValue":"30","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:29"},{"assignments":[5558],"declarations":[{"constant":false,"id":5558,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:29","nodeType":"VariableDeclaration","scope":5657,"src":"10150:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5560,"initialValue":{"hexValue":"30","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:29"},{"body":{"id":5620,"nodeType":"Block","src":"10590:310:29","statements":[{"assignments":[5572],"declarations":[{"constant":false,"id":5572,"mutability":"mutable","name":"a","nameLocation":"10612:1:29","nodeType":"VariableDeclaration","scope":5620,"src":"10604:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5585,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"10616:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5574,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"10626:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5580,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"10658:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5583,"indexExpression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:29","subExpression":{"id":5581,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"10665:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:29","trueExpression":{"baseExpression":{"id":5576,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"10638:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5579,"indexExpression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:29","subExpression":{"id":5577,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"10645:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:29"},{"assignments":[5587],"declarations":[{"constant":false,"id":5587,"mutability":"mutable","name":"b","nameLocation":"10697:1:29","nodeType":"VariableDeclaration","scope":5620,"src":"10689:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5609,"initialValue":{"condition":{"baseExpression":{"id":5588,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"10701:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5590,"indexExpression":{"id":5589,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"10712:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5604,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"10813:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5607,"indexExpression":{"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:29","subExpression":{"id":5605,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"10819:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:29","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"10734:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5592,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"10744:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5598,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"10776:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5601,"indexExpression":{"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:29","subExpression":{"id":5599,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"10783:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:29","trueExpression":{"baseExpression":{"id":5594,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"10756:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5597,"indexExpression":{"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:29","subExpression":{"id":5595,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"10763:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:29"},{"expression":{"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5610,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"10844:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5612,"indexExpression":{"id":5611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"10851:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"10884:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5616,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"10887:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5613,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"10856:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$5178_$","typeString":"type(library Hashes)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:29","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":5165,"src":"10856:27:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5619,"nodeType":"ExpressionStatement","src":"10844:45:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5565,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"10566:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5566,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"10570:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5621,"initializationExpression":{"assignments":[5562],"declarations":[{"constant":false,"id":5562,"mutability":"mutable","name":"i","nameLocation":"10559:1:29","nodeType":"VariableDeclaration","scope":5621,"src":"10551:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5564,"initialValue":{"hexValue":"30","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:29","subExpression":{"id":5568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"10585:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5570,"nodeType":"ExpressionStatement","src":"10585:3:29"},"nodeType":"ForStatement","src":"10546:354:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"10914:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5642,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"11155:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5654,"nodeType":"Block","src":"11217:40:29","statements":[{"expression":{"baseExpression":{"id":5650,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"11238:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5652,"indexExpression":{"hexValue":"30","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5514,"id":5653,"nodeType":"Return","src":"11231:15:29"}]},"id":5655,"nodeType":"IfStatement","src":"11151:106:29","trueBody":{"id":5649,"nodeType":"Block","src":"11170:41:29","statements":[{"expression":{"baseExpression":{"id":5645,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"11191:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5647,"indexExpression":{"hexValue":"30","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5514,"id":5648,"nodeType":"Return","src":"11184:16:29"}]}},"id":5656,"nodeType":"IfStatement","src":"10910:347:29","trueBody":{"id":5641,"nodeType":"Block","src":"10933:212:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5625,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"10951:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5626,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"10963:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:29","memberName":"length","nodeType":"MemberAccess","src":"10963:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5633,"nodeType":"IfStatement","src":"10947:100:29","trueBody":{"id":5632,"nodeType":"Block","src":"10977:70:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5629,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"11002:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5631,"nodeType":"RevertStatement","src":"10995:37:29"}]}},{"id":5640,"nodeType":"UncheckedBlock","src":"11060:75:29","statements":[{"expression":{"baseExpression":{"id":5634,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"11095:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5638,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"11102:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5514,"id":5639,"nodeType":"Return","src":"11088:32:29"}]}]}}]},"documentation":{"id":5501,"nodeType":"StructuredDocumentation","src":"7879:1100:29","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":5658,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:29","nodeType":"FunctionDefinition","parameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"proof","nameLocation":"9037:5:29","nodeType":"VariableDeclaration","scope":5658,"src":"9020:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5503,"nodeType":"ArrayTypeName","src":"9020:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:29","nodeType":"VariableDeclaration","scope":5658,"src":"9052:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5505,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5506,"nodeType":"ArrayTypeName","src":"9052:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5510,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:29","nodeType":"VariableDeclaration","scope":5658,"src":"9086:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5509,"nodeType":"ArrayTypeName","src":"9086:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:29"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:29","nodeType":"VariableDeclaration","scope":5658,"src":"9139:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:29"},"scope":6251,"src":"8984:2279:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"12112:84:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5686,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"12147:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5687,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"12154:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":5688,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"12166:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5689,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"12174:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":5685,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[5658,5862],"referencedDeclaration":5862,"src":"12129:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5691,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"12185:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5684,"id":5693,"nodeType":"Return","src":"12122:67:29"}]},"documentation":{"id":5659,"nodeType":"StructuredDocumentation","src":"11269:590:29","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:29","nodeType":"FunctionDefinition","parameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"proof","nameLocation":"11916:5:29","nodeType":"VariableDeclaration","scope":5695,"src":"11899:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5661,"nodeType":"ArrayTypeName","src":"11899:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5665,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:29","nodeType":"VariableDeclaration","scope":5695,"src":"11931:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5663,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5664,"nodeType":"ArrayTypeName","src":"11931:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5667,"mutability":"mutable","name":"root","nameLocation":"11973:4:29","nodeType":"VariableDeclaration","scope":5695,"src":"11965:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5670,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:29","nodeType":"VariableDeclaration","scope":5695,"src":"11987:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5669,"nodeType":"ArrayTypeName","src":"11987:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5680,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:29","nodeType":"VariableDeclaration","scope":5695,"src":"12020:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5679,"nodeType":"FunctionTypeName","parameterTypes":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"12029:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"12038:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:29"},"returnParameterTypes":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"12061:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:29"},"src":"12020:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:29"},"returnParameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5695,"src":"12106:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5682,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:29"},"scope":6251,"src":"11864:332:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5861,"nodeType":"Block","src":"13545:2083:29","statements":[{"assignments":[5721],"declarations":[{"constant":false,"id":5721,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:29","nodeType":"VariableDeclaration","scope":5861,"src":"13929:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5720,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5724,"initialValue":{"expression":{"id":5722,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"13949:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:29","memberName":"length","nodeType":"MemberAccess","src":"13949:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:29"},{"assignments":[5726],"declarations":[{"constant":false,"id":5726,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:29","nodeType":"VariableDeclaration","scope":5861,"src":"13972:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5729,"initialValue":{"expression":{"id":5727,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"13996:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:29","memberName":"length","nodeType":"MemberAccess","src":"13996:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5730,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"14061:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":5731,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"14073:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:29","memberName":"length","nodeType":"MemberAccess","src":"14073:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"14089:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5742,"nodeType":"IfStatement","src":"14057:113:29","trueBody":{"id":5741,"nodeType":"Block","src":"14108:62:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5738,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"14129:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5740,"nodeType":"RevertStatement","src":"14122:37:29"}]}},{"assignments":[5747],"declarations":[{"constant":false,"id":5747,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:29","nodeType":"VariableDeclaration","scope":5861,"src":"14414:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5746,"nodeType":"ArrayTypeName","src":"14414:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5753,"initialValue":{"arguments":[{"id":5751,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"14454:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5749,"nodeType":"ArrayTypeName","src":"14444:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:29"},{"assignments":[5755],"declarations":[{"constant":false,"id":5755,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:29","nodeType":"VariableDeclaration","scope":5861,"src":"14478:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5754,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5757,"initialValue":{"hexValue":"30","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:29"},{"assignments":[5759],"declarations":[{"constant":false,"id":5759,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:29","nodeType":"VariableDeclaration","scope":5861,"src":"14507:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5758,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5761,"initialValue":{"hexValue":"30","id":5760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:29"},{"assignments":[5763],"declarations":[{"constant":false,"id":5763,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:29","nodeType":"VariableDeclaration","scope":5861,"src":"14536:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5765,"initialValue":{"hexValue":"30","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:29"},{"body":{"id":5824,"nodeType":"Block","src":"14976:289:29","statements":[{"assignments":[5777],"declarations":[{"constant":false,"id":5777,"mutability":"mutable","name":"a","nameLocation":"14998:1:29","nodeType":"VariableDeclaration","scope":5824,"src":"14990:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5790,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"15002:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5779,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"15012:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5785,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"15044:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5788,"indexExpression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:29","subExpression":{"id":5786,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"15051:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:29","trueExpression":{"baseExpression":{"id":5781,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"15024:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5784,"indexExpression":{"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:29","subExpression":{"id":5782,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"15031:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:29"},{"assignments":[5792],"declarations":[{"constant":false,"id":5792,"mutability":"mutable","name":"b","nameLocation":"15083:1:29","nodeType":"VariableDeclaration","scope":5824,"src":"15075:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5814,"initialValue":{"condition":{"baseExpression":{"id":5793,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"15087:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5795,"indexExpression":{"id":5794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"15098:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5809,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"15199:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5812,"indexExpression":{"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:29","subExpression":{"id":5810,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"15205:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:29","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"15120:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5797,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"15130:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5803,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"15162:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5806,"indexExpression":{"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:29","subExpression":{"id":5804,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"15169:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:29","trueExpression":{"baseExpression":{"id":5799,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"15142:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5802,"indexExpression":{"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:29","subExpression":{"id":5800,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"15149:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:29"},{"expression":{"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5815,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"15230:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5817,"indexExpression":{"id":5816,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"15237:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"15249:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"15252:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5818,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"15242:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5823,"nodeType":"ExpressionStatement","src":"15230:24:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"14952:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5771,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"14956:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5825,"initializationExpression":{"assignments":[5767],"declarations":[{"constant":false,"id":5767,"mutability":"mutable","name":"i","nameLocation":"14945:1:29","nodeType":"VariableDeclaration","scope":5825,"src":"14937:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5769,"initialValue":{"hexValue":"30","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:29","subExpression":{"id":5773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"14971:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5775,"nodeType":"ExpressionStatement","src":"14971:3:29"},"nodeType":"ForStatement","src":"14932:333:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5826,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"15279:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"15520:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5858,"nodeType":"Block","src":"15582:40:29","statements":[{"expression":{"baseExpression":{"id":5854,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"15603:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5856,"indexExpression":{"hexValue":"30","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5719,"id":5857,"nodeType":"Return","src":"15596:15:29"}]},"id":5859,"nodeType":"IfStatement","src":"15516:106:29","trueBody":{"id":5853,"nodeType":"Block","src":"15535:41:29","statements":[{"expression":{"baseExpression":{"id":5849,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"15556:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5851,"indexExpression":{"hexValue":"30","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5719,"id":5852,"nodeType":"Return","src":"15549:16:29"}]}},"id":5860,"nodeType":"IfStatement","src":"15275:347:29","trueBody":{"id":5845,"nodeType":"Block","src":"15298:212:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5829,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"15316:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5830,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"15328:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:29","memberName":"length","nodeType":"MemberAccess","src":"15328:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5837,"nodeType":"IfStatement","src":"15312:100:29","trueBody":{"id":5836,"nodeType":"Block","src":"15342:70:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5833,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"15367:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5835,"nodeType":"RevertStatement","src":"15360:37:29"}]}},{"id":5844,"nodeType":"UncheckedBlock","src":"15425:75:29","statements":[{"expression":{"baseExpression":{"id":5838,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"15460:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5842,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5839,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"15467:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5719,"id":5843,"nodeType":"Return","src":"15453:32:29"}]}]}}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"12202:1097:29","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":5862,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:29","nodeType":"FunctionDefinition","parameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"proof","nameLocation":"13357:5:29","nodeType":"VariableDeclaration","scope":5862,"src":"13340:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5698,"nodeType":"ArrayTypeName","src":"13340:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:29","nodeType":"VariableDeclaration","scope":5862,"src":"13372:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5700,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5701,"nodeType":"ArrayTypeName","src":"13372:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:29","nodeType":"VariableDeclaration","scope":5862,"src":"13406:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5704,"nodeType":"ArrayTypeName","src":"13406:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5715,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:29","nodeType":"VariableDeclaration","scope":5862,"src":"13439:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5714,"nodeType":"FunctionTypeName","parameterTypes":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5714,"src":"13448:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5714,"src":"13457:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:29"},"returnParameterTypes":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5714,"src":"13480:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:29"},"src":"13439:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:29"},"returnParameters":{"id":5719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5718,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:29","nodeType":"VariableDeclaration","scope":5862,"src":"13525:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:29"},"scope":6251,"src":"13304:2324:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"16436:84:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5880,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"16479:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":5881,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16486:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":5882,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"16498:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":5879,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[6046,6250],"referencedDeclaration":6046,"src":"16453:25:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5884,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"16509:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5878,"id":5886,"nodeType":"Return","src":"16446:67:29"}]},"documentation":{"id":5863,"nodeType":"StructuredDocumentation","src":"15634:603:29","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:29","nodeType":"FunctionDefinition","parameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"proof","nameLocation":"16304:5:29","nodeType":"VariableDeclaration","scope":5888,"src":"16285:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5865,"nodeType":"ArrayTypeName","src":"16285:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5869,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:29","nodeType":"VariableDeclaration","scope":5888,"src":"16319:26:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5867,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5868,"nodeType":"ArrayTypeName","src":"16319:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5871,"mutability":"mutable","name":"root","nameLocation":"16363:4:29","nodeType":"VariableDeclaration","scope":5888,"src":"16355:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5874,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:29","nodeType":"VariableDeclaration","scope":5888,"src":"16377:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5873,"nodeType":"ArrayTypeName","src":"16377:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:29"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"16430:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5876,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:29"},"scope":6251,"src":"16242:278:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6045,"nodeType":"Block","src":"17820:2104:29","statements":[{"assignments":[5904],"declarations":[{"constant":false,"id":5904,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:29","nodeType":"VariableDeclaration","scope":6045,"src":"18204:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5907,"initialValue":{"expression":{"id":5905,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"18224:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:29","memberName":"length","nodeType":"MemberAccess","src":"18224:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:29"},{"assignments":[5909],"declarations":[{"constant":false,"id":5909,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:29","nodeType":"VariableDeclaration","scope":6045,"src":"18247:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5908,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5912,"initialValue":{"expression":{"id":5910,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"18271:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:29","memberName":"length","nodeType":"MemberAccess","src":"18271:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"18336:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":5914,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"18348:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:29","memberName":"length","nodeType":"MemberAccess","src":"18348:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"18364:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"18332:113:29","trueBody":{"id":5924,"nodeType":"Block","src":"18383:62:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5921,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"18404:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5923,"nodeType":"RevertStatement","src":"18397:37:29"}]}},{"assignments":[5930],"declarations":[{"constant":false,"id":5930,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:29","nodeType":"VariableDeclaration","scope":6045,"src":"18689:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5929,"nodeType":"ArrayTypeName","src":"18689:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5936,"initialValue":{"arguments":[{"id":5934,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"18729:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5932,"nodeType":"ArrayTypeName","src":"18719:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:29"},{"assignments":[5938],"declarations":[{"constant":false,"id":5938,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:29","nodeType":"VariableDeclaration","scope":6045,"src":"18753:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5940,"initialValue":{"hexValue":"30","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:29"},{"assignments":[5942],"declarations":[{"constant":false,"id":5942,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:29","nodeType":"VariableDeclaration","scope":6045,"src":"18782:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5944,"initialValue":{"hexValue":"30","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:29"},{"assignments":[5946],"declarations":[{"constant":false,"id":5946,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:29","nodeType":"VariableDeclaration","scope":6045,"src":"18811:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5945,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5948,"initialValue":{"hexValue":"30","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:29"},{"body":{"id":6008,"nodeType":"Block","src":"19251:310:29","statements":[{"assignments":[5960],"declarations":[{"constant":false,"id":5960,"mutability":"mutable","name":"a","nameLocation":"19273:1:29","nodeType":"VariableDeclaration","scope":6008,"src":"19265:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5973,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"19277:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5962,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"19287:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5968,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"19319:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5971,"indexExpression":{"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:29","subExpression":{"id":5969,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"19326:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:29","trueExpression":{"baseExpression":{"id":5964,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"19299:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5967,"indexExpression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:29","subExpression":{"id":5965,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"19306:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:29"},{"assignments":[5975],"declarations":[{"constant":false,"id":5975,"mutability":"mutable","name":"b","nameLocation":"19358:1:29","nodeType":"VariableDeclaration","scope":6008,"src":"19350:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5997,"initialValue":{"condition":{"baseExpression":{"id":5976,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"19362:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":5978,"indexExpression":{"id":5977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"19373:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5992,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"19474:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5995,"indexExpression":{"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:29","subExpression":{"id":5993,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"19480:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:29","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"19395:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5980,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"19405:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5986,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"19437:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5989,"indexExpression":{"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:29","subExpression":{"id":5987,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"19444:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:29","trueExpression":{"baseExpression":{"id":5982,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"19417:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5985,"indexExpression":{"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:29","subExpression":{"id":5983,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"19424:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:29"},{"expression":{"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5998,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"19505:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6000,"indexExpression":{"id":5999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"19512:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"19545:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6004,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"19548:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6001,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"19517:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$5178_$","typeString":"type(library Hashes)"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:29","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":5165,"src":"19517:27:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6007,"nodeType":"ExpressionStatement","src":"19505:45:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"19227:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5954,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"19231:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6009,"initializationExpression":{"assignments":[5950],"declarations":[{"constant":false,"id":5950,"mutability":"mutable","name":"i","nameLocation":"19220:1:29","nodeType":"VariableDeclaration","scope":6009,"src":"19212:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5952,"initialValue":{"hexValue":"30","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:29","subExpression":{"id":5956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"19246:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5958,"nodeType":"ExpressionStatement","src":"19246:3:29"},"nodeType":"ForStatement","src":"19207:354:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6010,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"19575:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"19816:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6042,"nodeType":"Block","src":"19878:40:29","statements":[{"expression":{"baseExpression":{"id":6038,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"19899:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6040,"indexExpression":{"hexValue":"30","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5902,"id":6041,"nodeType":"Return","src":"19892:15:29"}]},"id":6043,"nodeType":"IfStatement","src":"19812:106:29","trueBody":{"id":6037,"nodeType":"Block","src":"19831:41:29","statements":[{"expression":{"baseExpression":{"id":6033,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"19852:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6035,"indexExpression":{"hexValue":"30","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5902,"id":6036,"nodeType":"Return","src":"19845:16:29"}]}},"id":6044,"nodeType":"IfStatement","src":"19571:347:29","trueBody":{"id":6029,"nodeType":"Block","src":"19594:212:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6013,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"19612:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6014,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"19624:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:29","memberName":"length","nodeType":"MemberAccess","src":"19624:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"19608:100:29","trueBody":{"id":6020,"nodeType":"Block","src":"19638:70:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6017,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"19663:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6019,"nodeType":"RevertStatement","src":"19656:37:29"}]}},{"id":6028,"nodeType":"UncheckedBlock","src":"19721:75:29","statements":[{"expression":{"baseExpression":{"id":6022,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"19756:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6026,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"19763:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5902,"id":6027,"nodeType":"Return","src":"19749:32:29"}]}]}}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"16526:1102:29","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":6046,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:29","nodeType":"FunctionDefinition","parameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"proof","nameLocation":"17696:5:29","nodeType":"VariableDeclaration","scope":6046,"src":"17677:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5891,"nodeType":"ArrayTypeName","src":"17677:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5895,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:29","nodeType":"VariableDeclaration","scope":6046,"src":"17711:26:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5893,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5894,"nodeType":"ArrayTypeName","src":"17711:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5898,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:29","nodeType":"VariableDeclaration","scope":6046,"src":"17747:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5897,"nodeType":"ArrayTypeName","src":"17747:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:29"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:29","nodeType":"VariableDeclaration","scope":6046,"src":"17800:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:29"},"scope":6251,"src":"17633:2291:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6082,"nodeType":"Block","src":"20795:92:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6074,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"20838:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":6075,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"20845:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":6076,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"20857:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":6077,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"20865:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":6073,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[6046,6250],"referencedDeclaration":6250,"src":"20812:25:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6079,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"20876:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6072,"id":6081,"nodeType":"Return","src":"20805:75:29"}]},"documentation":{"id":6047,"nodeType":"StructuredDocumentation","src":"19930:600:29","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":6083,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:29","nodeType":"FunctionDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"proof","nameLocation":"20597:5:29","nodeType":"VariableDeclaration","scope":6083,"src":"20578:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6049,"nodeType":"ArrayTypeName","src":"20578:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6053,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:29","nodeType":"VariableDeclaration","scope":6083,"src":"20612:26:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":6051,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"ArrayTypeName","src":"20612:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"root","nameLocation":"20656:4:29","nodeType":"VariableDeclaration","scope":6083,"src":"20648:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6058,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:29","nodeType":"VariableDeclaration","scope":6083,"src":"20670:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6057,"nodeType":"ArrayTypeName","src":"20670:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6068,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:29","nodeType":"VariableDeclaration","scope":6083,"src":"20703:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":6067,"nodeType":"FunctionTypeName","parameterTypes":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"20712:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"20721:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:29"},"returnParameterTypes":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"20744:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:29"},"src":"20703:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:29"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6083,"src":"20789:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6070,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:29"},"scope":6251,"src":"20535:352:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6249,"nodeType":"Block","src":"22250:2083:29","statements":[{"assignments":[6109],"declarations":[{"constant":false,"id":6109,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:29","nodeType":"VariableDeclaration","scope":6249,"src":"22634:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6108,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6112,"initialValue":{"expression":{"id":6110,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"22654:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:29","memberName":"length","nodeType":"MemberAccess","src":"22654:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:29"},{"assignments":[6114],"declarations":[{"constant":false,"id":6114,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:29","nodeType":"VariableDeclaration","scope":6249,"src":"22677:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6113,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6117,"initialValue":{"expression":{"id":6115,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"22701:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:29","memberName":"length","nodeType":"MemberAccess","src":"22701:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"22766:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":6119,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"22778:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:29","memberName":"length","nodeType":"MemberAccess","src":"22778:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6122,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"22794:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"22762:113:29","trueBody":{"id":6129,"nodeType":"Block","src":"22813:62:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6126,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"22834:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6128,"nodeType":"RevertStatement","src":"22827:37:29"}]}},{"assignments":[6135],"declarations":[{"constant":false,"id":6135,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:29","nodeType":"VariableDeclaration","scope":6249,"src":"23119:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6134,"nodeType":"ArrayTypeName","src":"23119:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6141,"initialValue":{"arguments":[{"id":6139,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"23159:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":6136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6137,"nodeType":"ArrayTypeName","src":"23149:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:29"},{"assignments":[6143],"declarations":[{"constant":false,"id":6143,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:29","nodeType":"VariableDeclaration","scope":6249,"src":"23183:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6145,"initialValue":{"hexValue":"30","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:29"},{"assignments":[6147],"declarations":[{"constant":false,"id":6147,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:29","nodeType":"VariableDeclaration","scope":6249,"src":"23212:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6149,"initialValue":{"hexValue":"30","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:29"},{"assignments":[6151],"declarations":[{"constant":false,"id":6151,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:29","nodeType":"VariableDeclaration","scope":6249,"src":"23241:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6153,"initialValue":{"hexValue":"30","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:29"},{"body":{"id":6212,"nodeType":"Block","src":"23681:289:29","statements":[{"assignments":[6165],"declarations":[{"constant":false,"id":6165,"mutability":"mutable","name":"a","nameLocation":"23703:1:29","nodeType":"VariableDeclaration","scope":6212,"src":"23695:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6178,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6166,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"23707:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6167,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"23717:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":6173,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"23749:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6176,"indexExpression":{"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:29","subExpression":{"id":6174,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"23756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:29","trueExpression":{"baseExpression":{"id":6169,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"23729:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6172,"indexExpression":{"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:29","subExpression":{"id":6170,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"23736:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:29"},{"assignments":[6180],"declarations":[{"constant":false,"id":6180,"mutability":"mutable","name":"b","nameLocation":"23788:1:29","nodeType":"VariableDeclaration","scope":6212,"src":"23780:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6202,"initialValue":{"condition":{"baseExpression":{"id":6181,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"23792:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":6183,"indexExpression":{"id":6182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"23803:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":6197,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"23904:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6200,"indexExpression":{"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:29","subExpression":{"id":6198,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"23910:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:29","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6184,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"23825:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6185,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"23835:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":6191,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"23867:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6194,"indexExpression":{"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:29","subExpression":{"id":6192,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"23874:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:29","trueExpression":{"baseExpression":{"id":6187,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"23847:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6190,"indexExpression":{"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:29","subExpression":{"id":6188,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"23854:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:29"},{"expression":{"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6203,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"23935:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6205,"indexExpression":{"id":6204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"23942:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"23954:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6208,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"23957:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6206,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"23947:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6211,"nodeType":"ExpressionStatement","src":"23935:24:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"23657:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6159,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"23661:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6213,"initializationExpression":{"assignments":[6155],"declarations":[{"constant":false,"id":6155,"mutability":"mutable","name":"i","nameLocation":"23650:1:29","nodeType":"VariableDeclaration","scope":6213,"src":"23642:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6154,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6157,"initialValue":{"hexValue":"30","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:29","subExpression":{"id":6161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"23676:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6163,"nodeType":"ExpressionStatement","src":"23676:3:29"},"nodeType":"ForStatement","src":"23637:333:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"23984:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"24225:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6246,"nodeType":"Block","src":"24287:40:29","statements":[{"expression":{"baseExpression":{"id":6242,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"24308:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6244,"indexExpression":{"hexValue":"30","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6107,"id":6245,"nodeType":"Return","src":"24301:15:29"}]},"id":6247,"nodeType":"IfStatement","src":"24221:106:29","trueBody":{"id":6241,"nodeType":"Block","src":"24240:41:29","statements":[{"expression":{"baseExpression":{"id":6237,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"24261:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6239,"indexExpression":{"hexValue":"30","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6107,"id":6240,"nodeType":"Return","src":"24254:16:29"}]}},"id":6248,"nodeType":"IfStatement","src":"23980:347:29","trueBody":{"id":6233,"nodeType":"Block","src":"24003:212:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6217,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"24021:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6218,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"24033:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:29","memberName":"length","nodeType":"MemberAccess","src":"24033:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6225,"nodeType":"IfStatement","src":"24017:100:29","trueBody":{"id":6224,"nodeType":"Block","src":"24047:70:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6221,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"24072:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6223,"nodeType":"RevertStatement","src":"24065:37:29"}]}},{"id":6232,"nodeType":"UncheckedBlock","src":"24130:75:29","statements":[{"expression":{"baseExpression":{"id":6226,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"24165:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6230,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6227,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"24172:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6107,"id":6231,"nodeType":"Return","src":"24158:32:29"}]}]}}]},"documentation":{"id":6084,"nodeType":"StructuredDocumentation","src":"20893:1099:29","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":6250,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:29","nodeType":"FunctionDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"proof","nameLocation":"22060:5:29","nodeType":"VariableDeclaration","scope":6250,"src":"22041:24:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6086,"nodeType":"ArrayTypeName","src":"22041:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6090,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:29","nodeType":"VariableDeclaration","scope":6250,"src":"22075:26:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":6088,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6089,"nodeType":"ArrayTypeName","src":"22075:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":6093,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:29","nodeType":"VariableDeclaration","scope":6250,"src":"22111:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6092,"nodeType":"ArrayTypeName","src":"22111:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6103,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:29","nodeType":"VariableDeclaration","scope":6250,"src":"22144:56:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":6102,"nodeType":"FunctionTypeName","parameterTypes":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6102,"src":"22153:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6102,"src":"22162:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:29"},"returnParameterTypes":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6102,"src":"22185:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:29"},"src":"22144:56:29","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:29"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:29","nodeType":"VariableDeclaration","scope":6250,"src":"22230:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:29"},"scope":6251,"src":"21997:2336:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6252,"src":"1353:22982:29","usedErrors":[5186],"usedEvents":[]}],"src":"206:24130:29"},"id":29},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6263]},"id":6264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6253,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:30"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6254,"nodeType":"StructuredDocumentation","src":"142:280:30","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6263,"linearizedBaseContracts":[6263],"name":"IERC165","nameLocation":"433:7:30","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6255,"nodeType":"StructuredDocumentation","src":"447:340:30","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6262,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:30","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:30","nodeType":"VariableDeclaration","scope":6262,"src":"819:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6256,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:30"},"returnParameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6262,"src":"862:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6259,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:30"},"scope":6263,"src":"792:76:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6264,"src":"423:447:30","usedErrors":[],"usedEvents":[]}],"src":"115:756:30"},"id":30},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7884],"Panic":[3543],"SafeCast":[9649]},"id":7885,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6265,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":6267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7885,"sourceUnit":3544,"src":"129:35:31","symbolAliases":[{"foreign":{"id":6266,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"137:5:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7885,"sourceUnit":9650,"src":"165:40:31","symbolAliases":[{"foreign":{"id":6268,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"173:8:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6270,"nodeType":"StructuredDocumentation","src":"207:73:31","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7884,"linearizedBaseContracts":[7884],"name":"Math","nameLocation":"289:4:31","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6275,"members":[{"id":6271,"name":"Floor","nameLocation":"324:5:31","nodeType":"EnumValue","src":"324:5:31"},{"id":6272,"name":"Ceil","nameLocation":"367:4:31","nodeType":"EnumValue","src":"367:4:31"},{"id":6273,"name":"Trunc","nameLocation":"409:5:31","nodeType":"EnumValue","src":"409:5:31"},{"id":6274,"name":"Expand","nameLocation":"439:6:31","nodeType":"EnumValue","src":"439:6:31"}],"name":"Rounding","nameLocation":"305:8:31","nodeType":"EnumDefinition","src":"300:169:31"},{"body":{"id":6288,"nodeType":"Block","src":"731:112:31","statements":[{"AST":{"nativeSrc":"766:71:31","nodeType":"YulBlock","src":"766:71:31","statements":[{"nativeSrc":"780:16:31","nodeType":"YulAssignment","src":"780:16:31","value":{"arguments":[{"name":"a","nativeSrc":"791:1:31","nodeType":"YulIdentifier","src":"791:1:31"},{"name":"b","nativeSrc":"794:1:31","nodeType":"YulIdentifier","src":"794:1:31"}],"functionName":{"name":"add","nativeSrc":"787:3:31","nodeType":"YulIdentifier","src":"787:3:31"},"nativeSrc":"787:9:31","nodeType":"YulFunctionCall","src":"787:9:31"},"variableNames":[{"name":"low","nativeSrc":"780:3:31","nodeType":"YulIdentifier","src":"780:3:31"}]},{"nativeSrc":"809:18:31","nodeType":"YulAssignment","src":"809:18:31","value":{"arguments":[{"name":"low","nativeSrc":"820:3:31","nodeType":"YulIdentifier","src":"820:3:31"},{"name":"a","nativeSrc":"825:1:31","nodeType":"YulIdentifier","src":"825:1:31"}],"functionName":{"name":"lt","nativeSrc":"817:2:31","nodeType":"YulIdentifier","src":"817:2:31"},"nativeSrc":"817:10:31","nodeType":"YulFunctionCall","src":"817:10:31"},"variableNames":[{"name":"high","nativeSrc":"809:4:31","nodeType":"YulIdentifier","src":"809:4:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6278,"isOffset":false,"isSlot":false,"src":"791:1:31","valueSize":1},{"declaration":6278,"isOffset":false,"isSlot":false,"src":"825:1:31","valueSize":1},{"declaration":6280,"isOffset":false,"isSlot":false,"src":"794:1:31","valueSize":1},{"declaration":6283,"isOffset":false,"isSlot":false,"src":"809:4:31","valueSize":1},{"declaration":6285,"isOffset":false,"isSlot":false,"src":"780:3:31","valueSize":1},{"declaration":6285,"isOffset":false,"isSlot":false,"src":"820:3:31","valueSize":1}],"flags":["memory-safe"],"id":6287,"nodeType":"InlineAssembly","src":"741:96:31"}]},"documentation":{"id":6276,"nodeType":"StructuredDocumentation","src":"475:163:31","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":6289,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:31","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"a","nameLocation":"667:1:31","nodeType":"VariableDeclaration","scope":6289,"src":"659:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6280,"mutability":"mutable","name":"b","nameLocation":"678:1:31","nodeType":"VariableDeclaration","scope":6289,"src":"670:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:31"},"returnParameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"high","nameLocation":"712:4:31","nodeType":"VariableDeclaration","scope":6289,"src":"704:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6285,"mutability":"mutable","name":"low","nameLocation":"726:3:31","nodeType":"VariableDeclaration","scope":6289,"src":"718:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:31"},"scope":7884,"src":"643:200:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6302,"nodeType":"Block","src":"1115:462:31","statements":[{"AST":{"nativeSrc":"1437:134:31","nodeType":"YulBlock","src":"1437:134:31","statements":[{"nativeSrc":"1451:30:31","nodeType":"YulVariableDeclaration","src":"1451:30:31","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:31","nodeType":"YulIdentifier","src":"1468:1:31"},{"name":"b","nativeSrc":"1471:1:31","nodeType":"YulIdentifier","src":"1471:1:31"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:31","nodeType":"YulLiteral","src":"1478:1:31","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:31","nodeType":"YulIdentifier","src":"1474:3:31"},"nativeSrc":"1474:6:31","nodeType":"YulFunctionCall","src":"1474:6:31"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:31","nodeType":"YulIdentifier","src":"1461:6:31"},"nativeSrc":"1461:20:31","nodeType":"YulFunctionCall","src":"1461:20:31"},"variables":[{"name":"mm","nativeSrc":"1455:2:31","nodeType":"YulTypedName","src":"1455:2:31","type":""}]},{"nativeSrc":"1494:16:31","nodeType":"YulAssignment","src":"1494:16:31","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:31","nodeType":"YulIdentifier","src":"1505:1:31"},{"name":"b","nativeSrc":"1508:1:31","nodeType":"YulIdentifier","src":"1508:1:31"}],"functionName":{"name":"mul","nativeSrc":"1501:3:31","nodeType":"YulIdentifier","src":"1501:3:31"},"nativeSrc":"1501:9:31","nodeType":"YulFunctionCall","src":"1501:9:31"},"variableNames":[{"name":"low","nativeSrc":"1494:3:31","nodeType":"YulIdentifier","src":"1494:3:31"}]},{"nativeSrc":"1523:38:31","nodeType":"YulAssignment","src":"1523:38:31","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:31","nodeType":"YulIdentifier","src":"1539:2:31"},{"name":"low","nativeSrc":"1543:3:31","nodeType":"YulIdentifier","src":"1543:3:31"}],"functionName":{"name":"sub","nativeSrc":"1535:3:31","nodeType":"YulIdentifier","src":"1535:3:31"},"nativeSrc":"1535:12:31","nodeType":"YulFunctionCall","src":"1535:12:31"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:31","nodeType":"YulIdentifier","src":"1552:2:31"},{"name":"low","nativeSrc":"1556:3:31","nodeType":"YulIdentifier","src":"1556:3:31"}],"functionName":{"name":"lt","nativeSrc":"1549:2:31","nodeType":"YulIdentifier","src":"1549:2:31"},"nativeSrc":"1549:11:31","nodeType":"YulFunctionCall","src":"1549:11:31"}],"functionName":{"name":"sub","nativeSrc":"1531:3:31","nodeType":"YulIdentifier","src":"1531:3:31"},"nativeSrc":"1531:30:31","nodeType":"YulFunctionCall","src":"1531:30:31"},"variableNames":[{"name":"high","nativeSrc":"1523:4:31","nodeType":"YulIdentifier","src":"1523:4:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6292,"isOffset":false,"isSlot":false,"src":"1468:1:31","valueSize":1},{"declaration":6292,"isOffset":false,"isSlot":false,"src":"1505:1:31","valueSize":1},{"declaration":6294,"isOffset":false,"isSlot":false,"src":"1471:1:31","valueSize":1},{"declaration":6294,"isOffset":false,"isSlot":false,"src":"1508:1:31","valueSize":1},{"declaration":6297,"isOffset":false,"isSlot":false,"src":"1523:4:31","valueSize":1},{"declaration":6299,"isOffset":false,"isSlot":false,"src":"1494:3:31","valueSize":1},{"declaration":6299,"isOffset":false,"isSlot":false,"src":"1543:3:31","valueSize":1},{"declaration":6299,"isOffset":false,"isSlot":false,"src":"1556:3:31","valueSize":1}],"flags":["memory-safe"],"id":6301,"nodeType":"InlineAssembly","src":"1412:159:31"}]},"documentation":{"id":6290,"nodeType":"StructuredDocumentation","src":"849:173:31","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":6303,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:31","nodeType":"FunctionDefinition","parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"a","nameLocation":"1051:1:31","nodeType":"VariableDeclaration","scope":6303,"src":"1043:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6294,"mutability":"mutable","name":"b","nameLocation":"1062:1:31","nodeType":"VariableDeclaration","scope":6303,"src":"1054:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:31"},"returnParameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"high","nameLocation":"1096:4:31","nodeType":"VariableDeclaration","scope":6303,"src":"1088:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6299,"mutability":"mutable","name":"low","nameLocation":"1110:3:31","nodeType":"VariableDeclaration","scope":6303,"src":"1102:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:31"},"scope":7884,"src":"1027:550:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6337,"nodeType":"Block","src":"1784:149:31","statements":[{"id":6336,"nodeType":"UncheckedBlock","src":"1794:133:31","statements":[{"assignments":[6316],"declarations":[{"constant":false,"id":6316,"mutability":"mutable","name":"c","nameLocation":"1826:1:31","nodeType":"VariableDeclaration","scope":6336,"src":"1818:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6320,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"1830:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"1834:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:31"},{"expression":{"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6321,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"1849:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6322,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"1859:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"1864:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6326,"nodeType":"ExpressionStatement","src":"1849:16:31"},{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"1879:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"1888:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6331,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"1908:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6329,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"1892:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"1892:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6335,"nodeType":"ExpressionStatement","src":"1879:37:31"}]}]},"documentation":{"id":6304,"nodeType":"StructuredDocumentation","src":"1583:105:31","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":6338,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:31","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"a","nameLocation":"1717:1:31","nodeType":"VariableDeclaration","scope":6338,"src":"1709:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6308,"mutability":"mutable","name":"b","nameLocation":"1728:1:31","nodeType":"VariableDeclaration","scope":6338,"src":"1720:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:31"},"returnParameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"success","nameLocation":"1759:7:31","nodeType":"VariableDeclaration","scope":6338,"src":"1754:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6310,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6313,"mutability":"mutable","name":"result","nameLocation":"1776:6:31","nodeType":"VariableDeclaration","scope":6338,"src":"1768:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:31"},"scope":7884,"src":"1693:240:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6372,"nodeType":"Block","src":"2143:149:31","statements":[{"id":6371,"nodeType":"UncheckedBlock","src":"2153:133:31","statements":[{"assignments":[6351],"declarations":[{"constant":false,"id":6351,"mutability":"mutable","name":"c","nameLocation":"2185:1:31","nodeType":"VariableDeclaration","scope":6371,"src":"2177:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"2189:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"2193:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:31"},{"expression":{"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"2208:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"2218:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"2223:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6361,"nodeType":"ExpressionStatement","src":"2208:16:31"},{"expression":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"2238:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6363,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"2247:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"2267:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"2251:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"2251:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6370,"nodeType":"ExpressionStatement","src":"2238:37:31"}]}]},"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"1939:108:31","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6373,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:31","nodeType":"FunctionDefinition","parameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"a","nameLocation":"2076:1:31","nodeType":"VariableDeclaration","scope":6373,"src":"2068:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6343,"mutability":"mutable","name":"b","nameLocation":"2087:1:31","nodeType":"VariableDeclaration","scope":6373,"src":"2079:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:31"},"returnParameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6346,"mutability":"mutable","name":"success","nameLocation":"2118:7:31","nodeType":"VariableDeclaration","scope":6373,"src":"2113:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6345,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6348,"mutability":"mutable","name":"result","nameLocation":"2135:6:31","nodeType":"VariableDeclaration","scope":6373,"src":"2127:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:31"},"scope":7884,"src":"2052:240:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6402,"nodeType":"Block","src":"2505:391:31","statements":[{"id":6401,"nodeType":"UncheckedBlock","src":"2515:375:31","statements":[{"assignments":[6386],"declarations":[{"constant":false,"id":6386,"mutability":"mutable","name":"c","nameLocation":"2547:1:31","nodeType":"VariableDeclaration","scope":6401,"src":"2539:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6390,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"2551:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"2555:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:31"},{"AST":{"nativeSrc":"2595:188:31","nodeType":"YulBlock","src":"2595:188:31","statements":[{"nativeSrc":"2727:42:31","nodeType":"YulAssignment","src":"2727:42:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:31","nodeType":"YulIdentifier","src":"2748:1:31"},{"name":"a","nativeSrc":"2751:1:31","nodeType":"YulIdentifier","src":"2751:1:31"}],"functionName":{"name":"div","nativeSrc":"2744:3:31","nodeType":"YulIdentifier","src":"2744:3:31"},"nativeSrc":"2744:9:31","nodeType":"YulFunctionCall","src":"2744:9:31"},{"name":"b","nativeSrc":"2755:1:31","nodeType":"YulIdentifier","src":"2755:1:31"}],"functionName":{"name":"eq","nativeSrc":"2741:2:31","nodeType":"YulIdentifier","src":"2741:2:31"},"nativeSrc":"2741:16:31","nodeType":"YulFunctionCall","src":"2741:16:31"},{"arguments":[{"name":"a","nativeSrc":"2766:1:31","nodeType":"YulIdentifier","src":"2766:1:31"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:31","nodeType":"YulIdentifier","src":"2759:6:31"},"nativeSrc":"2759:9:31","nodeType":"YulFunctionCall","src":"2759:9:31"}],"functionName":{"name":"or","nativeSrc":"2738:2:31","nodeType":"YulIdentifier","src":"2738:2:31"},"nativeSrc":"2738:31:31","nodeType":"YulFunctionCall","src":"2738:31:31"},"variableNames":[{"name":"success","nativeSrc":"2727:7:31","nodeType":"YulIdentifier","src":"2727:7:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6376,"isOffset":false,"isSlot":false,"src":"2751:1:31","valueSize":1},{"declaration":6376,"isOffset":false,"isSlot":false,"src":"2766:1:31","valueSize":1},{"declaration":6378,"isOffset":false,"isSlot":false,"src":"2755:1:31","valueSize":1},{"declaration":6386,"isOffset":false,"isSlot":false,"src":"2748:1:31","valueSize":1},{"declaration":6381,"isOffset":false,"isSlot":false,"src":"2727:7:31","valueSize":1}],"flags":["memory-safe"],"id":6391,"nodeType":"InlineAssembly","src":"2570:213:31"},{"expression":{"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"2842:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6393,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"2851:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6396,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"2871:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6394,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"2855:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"2855:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6400,"nodeType":"ExpressionStatement","src":"2842:37:31"}]}]},"documentation":{"id":6374,"nodeType":"StructuredDocumentation","src":"2298:111:31","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6403,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:31","nodeType":"FunctionDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6376,"mutability":"mutable","name":"a","nameLocation":"2438:1:31","nodeType":"VariableDeclaration","scope":6403,"src":"2430:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6378,"mutability":"mutable","name":"b","nameLocation":"2449:1:31","nodeType":"VariableDeclaration","scope":6403,"src":"2441:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:31"},"returnParameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6381,"mutability":"mutable","name":"success","nameLocation":"2480:7:31","nodeType":"VariableDeclaration","scope":6403,"src":"2475:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6380,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6383,"mutability":"mutable","name":"result","nameLocation":"2497:6:31","nodeType":"VariableDeclaration","scope":6403,"src":"2489:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:31"},"scope":7884,"src":"2414:482:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6423,"nodeType":"Block","src":"3111:231:31","statements":[{"id":6422,"nodeType":"UncheckedBlock","src":"3121:215:31","statements":[{"expression":{"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"3145:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"3155:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6420,"nodeType":"ExpressionStatement","src":"3145:15:31"},{"AST":{"nativeSrc":"3199:127:31","nodeType":"YulBlock","src":"3199:127:31","statements":[{"nativeSrc":"3293:19:31","nodeType":"YulAssignment","src":"3293:19:31","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:31","nodeType":"YulIdentifier","src":"3307:1:31"},{"name":"b","nativeSrc":"3310:1:31","nodeType":"YulIdentifier","src":"3310:1:31"}],"functionName":{"name":"div","nativeSrc":"3303:3:31","nodeType":"YulIdentifier","src":"3303:3:31"},"nativeSrc":"3303:9:31","nodeType":"YulFunctionCall","src":"3303:9:31"},"variableNames":[{"name":"result","nativeSrc":"3293:6:31","nodeType":"YulIdentifier","src":"3293:6:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6406,"isOffset":false,"isSlot":false,"src":"3307:1:31","valueSize":1},{"declaration":6408,"isOffset":false,"isSlot":false,"src":"3310:1:31","valueSize":1},{"declaration":6413,"isOffset":false,"isSlot":false,"src":"3293:6:31","valueSize":1}],"flags":["memory-safe"],"id":6421,"nodeType":"InlineAssembly","src":"3174:152:31"}]}]},"documentation":{"id":6404,"nodeType":"StructuredDocumentation","src":"2902:113:31","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6424,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:31","nodeType":"FunctionDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"a","nameLocation":"3044:1:31","nodeType":"VariableDeclaration","scope":6424,"src":"3036:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6408,"mutability":"mutable","name":"b","nameLocation":"3055:1:31","nodeType":"VariableDeclaration","scope":6424,"src":"3047:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:31"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"success","nameLocation":"3086:7:31","nodeType":"VariableDeclaration","scope":6424,"src":"3081:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6410,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6413,"mutability":"mutable","name":"result","nameLocation":"3103:6:31","nodeType":"VariableDeclaration","scope":6424,"src":"3095:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:31"},"scope":7884,"src":"3020:322:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6444,"nodeType":"Block","src":"3567:231:31","statements":[{"id":6443,"nodeType":"UncheckedBlock","src":"3577:215:31","statements":[{"expression":{"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6436,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"3601:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"3611:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6441,"nodeType":"ExpressionStatement","src":"3601:15:31"},{"AST":{"nativeSrc":"3655:127:31","nodeType":"YulBlock","src":"3655:127:31","statements":[{"nativeSrc":"3749:19:31","nodeType":"YulAssignment","src":"3749:19:31","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:31","nodeType":"YulIdentifier","src":"3763:1:31"},{"name":"b","nativeSrc":"3766:1:31","nodeType":"YulIdentifier","src":"3766:1:31"}],"functionName":{"name":"mod","nativeSrc":"3759:3:31","nodeType":"YulIdentifier","src":"3759:3:31"},"nativeSrc":"3759:9:31","nodeType":"YulFunctionCall","src":"3759:9:31"},"variableNames":[{"name":"result","nativeSrc":"3749:6:31","nodeType":"YulIdentifier","src":"3749:6:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6427,"isOffset":false,"isSlot":false,"src":"3763:1:31","valueSize":1},{"declaration":6429,"isOffset":false,"isSlot":false,"src":"3766:1:31","valueSize":1},{"declaration":6434,"isOffset":false,"isSlot":false,"src":"3749:6:31","valueSize":1}],"flags":["memory-safe"],"id":6442,"nodeType":"InlineAssembly","src":"3630:152:31"}]}]},"documentation":{"id":6425,"nodeType":"StructuredDocumentation","src":"3348:123:31","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6445,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:31","nodeType":"FunctionDefinition","parameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"a","nameLocation":"3500:1:31","nodeType":"VariableDeclaration","scope":6445,"src":"3492:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6426,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6429,"mutability":"mutable","name":"b","nameLocation":"3511:1:31","nodeType":"VariableDeclaration","scope":6445,"src":"3503:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6428,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:31"},"returnParameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6432,"mutability":"mutable","name":"success","nameLocation":"3542:7:31","nodeType":"VariableDeclaration","scope":6445,"src":"3537:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6431,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6434,"mutability":"mutable","name":"result","nameLocation":"3559:6:31","nodeType":"VariableDeclaration","scope":6445,"src":"3551:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:31"},"scope":7884,"src":"3476:322:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6474,"nodeType":"Block","src":"3989:122:31","statements":[{"assignments":[6456,6458],"declarations":[{"constant":false,"id":6456,"mutability":"mutable","name":"success","nameLocation":"4005:7:31","nodeType":"VariableDeclaration","scope":6474,"src":"4000:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6455,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6458,"mutability":"mutable","name":"result","nameLocation":"4022:6:31","nodeType":"VariableDeclaration","scope":6474,"src":"4014:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6463,"initialValue":{"arguments":[{"id":6460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"4039:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"4042:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6459,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"4032:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:31"},{"expression":{"arguments":[{"id":6465,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"4069:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"4078:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6468,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6467,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:31","memberName":"max","nodeType":"MemberAccess","src":"4086:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6464,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"4061:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6454,"id":6473,"nodeType":"Return","src":"4054:50:31"}]},"documentation":{"id":6446,"nodeType":"StructuredDocumentation","src":"3804:103:31","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6475,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:31","nodeType":"FunctionDefinition","parameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"a","nameLocation":"3943:1:31","nodeType":"VariableDeclaration","scope":6475,"src":"3935:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6450,"mutability":"mutable","name":"b","nameLocation":"3954:1:31","nodeType":"VariableDeclaration","scope":6475,"src":"3946:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:31"},"returnParameters":{"id":6454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6475,"src":"3980:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:31"},"scope":7884,"src":"3912:199:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6494,"nodeType":"Block","src":"4294:73:31","statements":[{"assignments":[null,6486],"declarations":[null,{"constant":false,"id":6486,"mutability":"mutable","name":"result","nameLocation":"4315:6:31","nodeType":"VariableDeclaration","scope":6494,"src":"4307:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6491,"initialValue":{"arguments":[{"id":6488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"4332:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6489,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"4335:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6487,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"4325:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:31"},{"expression":{"id":6492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"4354:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6484,"id":6493,"nodeType":"Return","src":"4347:13:31"}]},"documentation":{"id":6476,"nodeType":"StructuredDocumentation","src":"4117:95:31","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6495,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:31","nodeType":"FunctionDefinition","parameters":{"id":6481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"a","nameLocation":"4248:1:31","nodeType":"VariableDeclaration","scope":6495,"src":"4240:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6480,"mutability":"mutable","name":"b","nameLocation":"4259:1:31","nodeType":"VariableDeclaration","scope":6495,"src":"4251:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:31"},"returnParameters":{"id":6484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6495,"src":"4285:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:31"},"scope":7884,"src":"4217:150:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6524,"nodeType":"Block","src":"4564:122:31","statements":[{"assignments":[6506,6508],"declarations":[{"constant":false,"id":6506,"mutability":"mutable","name":"success","nameLocation":"4580:7:31","nodeType":"VariableDeclaration","scope":6524,"src":"4575:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6505,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6508,"mutability":"mutable","name":"result","nameLocation":"4597:6:31","nodeType":"VariableDeclaration","scope":6524,"src":"4589:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6513,"initialValue":{"arguments":[{"id":6510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"4614:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6511,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"4617:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6509,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"4607:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:31"},{"expression":{"arguments":[{"id":6515,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"4644:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"4653:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:31","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:31","memberName":"max","nodeType":"MemberAccess","src":"4661:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6514,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"4636:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6504,"id":6523,"nodeType":"Return","src":"4629:50:31"}]},"documentation":{"id":6496,"nodeType":"StructuredDocumentation","src":"4373:109:31","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6525,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:31","nodeType":"FunctionDefinition","parameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"a","nameLocation":"4518:1:31","nodeType":"VariableDeclaration","scope":6525,"src":"4510:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6500,"mutability":"mutable","name":"b","nameLocation":"4529:1:31","nodeType":"VariableDeclaration","scope":6525,"src":"4521:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:31"},"returnParameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6525,"src":"4555:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:31"},"scope":7884,"src":"4487:199:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6551,"nodeType":"Block","src":"5158:207:31","statements":[{"id":6550,"nodeType":"UncheckedBlock","src":"5168:191:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"5306:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"5312:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"5316:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6544,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"5337:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6542,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"5321:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"5321:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6536,"id":6549,"nodeType":"Return","src":"5299:49:31"}]}]},"documentation":{"id":6526,"nodeType":"StructuredDocumentation","src":"4692:374:31","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6552,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:31","nodeType":"FunctionDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"condition","nameLocation":"5093:9:31","nodeType":"VariableDeclaration","scope":6552,"src":"5088:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6527,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6530,"mutability":"mutable","name":"a","nameLocation":"5112:1:31","nodeType":"VariableDeclaration","scope":6552,"src":"5104:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6532,"mutability":"mutable","name":"b","nameLocation":"5123:1:31","nodeType":"VariableDeclaration","scope":6552,"src":"5115:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:31"},"returnParameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6552,"src":"5149:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:31"},"scope":7884,"src":"5071:294:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6570,"nodeType":"Block","src":"5502:44:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"5527:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6564,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"5531:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"5534:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"5537:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6562,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"5519:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6561,"id":6569,"nodeType":"Return","src":"5512:27:31"}]},"documentation":{"id":6553,"nodeType":"StructuredDocumentation","src":"5371:59:31","text":" @dev Returns the largest of two numbers."},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:31","nodeType":"FunctionDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6555,"mutability":"mutable","name":"a","nameLocation":"5456:1:31","nodeType":"VariableDeclaration","scope":6571,"src":"5448:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6554,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6557,"mutability":"mutable","name":"b","nameLocation":"5467:1:31","nodeType":"VariableDeclaration","scope":6571,"src":"5459:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6556,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:31"},"returnParameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6571,"src":"5493:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6559,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:31"},"scope":7884,"src":"5435:111:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6589,"nodeType":"Block","src":"5684:44:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"5709:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"5713:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"5716:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"5719:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6581,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"5701:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6580,"id":6588,"nodeType":"Return","src":"5694:27:31"}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"5552:60:31","text":" @dev Returns the smallest of two numbers."},"id":6590,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:31","nodeType":"FunctionDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"a","nameLocation":"5638:1:31","nodeType":"VariableDeclaration","scope":6590,"src":"5630:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6576,"mutability":"mutable","name":"b","nameLocation":"5649:1:31","nodeType":"VariableDeclaration","scope":6590,"src":"5641:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:31"},"returnParameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6590,"src":"5675:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:31"},"scope":7884,"src":"5617:111:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6612,"nodeType":"Block","src":"5912:82:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"5967:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"5971:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"5977:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"5981:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6599,"id":6611,"nodeType":"Return","src":"5959:28:31"}]},"documentation":{"id":6591,"nodeType":"StructuredDocumentation","src":"5734:102:31","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6613,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:31","nodeType":"FunctionDefinition","parameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6593,"mutability":"mutable","name":"a","nameLocation":"5866:1:31","nodeType":"VariableDeclaration","scope":6613,"src":"5858:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6595,"mutability":"mutable","name":"b","nameLocation":"5877:1:31","nodeType":"VariableDeclaration","scope":6613,"src":"5869:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:31"},"returnParameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6613,"src":"5903:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6597,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:31"},"scope":7884,"src":"5841:153:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6653,"nodeType":"Block","src":"6286:633:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"6300:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6634,"nodeType":"IfStatement","src":"6296:150:31","trueBody":{"id":6633,"nodeType":"Block","src":"6308:138:31","statements":[{"expression":{"arguments":[{"expression":{"id":6629,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"6412:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:31","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3510,"src":"6412:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6626,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"6400:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:31","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"6400:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6632,"nodeType":"ExpressionStatement","src":"6400:35:31"}]}},{"id":6652,"nodeType":"UncheckedBlock","src":"6829:84:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"6876:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"6860:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"6860:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"6887:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6645,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"6896:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6622,"id":6651,"nodeType":"Return","src":"6853:49:31"}]}]},"documentation":{"id":6614,"nodeType":"StructuredDocumentation","src":"6000:210:31","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6654,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:31","nodeType":"FunctionDefinition","parameters":{"id":6619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"mutability":"mutable","name":"a","nameLocation":"6240:1:31","nodeType":"VariableDeclaration","scope":6654,"src":"6232:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6615,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6618,"mutability":"mutable","name":"b","nameLocation":"6251:1:31","nodeType":"VariableDeclaration","scope":6654,"src":"6243:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:31"},"returnParameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6654,"src":"6277:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:31"},"scope":7884,"src":"6215:704:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6789,"nodeType":"Block","src":"7340:3585:31","statements":[{"id":6788,"nodeType":"UncheckedBlock","src":"7350:3569:31","statements":[{"assignments":[6667,6669],"declarations":[{"constant":false,"id":6667,"mutability":"mutable","name":"high","nameLocation":"7383:4:31","nodeType":"VariableDeclaration","scope":6788,"src":"7375:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6669,"mutability":"mutable","name":"low","nameLocation":"7397:3:31","nodeType":"VariableDeclaration","scope":6788,"src":"7389:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6674,"initialValue":{"arguments":[{"id":6671,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"7411:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6672,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"7414:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"7404:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6675,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"7498:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6683,"nodeType":"IfStatement","src":"7494:365:31","trueBody":{"id":6682,"nodeType":"Block","src":"7509:350:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6678,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"7827:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6679,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"7833:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6665,"id":6681,"nodeType":"Return","src":"7820:24:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6684,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"7969:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6685,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"7984:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6702,"nodeType":"IfStatement","src":"7965:142:31","trueBody":{"id":6701,"nodeType":"Block","src":"7990:117:31","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"8028:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6694,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"8046:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:31","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3510,"src":"8046:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6696,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"8070:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:31","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3506,"src":"8070:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6690,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"8020:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6687,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"8008:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:31","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"8008:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6700,"nodeType":"ExpressionStatement","src":"8008:84:31"}]}},{"assignments":[6704],"declarations":[{"constant":false,"id":6704,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:31","nodeType":"VariableDeclaration","scope":6788,"src":"8359:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6705,"nodeType":"VariableDeclarationStatement","src":"8359:17:31"},{"AST":{"nativeSrc":"8415:283:31","nodeType":"YulBlock","src":"8415:283:31","statements":[{"nativeSrc":"8484:38:31","nodeType":"YulAssignment","src":"8484:38:31","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:31","nodeType":"YulIdentifier","src":"8504:1:31"},{"name":"y","nativeSrc":"8507:1:31","nodeType":"YulIdentifier","src":"8507:1:31"},{"name":"denominator","nativeSrc":"8510:11:31","nodeType":"YulIdentifier","src":"8510:11:31"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:31","nodeType":"YulIdentifier","src":"8497:6:31"},"nativeSrc":"8497:25:31","nodeType":"YulFunctionCall","src":"8497:25:31"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:31","nodeType":"YulIdentifier","src":"8484:9:31"}]},{"nativeSrc":"8604:37:31","nodeType":"YulAssignment","src":"8604:37:31","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:31","nodeType":"YulIdentifier","src":"8616:4:31"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:31","nodeType":"YulIdentifier","src":"8625:9:31"},{"name":"low","nativeSrc":"8636:3:31","nodeType":"YulIdentifier","src":"8636:3:31"}],"functionName":{"name":"gt","nativeSrc":"8622:2:31","nodeType":"YulIdentifier","src":"8622:2:31"},"nativeSrc":"8622:18:31","nodeType":"YulFunctionCall","src":"8622:18:31"}],"functionName":{"name":"sub","nativeSrc":"8612:3:31","nodeType":"YulIdentifier","src":"8612:3:31"},"nativeSrc":"8612:29:31","nodeType":"YulFunctionCall","src":"8612:29:31"},"variableNames":[{"name":"high","nativeSrc":"8604:4:31","nodeType":"YulIdentifier","src":"8604:4:31"}]},{"nativeSrc":"8658:26:31","nodeType":"YulAssignment","src":"8658:26:31","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:31","nodeType":"YulIdentifier","src":"8669:3:31"},{"name":"remainder","nativeSrc":"8674:9:31","nodeType":"YulIdentifier","src":"8674:9:31"}],"functionName":{"name":"sub","nativeSrc":"8665:3:31","nodeType":"YulIdentifier","src":"8665:3:31"},"nativeSrc":"8665:19:31","nodeType":"YulFunctionCall","src":"8665:19:31"},"variableNames":[{"name":"low","nativeSrc":"8658:3:31","nodeType":"YulIdentifier","src":"8658:3:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6661,"isOffset":false,"isSlot":false,"src":"8510:11:31","valueSize":1},{"declaration":6667,"isOffset":false,"isSlot":false,"src":"8604:4:31","valueSize":1},{"declaration":6667,"isOffset":false,"isSlot":false,"src":"8616:4:31","valueSize":1},{"declaration":6669,"isOffset":false,"isSlot":false,"src":"8636:3:31","valueSize":1},{"declaration":6669,"isOffset":false,"isSlot":false,"src":"8658:3:31","valueSize":1},{"declaration":6669,"isOffset":false,"isSlot":false,"src":"8669:3:31","valueSize":1},{"declaration":6704,"isOffset":false,"isSlot":false,"src":"8484:9:31","valueSize":1},{"declaration":6704,"isOffset":false,"isSlot":false,"src":"8625:9:31","valueSize":1},{"declaration":6704,"isOffset":false,"isSlot":false,"src":"8674:9:31","valueSize":1},{"declaration":6657,"isOffset":false,"isSlot":false,"src":"8504:1:31","valueSize":1},{"declaration":6659,"isOffset":false,"isSlot":false,"src":"8507:1:31","valueSize":1}],"flags":["memory-safe"],"id":6706,"nodeType":"InlineAssembly","src":"8390:308:31"},{"assignments":[6708],"declarations":[{"constant":false,"id":6708,"mutability":"mutable","name":"twos","nameLocation":"8910:4:31","nodeType":"VariableDeclaration","scope":6788,"src":"8902:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6715,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6709,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"8917:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6711,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"8936:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:31"},{"AST":{"nativeSrc":"8987:359:31","nodeType":"YulBlock","src":"8987:359:31","statements":[{"nativeSrc":"9052:37:31","nodeType":"YulAssignment","src":"9052:37:31","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:31","nodeType":"YulIdentifier","src":"9071:11:31"},{"name":"twos","nativeSrc":"9084:4:31","nodeType":"YulIdentifier","src":"9084:4:31"}],"functionName":{"name":"div","nativeSrc":"9067:3:31","nodeType":"YulIdentifier","src":"9067:3:31"},"nativeSrc":"9067:22:31","nodeType":"YulFunctionCall","src":"9067:22:31"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:31","nodeType":"YulIdentifier","src":"9052:11:31"}]},{"nativeSrc":"9153:21:31","nodeType":"YulAssignment","src":"9153:21:31","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:31","nodeType":"YulIdentifier","src":"9164:3:31"},{"name":"twos","nativeSrc":"9169:4:31","nodeType":"YulIdentifier","src":"9169:4:31"}],"functionName":{"name":"div","nativeSrc":"9160:3:31","nodeType":"YulIdentifier","src":"9160:3:31"},"nativeSrc":"9160:14:31","nodeType":"YulFunctionCall","src":"9160:14:31"},"variableNames":[{"name":"low","nativeSrc":"9153:3:31","nodeType":"YulIdentifier","src":"9153:3:31"}]},{"nativeSrc":"9293:39:31","nodeType":"YulAssignment","src":"9293:39:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:31","nodeType":"YulLiteral","src":"9313:1:31","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:31","nodeType":"YulIdentifier","src":"9316:4:31"}],"functionName":{"name":"sub","nativeSrc":"9309:3:31","nodeType":"YulIdentifier","src":"9309:3:31"},"nativeSrc":"9309:12:31","nodeType":"YulFunctionCall","src":"9309:12:31"},{"name":"twos","nativeSrc":"9323:4:31","nodeType":"YulIdentifier","src":"9323:4:31"}],"functionName":{"name":"div","nativeSrc":"9305:3:31","nodeType":"YulIdentifier","src":"9305:3:31"},"nativeSrc":"9305:23:31","nodeType":"YulFunctionCall","src":"9305:23:31"},{"kind":"number","nativeSrc":"9330:1:31","nodeType":"YulLiteral","src":"9330:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:31","nodeType":"YulIdentifier","src":"9301:3:31"},"nativeSrc":"9301:31:31","nodeType":"YulFunctionCall","src":"9301:31:31"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:31","nodeType":"YulIdentifier","src":"9293:4:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6661,"isOffset":false,"isSlot":false,"src":"9052:11:31","valueSize":1},{"declaration":6661,"isOffset":false,"isSlot":false,"src":"9071:11:31","valueSize":1},{"declaration":6669,"isOffset":false,"isSlot":false,"src":"9153:3:31","valueSize":1},{"declaration":6669,"isOffset":false,"isSlot":false,"src":"9164:3:31","valueSize":1},{"declaration":6708,"isOffset":false,"isSlot":false,"src":"9084:4:31","valueSize":1},{"declaration":6708,"isOffset":false,"isSlot":false,"src":"9169:4:31","valueSize":1},{"declaration":6708,"isOffset":false,"isSlot":false,"src":"9293:4:31","valueSize":1},{"declaration":6708,"isOffset":false,"isSlot":false,"src":"9316:4:31","valueSize":1},{"declaration":6708,"isOffset":false,"isSlot":false,"src":"9323:4:31","valueSize":1}],"flags":["memory-safe"],"id":6716,"nodeType":"InlineAssembly","src":"8962:384:31"},{"expression":{"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6717,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"9409:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6718,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"9416:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6719,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"9423:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6722,"nodeType":"ExpressionStatement","src":"9409:18:31"},{"assignments":[6724],"declarations":[{"constant":false,"id":6724,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:31","nodeType":"VariableDeclaration","scope":6788,"src":"9762:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6723,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6731,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6726,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"9785:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:31"},{"expression":{"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6732,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10018:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"10033:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6735,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10047:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6739,"nodeType":"ExpressionStatement","src":"10018:36:31"},{"expression":{"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6740,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10088:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"10103:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6743,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10117:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6747,"nodeType":"ExpressionStatement","src":"10088:36:31"},{"expression":{"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6748,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10160:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6750,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"10175:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6751,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10189:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6755,"nodeType":"ExpressionStatement","src":"10160:36:31"},{"expression":{"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10231:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6758,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"10246:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6759,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10260:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6763,"nodeType":"ExpressionStatement","src":"10231:36:31"},{"expression":{"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6764,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10304:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"10319:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6767,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10333:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6771,"nodeType":"ExpressionStatement","src":"10304:36:31"},{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6772,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10378:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6774,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"10393:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6775,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10407:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6779,"nodeType":"ExpressionStatement","src":"10378:36:31"},{"expression":{"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"10859:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6781,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"10868:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6782,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"10874:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6785,"nodeType":"ExpressionStatement","src":"10859:22:31"},{"expression":{"id":6786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"10902:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6665,"id":6787,"nodeType":"Return","src":"10895:13:31"}]}]},"documentation":{"id":6655,"nodeType":"StructuredDocumentation","src":"6925:312:31","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6790,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:31","nodeType":"FunctionDefinition","parameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"x","nameLocation":"7266:1:31","nodeType":"VariableDeclaration","scope":6790,"src":"7258:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6659,"mutability":"mutable","name":"y","nameLocation":"7277:1:31","nodeType":"VariableDeclaration","scope":6790,"src":"7269:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6661,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:31","nodeType":"VariableDeclaration","scope":6790,"src":"7280:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:31"},"returnParameters":{"id":6665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"result","nameLocation":"7332:6:31","nodeType":"VariableDeclaration","scope":6790,"src":"7324:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6663,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:31"},"scope":7884,"src":"7242:3683:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6826,"nodeType":"Block","src":"11164:128:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6806,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"11188:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6807,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"11191:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6808,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"11194:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6805,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6790,6827],"referencedDeclaration":6790,"src":"11181:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6813,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"11242:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}],"id":6812,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"11225:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6275_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6816,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"11262:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6817,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"11265:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6818,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"11268:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6815,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:31","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6810,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"11209:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"11209:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6804,"id":6825,"nodeType":"Return","src":"11174:111:31"}]},"documentation":{"id":6791,"nodeType":"StructuredDocumentation","src":"10931:118:31","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6827,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:31","nodeType":"FunctionDefinition","parameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"x","nameLocation":"11078:1:31","nodeType":"VariableDeclaration","scope":6827,"src":"11070:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6795,"mutability":"mutable","name":"y","nameLocation":"11089:1:31","nodeType":"VariableDeclaration","scope":6827,"src":"11081:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6794,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6797,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:31","nodeType":"VariableDeclaration","scope":6827,"src":"11092:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6800,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:31","nodeType":"VariableDeclaration","scope":6827,"src":"11113:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"},"typeName":{"id":6799,"nodeType":"UserDefinedTypeName","pathNode":{"id":6798,"name":"Rounding","nameLocations":["11113:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":6275,"src":"11113:8:31"},"referencedDeclaration":6275,"src":"11113:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:31"},"returnParameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6827,"src":"11155:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6802,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:31"},"scope":7884,"src":"11054:238:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6876,"nodeType":"Block","src":"11500:245:31","statements":[{"id":6875,"nodeType":"UncheckedBlock","src":"11510:229:31","statements":[{"assignments":[6840,6842],"declarations":[{"constant":false,"id":6840,"mutability":"mutable","name":"high","nameLocation":"11543:4:31","nodeType":"VariableDeclaration","scope":6875,"src":"11535:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6842,"mutability":"mutable","name":"low","nameLocation":"11557:3:31","nodeType":"VariableDeclaration","scope":6875,"src":"11549:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6841,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6847,"initialValue":{"arguments":[{"id":6844,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"11571:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6845,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"11574:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6843,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"11564:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6848,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"11594:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6850,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"11607:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6861,"nodeType":"IfStatement","src":"11590:86:31","trueBody":{"id":6860,"nodeType":"Block","src":"11610:66:31","statements":[{"expression":{"arguments":[{"expression":{"id":6856,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11640:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:31","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3506,"src":"11640:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6853,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11628:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:31","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"11628:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6859,"nodeType":"ExpressionStatement","src":"11628:33:31"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6862,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"11697:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:31","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6864,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"11712:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6869,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"11719:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6870,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"11726:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6838,"id":6874,"nodeType":"Return","src":"11689:39:31"}]}]},"documentation":{"id":6828,"nodeType":"StructuredDocumentation","src":"11298:111:31","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6877,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:31","nodeType":"FunctionDefinition","parameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6830,"mutability":"mutable","name":"x","nameLocation":"11438:1:31","nodeType":"VariableDeclaration","scope":6877,"src":"11430:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6829,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6832,"mutability":"mutable","name":"y","nameLocation":"11449:1:31","nodeType":"VariableDeclaration","scope":6877,"src":"11441:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6831,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6834,"mutability":"mutable","name":"n","nameLocation":"11458:1:31","nodeType":"VariableDeclaration","scope":6877,"src":"11452:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6833,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:31"},"returnParameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"result","nameLocation":"11492:6:31","nodeType":"VariableDeclaration","scope":6877,"src":"11484:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6836,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:31"},"scope":7884,"src":"11414:331:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6915,"nodeType":"Block","src":"11963:113:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6893,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"11987:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6894,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"11990:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6895,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"11993:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6892,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6877,6916],"referencedDeclaration":6877,"src":"11980:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6900,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"12031:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}],"id":6899,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"12014:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6275_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6903,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"12051:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6904,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"12054:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6906,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"12062:1:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6902,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:31","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6897,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"11998:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"11998:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6891,"id":6914,"nodeType":"Return","src":"11973:96:31"}]},"documentation":{"id":6878,"nodeType":"StructuredDocumentation","src":"11751:109:31","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6916,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:31","nodeType":"FunctionDefinition","parameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"x","nameLocation":"11889:1:31","nodeType":"VariableDeclaration","scope":6916,"src":"11881:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6879,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6882,"mutability":"mutable","name":"y","nameLocation":"11900:1:31","nodeType":"VariableDeclaration","scope":6916,"src":"11892:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6881,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6884,"mutability":"mutable","name":"n","nameLocation":"11909:1:31","nodeType":"VariableDeclaration","scope":6916,"src":"11903:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6883,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6887,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:31","nodeType":"VariableDeclaration","scope":6916,"src":"11912:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"},"typeName":{"id":6886,"nodeType":"UserDefinedTypeName","pathNode":{"id":6885,"name":"Rounding","nameLocations":["11912:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":6275,"src":"11912:8:31"},"referencedDeclaration":6275,"src":"11912:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:31"},"returnParameters":{"id":6891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6916,"src":"11954:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6889,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:31"},"scope":7884,"src":"11865:211:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7012,"nodeType":"Block","src":"12710:1849:31","statements":[{"id":7011,"nodeType":"UncheckedBlock","src":"12720:1833:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6926,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"12748:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6931,"nodeType":"IfStatement","src":"12744:20:31","trueBody":{"expression":{"hexValue":"30","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6925,"id":6930,"nodeType":"Return","src":"12756:8:31"}},{"assignments":[6933],"declarations":[{"constant":false,"id":6933,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:31","nodeType":"VariableDeclaration","scope":7011,"src":"13235:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6932,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6937,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"13255:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6935,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"13259:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:31"},{"assignments":[6939],"declarations":[{"constant":false,"id":6939,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:31","nodeType":"VariableDeclaration","scope":7011,"src":"13274:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6938,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6941,"initialValue":{"id":6940,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"13288:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:31"},{"assignments":[6943],"declarations":[{"constant":false,"id":6943,"mutability":"mutable","name":"x","nameLocation":"13432:1:31","nodeType":"VariableDeclaration","scope":7011,"src":"13425:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6942,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6945,"initialValue":{"hexValue":"30","id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:31"},{"assignments":[6947],"declarations":[{"constant":false,"id":6947,"mutability":"mutable","name":"y","nameLocation":"13458:1:31","nodeType":"VariableDeclaration","scope":7011,"src":"13451:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6946,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6949,"initialValue":{"hexValue":"31","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:31"},{"body":{"id":6986,"nodeType":"Block","src":"13501:882:31","statements":[{"assignments":[6954],"declarations":[{"constant":false,"id":6954,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:31","nodeType":"VariableDeclaration","scope":6986,"src":"13519:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6953,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6958,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6955,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"13538:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6956,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"13544:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:31"},{"expression":{"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6959,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"13573:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6960,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"13578:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6961,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6962,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"13678:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6963,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"13923:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6964,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"13929:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6965,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"13941:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:31","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6970,"nodeType":"ExpressionStatement","src":"13572:395:31"},{"expression":{"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6971,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"13987:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6972,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"13990:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6973,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6974,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"14072:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6975,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"14326:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6976,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"14330:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6979,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"14341:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6977,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:31","typeDescriptions":{}}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:31","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6985,"nodeType":"ExpressionStatement","src":"13986:382:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"13485:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6987,"nodeType":"WhileStatement","src":"13478:905:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6988,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"14401:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6993,"nodeType":"IfStatement","src":"14397:22:31","trueBody":{"expression":{"hexValue":"30","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6925,"id":6992,"nodeType":"Return","src":"14411:8:31"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6995,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"14470:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6998,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"14477:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:31","subExpression":{"id":7001,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"14490:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6999,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:31","typeDescriptions":{}}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7007,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"14502:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7005,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:31","typeDescriptions":{}}},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6994,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"14462:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6925,"id":7010,"nodeType":"Return","src":"14455:50:31"}]}]},"documentation":{"id":6917,"nodeType":"StructuredDocumentation","src":"12082:553:31","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":7013,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:31","nodeType":"FunctionDefinition","parameters":{"id":6922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6919,"mutability":"mutable","name":"a","nameLocation":"12664:1:31","nodeType":"VariableDeclaration","scope":7013,"src":"12656:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6918,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6921,"mutability":"mutable","name":"n","nameLocation":"12675:1:31","nodeType":"VariableDeclaration","scope":7013,"src":"12667:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:31"},"returnParameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7013,"src":"12701:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6923,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:31"},"scope":7884,"src":"12640:1919:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7033,"nodeType":"Block","src":"15159:82:31","statements":[{"id":7032,"nodeType":"UncheckedBlock","src":"15169:66:31","statements":[{"expression":{"arguments":[{"id":7025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"15212:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7026,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"15215:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7029,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"15222:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7023,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"15200:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7884_$","typeString":"type(library Math)"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:31","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":7070,"src":"15200:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7022,"id":7031,"nodeType":"Return","src":"15193:31:31"}]}]},"documentation":{"id":7014,"nodeType":"StructuredDocumentation","src":"14565:514:31","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":7034,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:31","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"a","nameLocation":"15113:1:31","nodeType":"VariableDeclaration","scope":7034,"src":"15105:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7015,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7018,"mutability":"mutable","name":"p","nameLocation":"15124:1:31","nodeType":"VariableDeclaration","scope":7034,"src":"15116:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:31"},"returnParameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7034,"src":"15150:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7020,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:31"},"scope":7884,"src":"15084:157:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7069,"nodeType":"Block","src":"16011:174:31","statements":[{"assignments":[7047,7049],"declarations":[{"constant":false,"id":7047,"mutability":"mutable","name":"success","nameLocation":"16027:7:31","nodeType":"VariableDeclaration","scope":7069,"src":"16022:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7046,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7049,"mutability":"mutable","name":"result","nameLocation":"16044:6:31","nodeType":"VariableDeclaration","scope":7069,"src":"16036:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7048,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7055,"initialValue":{"arguments":[{"id":7051,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"16064:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7052,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"16067:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7053,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"16070:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7050,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7094,7176],"referencedDeclaration":7094,"src":"16054:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:31"},{"condition":{"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:31","subExpression":{"id":7056,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"16087:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7066,"nodeType":"IfStatement","src":"16082:74:31","trueBody":{"id":7065,"nodeType":"Block","src":"16096:60:31","statements":[{"expression":{"arguments":[{"expression":{"id":7061,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"16122:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:31","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3510,"src":"16122:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7058,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"16110:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:31","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"16110:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7064,"nodeType":"ExpressionStatement","src":"16110:35:31"}]}},{"expression":{"id":7067,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"16172:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7045,"id":7068,"nodeType":"Return","src":"16165:13:31"}]},"documentation":{"id":7035,"nodeType":"StructuredDocumentation","src":"15247:678:31","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":7070,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:31","nodeType":"FunctionDefinition","parameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"b","nameLocation":"15954:1:31","nodeType":"VariableDeclaration","scope":7070,"src":"15946:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7039,"mutability":"mutable","name":"e","nameLocation":"15965:1:31","nodeType":"VariableDeclaration","scope":7070,"src":"15957:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7038,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7041,"mutability":"mutable","name":"m","nameLocation":"15976:1:31","nodeType":"VariableDeclaration","scope":7070,"src":"15968:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7040,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:31"},"returnParameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7070,"src":"16002:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:31"},"scope":7884,"src":"15930:255:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7093,"nodeType":"Block","src":"17039:1493:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7084,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"17053:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7091,"nodeType":"IfStatement","src":"17049:29:31","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":7083,"id":7090,"nodeType":"Return","src":"17061:17:31"}},{"AST":{"nativeSrc":"17113:1413:31","nodeType":"YulBlock","src":"17113:1413:31","statements":[{"nativeSrc":"17127:22:31","nodeType":"YulVariableDeclaration","src":"17127:22:31","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:31","nodeType":"YulLiteral","src":"17144:4:31","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:31","nodeType":"YulIdentifier","src":"17138:5:31"},"nativeSrc":"17138:11:31","nodeType":"YulFunctionCall","src":"17138:11:31"},"variables":[{"name":"ptr","nativeSrc":"17131:3:31","nodeType":"YulTypedName","src":"17131:3:31","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:31","nodeType":"YulIdentifier","src":"18057:3:31"},{"kind":"number","nativeSrc":"18062:4:31","nodeType":"YulLiteral","src":"18062:4:31","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:31","nodeType":"YulIdentifier","src":"18050:6:31"},"nativeSrc":"18050:17:31","nodeType":"YulFunctionCall","src":"18050:17:31"},"nativeSrc":"18050:17:31","nodeType":"YulExpressionStatement","src":"18050:17:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:31","nodeType":"YulIdentifier","src":"18091:3:31"},{"kind":"number","nativeSrc":"18096:4:31","nodeType":"YulLiteral","src":"18096:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:31","nodeType":"YulIdentifier","src":"18087:3:31"},"nativeSrc":"18087:14:31","nodeType":"YulFunctionCall","src":"18087:14:31"},{"kind":"number","nativeSrc":"18103:4:31","nodeType":"YulLiteral","src":"18103:4:31","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:31","nodeType":"YulIdentifier","src":"18080:6:31"},"nativeSrc":"18080:28:31","nodeType":"YulFunctionCall","src":"18080:28:31"},"nativeSrc":"18080:28:31","nodeType":"YulExpressionStatement","src":"18080:28:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:31","nodeType":"YulIdentifier","src":"18132:3:31"},{"kind":"number","nativeSrc":"18137:4:31","nodeType":"YulLiteral","src":"18137:4:31","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:31","nodeType":"YulIdentifier","src":"18128:3:31"},"nativeSrc":"18128:14:31","nodeType":"YulFunctionCall","src":"18128:14:31"},{"kind":"number","nativeSrc":"18144:4:31","nodeType":"YulLiteral","src":"18144:4:31","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:31","nodeType":"YulIdentifier","src":"18121:6:31"},"nativeSrc":"18121:28:31","nodeType":"YulFunctionCall","src":"18121:28:31"},"nativeSrc":"18121:28:31","nodeType":"YulExpressionStatement","src":"18121:28:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:31","nodeType":"YulIdentifier","src":"18173:3:31"},{"kind":"number","nativeSrc":"18178:4:31","nodeType":"YulLiteral","src":"18178:4:31","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:31","nodeType":"YulIdentifier","src":"18169:3:31"},"nativeSrc":"18169:14:31","nodeType":"YulFunctionCall","src":"18169:14:31"},{"name":"b","nativeSrc":"18185:1:31","nodeType":"YulIdentifier","src":"18185:1:31"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:31","nodeType":"YulIdentifier","src":"18162:6:31"},"nativeSrc":"18162:25:31","nodeType":"YulFunctionCall","src":"18162:25:31"},"nativeSrc":"18162:25:31","nodeType":"YulExpressionStatement","src":"18162:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:31","nodeType":"YulIdentifier","src":"18211:3:31"},{"kind":"number","nativeSrc":"18216:4:31","nodeType":"YulLiteral","src":"18216:4:31","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:31","nodeType":"YulIdentifier","src":"18207:3:31"},"nativeSrc":"18207:14:31","nodeType":"YulFunctionCall","src":"18207:14:31"},{"name":"e","nativeSrc":"18223:1:31","nodeType":"YulIdentifier","src":"18223:1:31"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:31","nodeType":"YulIdentifier","src":"18200:6:31"},"nativeSrc":"18200:25:31","nodeType":"YulFunctionCall","src":"18200:25:31"},"nativeSrc":"18200:25:31","nodeType":"YulExpressionStatement","src":"18200:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:31","nodeType":"YulIdentifier","src":"18249:3:31"},{"kind":"number","nativeSrc":"18254:4:31","nodeType":"YulLiteral","src":"18254:4:31","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:31","nodeType":"YulIdentifier","src":"18245:3:31"},"nativeSrc":"18245:14:31","nodeType":"YulFunctionCall","src":"18245:14:31"},{"name":"m","nativeSrc":"18261:1:31","nodeType":"YulIdentifier","src":"18261:1:31"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:31","nodeType":"YulIdentifier","src":"18238:6:31"},"nativeSrc":"18238:25:31","nodeType":"YulFunctionCall","src":"18238:25:31"},"nativeSrc":"18238:25:31","nodeType":"YulExpressionStatement","src":"18238:25:31"},{"nativeSrc":"18425:57:31","nodeType":"YulAssignment","src":"18425:57:31","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:31","nodeType":"YulIdentifier","src":"18447:3:31"},"nativeSrc":"18447:5:31","nodeType":"YulFunctionCall","src":"18447:5:31"},{"kind":"number","nativeSrc":"18454:4:31","nodeType":"YulLiteral","src":"18454:4:31","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:31","nodeType":"YulIdentifier","src":"18460:3:31"},{"kind":"number","nativeSrc":"18465:4:31","nodeType":"YulLiteral","src":"18465:4:31","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:31","nodeType":"YulLiteral","src":"18471:4:31","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:31","nodeType":"YulLiteral","src":"18477:4:31","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:31","nodeType":"YulIdentifier","src":"18436:10:31"},"nativeSrc":"18436:46:31","nodeType":"YulFunctionCall","src":"18436:46:31"},"variableNames":[{"name":"success","nativeSrc":"18425:7:31","nodeType":"YulIdentifier","src":"18425:7:31"}]},{"nativeSrc":"18495:21:31","nodeType":"YulAssignment","src":"18495:21:31","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:31","nodeType":"YulLiteral","src":"18511:4:31","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:31","nodeType":"YulIdentifier","src":"18505:5:31"},"nativeSrc":"18505:11:31","nodeType":"YulFunctionCall","src":"18505:11:31"},"variableNames":[{"name":"result","nativeSrc":"18495:6:31","nodeType":"YulIdentifier","src":"18495:6:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7073,"isOffset":false,"isSlot":false,"src":"18185:1:31","valueSize":1},{"declaration":7075,"isOffset":false,"isSlot":false,"src":"18223:1:31","valueSize":1},{"declaration":7077,"isOffset":false,"isSlot":false,"src":"18261:1:31","valueSize":1},{"declaration":7082,"isOffset":false,"isSlot":false,"src":"18495:6:31","valueSize":1},{"declaration":7080,"isOffset":false,"isSlot":false,"src":"18425:7:31","valueSize":1}],"flags":["memory-safe"],"id":7092,"nodeType":"InlineAssembly","src":"17088:1438:31"}]},"documentation":{"id":7071,"nodeType":"StructuredDocumentation","src":"16191:738:31","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":7094,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:31","nodeType":"FunctionDefinition","parameters":{"id":7078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7073,"mutability":"mutable","name":"b","nameLocation":"16961:1:31","nodeType":"VariableDeclaration","scope":7094,"src":"16953:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7072,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7075,"mutability":"mutable","name":"e","nameLocation":"16972:1:31","nodeType":"VariableDeclaration","scope":7094,"src":"16964:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7074,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7077,"mutability":"mutable","name":"m","nameLocation":"16983:1:31","nodeType":"VariableDeclaration","scope":7094,"src":"16975:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7076,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:31"},"returnParameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7080,"mutability":"mutable","name":"success","nameLocation":"17014:7:31","nodeType":"VariableDeclaration","scope":7094,"src":"17009:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7079,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7082,"mutability":"mutable","name":"result","nameLocation":"17031:6:31","nodeType":"VariableDeclaration","scope":7094,"src":"17023:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:31"},"scope":7884,"src":"16934:1598:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7129,"nodeType":"Block","src":"18729:179:31","statements":[{"assignments":[7107,7109],"declarations":[{"constant":false,"id":7107,"mutability":"mutable","name":"success","nameLocation":"18745:7:31","nodeType":"VariableDeclaration","scope":7129,"src":"18740:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7106,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7109,"mutability":"mutable","name":"result","nameLocation":"18767:6:31","nodeType":"VariableDeclaration","scope":7129,"src":"18754:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7108,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7115,"initialValue":{"arguments":[{"id":7111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"18787:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7112,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"18790:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7113,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"18793:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7110,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7094,7176],"referencedDeclaration":7176,"src":"18777:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:31"},{"condition":{"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:31","subExpression":{"id":7116,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"18810:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7126,"nodeType":"IfStatement","src":"18805:74:31","trueBody":{"id":7125,"nodeType":"Block","src":"18819:60:31","statements":[{"expression":{"arguments":[{"expression":{"id":7121,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"18845:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:31","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3510,"src":"18845:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7118,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"18833:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3543_$","typeString":"type(library Panic)"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:31","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"18833:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"ExpressionStatement","src":"18833:35:31"}]}},{"expression":{"id":7127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"18895:6:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":7105,"id":7128,"nodeType":"Return","src":"18888:13:31"}]},"documentation":{"id":7095,"nodeType":"StructuredDocumentation","src":"18538:85:31","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":7130,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:31","nodeType":"FunctionDefinition","parameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7097,"mutability":"mutable","name":"b","nameLocation":"18657:1:31","nodeType":"VariableDeclaration","scope":7130,"src":"18644:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7096,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7099,"mutability":"mutable","name":"e","nameLocation":"18673:1:31","nodeType":"VariableDeclaration","scope":7130,"src":"18660:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7098,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7101,"mutability":"mutable","name":"m","nameLocation":"18689:1:31","nodeType":"VariableDeclaration","scope":7130,"src":"18676:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7100,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:31"},"returnParameters":{"id":7105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7130,"src":"18715:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7103,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:31"},"scope":7884,"src":"18628:280:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7175,"nodeType":"Block","src":"19162:771:31","statements":[{"condition":{"arguments":[{"id":7145,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"19187:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7144,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"19176:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7154,"nodeType":"IfStatement","src":"19172:47:31","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7148,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":7143,"id":7153,"nodeType":"Return","src":"19191:28:31"}},{"assignments":[7156],"declarations":[{"constant":false,"id":7156,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:31","nodeType":"VariableDeclaration","scope":7175,"src":"19230:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7155,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7159,"initialValue":{"expression":{"id":7157,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"19245:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:31","memberName":"length","nodeType":"MemberAccess","src":"19245:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:31"},{"expression":{"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"19335:6:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"19361:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:31","memberName":"length","nodeType":"MemberAccess","src":"19361:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7165,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"19371:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:31","memberName":"length","nodeType":"MemberAccess","src":"19371:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7167,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"19381:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7168,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"19387:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7169,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"19390:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7170,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"19393:1:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7161,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7173,"nodeType":"ExpressionStatement","src":"19335:60:31"},{"AST":{"nativeSrc":"19431:496:31","nodeType":"YulBlock","src":"19431:496:31","statements":[{"nativeSrc":"19445:32:31","nodeType":"YulVariableDeclaration","src":"19445:32:31","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:31","nodeType":"YulIdentifier","src":"19464:6:31"},{"kind":"number","nativeSrc":"19472:4:31","nodeType":"YulLiteral","src":"19472:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:31","nodeType":"YulIdentifier","src":"19460:3:31"},"nativeSrc":"19460:17:31","nodeType":"YulFunctionCall","src":"19460:17:31"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:31","nodeType":"YulTypedName","src":"19449:7:31","type":""}]},{"nativeSrc":"19567:73:31","nodeType":"YulAssignment","src":"19567:73:31","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:31","nodeType":"YulIdentifier","src":"19589:3:31"},"nativeSrc":"19589:5:31","nodeType":"YulFunctionCall","src":"19589:5:31"},{"kind":"number","nativeSrc":"19596:4:31","nodeType":"YulLiteral","src":"19596:4:31","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:31","nodeType":"YulIdentifier","src":"19602:7:31"},{"arguments":[{"name":"result","nativeSrc":"19617:6:31","nodeType":"YulIdentifier","src":"19617:6:31"}],"functionName":{"name":"mload","nativeSrc":"19611:5:31","nodeType":"YulIdentifier","src":"19611:5:31"},"nativeSrc":"19611:13:31","nodeType":"YulFunctionCall","src":"19611:13:31"},{"name":"dataPtr","nativeSrc":"19626:7:31","nodeType":"YulIdentifier","src":"19626:7:31"},{"name":"mLen","nativeSrc":"19635:4:31","nodeType":"YulIdentifier","src":"19635:4:31"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:31","nodeType":"YulIdentifier","src":"19578:10:31"},"nativeSrc":"19578:62:31","nodeType":"YulFunctionCall","src":"19578:62:31"},"variableNames":[{"name":"success","nativeSrc":"19567:7:31","nodeType":"YulIdentifier","src":"19567:7:31"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:31","nodeType":"YulIdentifier","src":"19796:6:31"},{"name":"mLen","nativeSrc":"19804:4:31","nodeType":"YulIdentifier","src":"19804:4:31"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:31","nodeType":"YulIdentifier","src":"19789:6:31"},"nativeSrc":"19789:20:31","nodeType":"YulFunctionCall","src":"19789:20:31"},"nativeSrc":"19789:20:31","nodeType":"YulExpressionStatement","src":"19789:20:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:31","nodeType":"YulLiteral","src":"19892:4:31","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:31","nodeType":"YulIdentifier","src":"19902:7:31"},{"name":"mLen","nativeSrc":"19911:4:31","nodeType":"YulIdentifier","src":"19911:4:31"}],"functionName":{"name":"add","nativeSrc":"19898:3:31","nodeType":"YulIdentifier","src":"19898:3:31"},"nativeSrc":"19898:18:31","nodeType":"YulFunctionCall","src":"19898:18:31"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:31","nodeType":"YulIdentifier","src":"19885:6:31"},"nativeSrc":"19885:32:31","nodeType":"YulFunctionCall","src":"19885:32:31"},"nativeSrc":"19885:32:31","nodeType":"YulExpressionStatement","src":"19885:32:31"}]},"evmVersion":"paris","externalReferences":[{"declaration":7156,"isOffset":false,"isSlot":false,"src":"19635:4:31","valueSize":1},{"declaration":7156,"isOffset":false,"isSlot":false,"src":"19804:4:31","valueSize":1},{"declaration":7156,"isOffset":false,"isSlot":false,"src":"19911:4:31","valueSize":1},{"declaration":7142,"isOffset":false,"isSlot":false,"src":"19464:6:31","valueSize":1},{"declaration":7142,"isOffset":false,"isSlot":false,"src":"19617:6:31","valueSize":1},{"declaration":7142,"isOffset":false,"isSlot":false,"src":"19796:6:31","valueSize":1},{"declaration":7140,"isOffset":false,"isSlot":false,"src":"19567:7:31","valueSize":1}],"flags":["memory-safe"],"id":7174,"nodeType":"InlineAssembly","src":"19406:521:31"}]},"documentation":{"id":7131,"nodeType":"StructuredDocumentation","src":"18914:88:31","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":7176,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:31","nodeType":"FunctionDefinition","parameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"mutability":"mutable","name":"b","nameLocation":"19048:1:31","nodeType":"VariableDeclaration","scope":7176,"src":"19035:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7132,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7135,"mutability":"mutable","name":"e","nameLocation":"19072:1:31","nodeType":"VariableDeclaration","scope":7176,"src":"19059:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7134,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7137,"mutability":"mutable","name":"m","nameLocation":"19096:1:31","nodeType":"VariableDeclaration","scope":7176,"src":"19083:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7136,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:31"},"returnParameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"success","nameLocation":"19132:7:31","nodeType":"VariableDeclaration","scope":7176,"src":"19127:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7139,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7142,"mutability":"mutable","name":"result","nameLocation":"19154:6:31","nodeType":"VariableDeclaration","scope":7176,"src":"19141:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7141,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:31"},"scope":7884,"src":"19007:926:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7208,"nodeType":"Block","src":"20088:176:31","statements":[{"body":{"id":7204,"nodeType":"Block","src":"20145:92:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7195,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"20163:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7197,"indexExpression":{"id":7196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"20173:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:31","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7203,"nodeType":"IfStatement","src":"20159:68:31","trueBody":{"id":7202,"nodeType":"Block","src":"20182:45:31","statements":[{"expression":{"hexValue":"66616c7365","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7183,"id":7201,"nodeType":"Return","src":"20200:12:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"20118:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7189,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"20122:9:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:31","memberName":"length","nodeType":"MemberAccess","src":"20122:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7205,"initializationExpression":{"assignments":[7185],"declarations":[{"constant":false,"id":7185,"mutability":"mutable","name":"i","nameLocation":"20111:1:31","nodeType":"VariableDeclaration","scope":7205,"src":"20103:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7184,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7187,"initialValue":{"hexValue":"30","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:31","subExpression":{"id":7192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"20142:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7194,"nodeType":"ExpressionStatement","src":"20140:3:31"},"nodeType":"ForStatement","src":"20098:139:31"},{"expression":{"hexValue":"74727565","id":7206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7183,"id":7207,"nodeType":"Return","src":"20246:11:31"}]},"documentation":{"id":7177,"nodeType":"StructuredDocumentation","src":"19939:72:31","text":" @dev Returns whether the provided byte array is zero."},"id":7209,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:31","nodeType":"FunctionDefinition","parameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:31","nodeType":"VariableDeclaration","scope":7209,"src":"20036:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7178,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:31"},"returnParameters":{"id":7183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7209,"src":"20082:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7181,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:31"},"scope":7884,"src":"20016:248:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7427,"nodeType":"Block","src":"20624:5124:31","statements":[{"id":7426,"nodeType":"UncheckedBlock","src":"20634:5108:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"20728:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":7218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7223,"nodeType":"IfStatement","src":"20724:53:31","trueBody":{"id":7222,"nodeType":"Block","src":"20736:41:31","statements":[{"expression":{"id":7220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"20761:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7216,"id":7221,"nodeType":"Return","src":"20754:8:31"}]}},{"assignments":[7225],"declarations":[{"constant":false,"id":7225,"mutability":"mutable","name":"aa","nameLocation":"21712:2:31","nodeType":"VariableDeclaration","scope":7426,"src":"21704:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7227,"initialValue":{"id":7226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"21717:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:31"},{"assignments":[7229],"declarations":[{"constant":false,"id":7229,"mutability":"mutable","name":"xn","nameLocation":"21740:2:31","nodeType":"VariableDeclaration","scope":7426,"src":"21732:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7228,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7231,"initialValue":{"hexValue":"31","id":7230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7232,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21765:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:31","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:31","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7247,"nodeType":"IfStatement","src":"21761:92:31","trueBody":{"id":7246,"nodeType":"Block","src":"21783:70:31","statements":[{"expression":{"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7238,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21801:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:31","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7241,"nodeType":"ExpressionStatement","src":"21801:10:31"},{"expression":{"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7242,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"21829:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7245,"nodeType":"ExpressionStatement","src":"21829:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7248,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21870:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:31","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:31","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"21866:90:31","trueBody":{"id":7262,"nodeType":"Block","src":"21887:69:31","statements":[{"expression":{"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7254,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21905:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7257,"nodeType":"ExpressionStatement","src":"21905:9:31"},{"expression":{"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7258,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"21932:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7261,"nodeType":"ExpressionStatement","src":"21932:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"21973:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:31","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:31","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7279,"nodeType":"IfStatement","src":"21969:90:31","trueBody":{"id":7278,"nodeType":"Block","src":"21990:69:31","statements":[{"expression":{"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7270,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22008:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7273,"nodeType":"ExpressionStatement","src":"22008:9:31"},{"expression":{"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7274,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"22035:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":7275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7277,"nodeType":"ExpressionStatement","src":"22035:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7280,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22076:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:31","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:31","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7295,"nodeType":"IfStatement","src":"22072:89:31","trueBody":{"id":7294,"nodeType":"Block","src":"22093:68:31","statements":[{"expression":{"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7286,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22111:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7289,"nodeType":"ExpressionStatement","src":"22111:9:31"},{"expression":{"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7290,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"22138:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7293,"nodeType":"ExpressionStatement","src":"22138:8:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7296,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22178:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:31","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:31","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7311,"nodeType":"IfStatement","src":"22174:87:31","trueBody":{"id":7310,"nodeType":"Block","src":"22194:67:31","statements":[{"expression":{"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7302,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22212:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7305,"nodeType":"ExpressionStatement","src":"22212:8:31"},{"expression":{"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7306,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"22238:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7309,"nodeType":"ExpressionStatement","src":"22238:8:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7312,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22278:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":7315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":7316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7327,"nodeType":"IfStatement","src":"22274:87:31","trueBody":{"id":7326,"nodeType":"Block","src":"22294:67:31","statements":[{"expression":{"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7318,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22312:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7321,"nodeType":"ExpressionStatement","src":"22312:8:31"},{"expression":{"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"22338:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":7323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7325,"nodeType":"ExpressionStatement","src":"22338:8:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7328,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"22378:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7339,"nodeType":"IfStatement","src":"22374:61:31","trueBody":{"id":7338,"nodeType":"Block","src":"22394:41:31","statements":[{"expression":{"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7334,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"22412:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7337,"nodeType":"ExpressionStatement","src":"22412:8:31"}]}},{"expression":{"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"22855:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"22865:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7348,"nodeType":"ExpressionStatement","src":"22855:18:31"},{"expression":{"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7349,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24760:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24766:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"24771:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7352,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24775:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7359,"nodeType":"ExpressionStatement","src":"24760:23:31"},{"expression":{"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7360,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24869:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7361,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24875:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"24880:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7363,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24884:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7370,"nodeType":"ExpressionStatement","src":"24869:23:31"},{"expression":{"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7371,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24980:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24986:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"24991:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7374,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"24995:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7381,"nodeType":"ExpressionStatement","src":"24980:23:31"},{"expression":{"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7382,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25089:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7383,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25095:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"25100:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7385,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25104:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7392,"nodeType":"ExpressionStatement","src":"25089:23:31"},{"expression":{"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7393,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25199:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7394,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25205:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"25210:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7396,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25214:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7403,"nodeType":"ExpressionStatement","src":"25199:23:31"},{"expression":{"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7404,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25309:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7405,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25315:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"25320:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7407,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25324:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7414,"nodeType":"ExpressionStatement","src":"25309:23:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7415,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25698:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7418,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25719:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7419,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"25724:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"25728:2:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"25703:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"25703:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7216,"id":7425,"nodeType":"Return","src":"25691:40:31"}]}]},"documentation":{"id":7210,"nodeType":"StructuredDocumentation","src":"20270:292:31","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7428,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:31","nodeType":"FunctionDefinition","parameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7212,"mutability":"mutable","name":"a","nameLocation":"20589:1:31","nodeType":"VariableDeclaration","scope":7428,"src":"20581:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7211,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:31"},"returnParameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7428,"src":"20615:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7214,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:31"},"scope":7884,"src":"20567:5181:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7461,"nodeType":"Block","src":"25921:171:31","statements":[{"id":7460,"nodeType":"UncheckedBlock","src":"25931:155:31","statements":[{"assignments":[7440],"declarations":[{"constant":false,"id":7440,"mutability":"mutable","name":"result","nameLocation":"25963:6:31","nodeType":"VariableDeclaration","scope":7460,"src":"25955:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7439,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7444,"initialValue":{"arguments":[{"id":7442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"25977:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7441,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7428,7462],"referencedDeclaration":7428,"src":"25972:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"26000:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7449,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"26042:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}],"id":7448,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"26025:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6275_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"26055:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"26064:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7454,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"26073:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7446,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"26009:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"26009:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7438,"id":7459,"nodeType":"Return","src":"25993:82:31"}]}]},"documentation":{"id":7429,"nodeType":"StructuredDocumentation","src":"25754:86:31","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7462,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:31","nodeType":"FunctionDefinition","parameters":{"id":7435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7431,"mutability":"mutable","name":"a","nameLocation":"25867:1:31","nodeType":"VariableDeclaration","scope":7462,"src":"25859:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7430,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7434,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:31","nodeType":"VariableDeclaration","scope":7462,"src":"25870:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"},"typeName":{"id":7433,"nodeType":"UserDefinedTypeName","pathNode":{"id":7432,"name":"Rounding","nameLocations":["25870:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":6275,"src":"25870:8:31"},"referencedDeclaration":6275,"src":"25870:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:31"},"returnParameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7462,"src":"25912:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7436,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:31"},"scope":7884,"src":"25845:247:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7552,"nodeType":"Block","src":"26281:2334:31","statements":[{"expression":{"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7470,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26363:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7473,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"26383:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:31","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7471,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"26367:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"26367:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:31","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7480,"nodeType":"ExpressionStatement","src":"26363:64:31"},{"expression":{"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7481,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26503:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7484,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"26525:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26530:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:31","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7482,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"26508:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"26508:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:31","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7494,"nodeType":"ExpressionStatement","src":"26503:56:31"},{"expression":{"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7495,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26634:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7498,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"26656:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7499,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26661:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:31","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7496,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"26639:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"26639:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7508,"nodeType":"ExpressionStatement","src":"26634:48:31"},{"expression":{"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26757:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7512,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"26779:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7513,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26784:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:31","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7510,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"26762:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"26762:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7522,"nodeType":"ExpressionStatement","src":"26757:44:31"},{"expression":{"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7523,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26874:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7526,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"26896:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7527,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26901:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"26879:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"26879:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7536,"nodeType":"ExpressionStatement","src":"26874:42:31"},{"expression":{"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7537,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"26988:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7540,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"27010:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7541,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"27015:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:31","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7538,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"26993:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"26993:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7550,"nodeType":"ExpressionStatement","src":"26988:41:31"},{"AST":{"nativeSrc":"28490:119:31","nodeType":"YulBlock","src":"28490:119:31","statements":[{"nativeSrc":"28504:95:31","nodeType":"YulAssignment","src":"28504:95:31","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:31","nodeType":"YulIdentifier","src":"28512:1:31"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:31","nodeType":"YulIdentifier","src":"28524:1:31"},{"name":"x","nativeSrc":"28527:1:31","nodeType":"YulIdentifier","src":"28527:1:31"}],"functionName":{"name":"shr","nativeSrc":"28520:3:31","nodeType":"YulIdentifier","src":"28520:3:31"},"nativeSrc":"28520:9:31","nodeType":"YulFunctionCall","src":"28520:9:31"},{"kind":"number","nativeSrc":"28531:66:31","nodeType":"YulLiteral","src":"28531:66:31","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:31","nodeType":"YulIdentifier","src":"28515:4:31"},"nativeSrc":"28515:83:31","nodeType":"YulFunctionCall","src":"28515:83:31"}],"functionName":{"name":"or","nativeSrc":"28509:2:31","nodeType":"YulIdentifier","src":"28509:2:31"},"nativeSrc":"28509:90:31","nodeType":"YulFunctionCall","src":"28509:90:31"},"variableNames":[{"name":"r","nativeSrc":"28504:1:31","nodeType":"YulIdentifier","src":"28504:1:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7468,"isOffset":false,"isSlot":false,"src":"28504:1:31","valueSize":1},{"declaration":7468,"isOffset":false,"isSlot":false,"src":"28512:1:31","valueSize":1},{"declaration":7468,"isOffset":false,"isSlot":false,"src":"28524:1:31","valueSize":1},{"declaration":7465,"isOffset":false,"isSlot":false,"src":"28527:1:31","valueSize":1}],"flags":["memory-safe"],"id":7551,"nodeType":"InlineAssembly","src":"28465:144:31"}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"26098:119:31","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7553,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:31","nodeType":"FunctionDefinition","parameters":{"id":7466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7465,"mutability":"mutable","name":"x","nameLocation":"26244:1:31","nodeType":"VariableDeclaration","scope":7553,"src":"26236:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7464,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:31"},"returnParameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7468,"mutability":"mutable","name":"r","nameLocation":"26278:1:31","nodeType":"VariableDeclaration","scope":7553,"src":"26270:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7467,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:31"},"scope":7884,"src":"26222:2393:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7586,"nodeType":"Block","src":"28848:175:31","statements":[{"id":7585,"nodeType":"UncheckedBlock","src":"28858:159:31","statements":[{"assignments":[7565],"declarations":[{"constant":false,"id":7565,"mutability":"mutable","name":"result","nameLocation":"28890:6:31","nodeType":"VariableDeclaration","scope":7585,"src":"28882:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7569,"initialValue":{"arguments":[{"id":7567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"28904:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7566,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7553,7587],"referencedDeclaration":7553,"src":"28899:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"28931:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7574,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"28973:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}],"id":7573,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"28956:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6275_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"28991:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"29000:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7571,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"28940:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"28940:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7563,"id":7584,"nodeType":"Return","src":"28924:82:31"}]}]},"documentation":{"id":7554,"nodeType":"StructuredDocumentation","src":"28621:142:31","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7587,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:31","nodeType":"FunctionDefinition","parameters":{"id":7560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7556,"mutability":"mutable","name":"value","nameLocation":"28790:5:31","nodeType":"VariableDeclaration","scope":7587,"src":"28782:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7555,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7559,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:31","nodeType":"VariableDeclaration","scope":7587,"src":"28797:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"},"typeName":{"id":7558,"nodeType":"UserDefinedTypeName","pathNode":{"id":7557,"name":"Rounding","nameLocations":["28797:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":6275,"src":"28797:8:31"},"referencedDeclaration":6275,"src":"28797:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:31"},"returnParameters":{"id":7563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7587,"src":"28839:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7561,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:31"},"scope":7884,"src":"28768:255:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7715,"nodeType":"Block","src":"29216:854:31","statements":[{"assignments":[7596],"declarations":[{"constant":false,"id":7596,"mutability":"mutable","name":"result","nameLocation":"29234:6:31","nodeType":"VariableDeclaration","scope":7715,"src":"29226:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7595,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7598,"initialValue":{"hexValue":"30","id":7597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:31"},{"id":7712,"nodeType":"UncheckedBlock","src":"29254:787:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29282:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7615,"nodeType":"IfStatement","src":"29278:103:31","trueBody":{"id":7614,"nodeType":"Block","src":"29301:80:31","statements":[{"expression":{"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29319:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7609,"nodeType":"ExpressionStatement","src":"29319:17:31"},{"expression":{"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"29354:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:31","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7613,"nodeType":"ExpressionStatement","src":"29354:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29398:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7632,"nodeType":"IfStatement","src":"29394:103:31","trueBody":{"id":7631,"nodeType":"Block","src":"29417:80:31","statements":[{"expression":{"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29435:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7626,"nodeType":"ExpressionStatement","src":"29435:17:31"},{"expression":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"29470:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:31","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7630,"nodeType":"ExpressionStatement","src":"29470:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29514:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7649,"nodeType":"IfStatement","src":"29510:103:31","trueBody":{"id":7648,"nodeType":"Block","src":"29533:80:31","statements":[{"expression":{"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29551:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7643,"nodeType":"ExpressionStatement","src":"29551:17:31"},{"expression":{"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"29586:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:31","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7647,"nodeType":"ExpressionStatement","src":"29586:12:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29630:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7666,"nodeType":"IfStatement","src":"29626:100:31","trueBody":{"id":7665,"nodeType":"Block","src":"29648:78:31","statements":[{"expression":{"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29666:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7660,"nodeType":"ExpressionStatement","src":"29666:16:31"},{"expression":{"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"29700:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7664,"nodeType":"ExpressionStatement","src":"29700:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29743:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:31","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7683,"nodeType":"IfStatement","src":"29739:100:31","trueBody":{"id":7682,"nodeType":"Block","src":"29761:78:31","statements":[{"expression":{"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29779:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:31","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7677,"nodeType":"ExpressionStatement","src":"29779:16:31"},{"expression":{"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"29813:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7681,"nodeType":"ExpressionStatement","src":"29813:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29856:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7700,"nodeType":"IfStatement","src":"29852:100:31","trueBody":{"id":7699,"nodeType":"Block","src":"29874:78:31","statements":[{"expression":{"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29892:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7694,"nodeType":"ExpressionStatement","src":"29892:16:31"},{"expression":{"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"29926:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7698,"nodeType":"ExpressionStatement","src":"29926:11:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"29969:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7711,"nodeType":"IfStatement","src":"29965:66:31","trueBody":{"id":7710,"nodeType":"Block","src":"29987:44:31","statements":[{"expression":{"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"30005:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7709,"nodeType":"ExpressionStatement","src":"30005:11:31"}]}}]},{"expression":{"id":7713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"30057:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7594,"id":7714,"nodeType":"Return","src":"30050:13:31"}]},"documentation":{"id":7588,"nodeType":"StructuredDocumentation","src":"29029:120:31","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7716,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:31","nodeType":"FunctionDefinition","parameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"value","nameLocation":"29177:5:31","nodeType":"VariableDeclaration","scope":7716,"src":"29169:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7589,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:31"},"returnParameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7716,"src":"29207:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7592,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:31"},"scope":7884,"src":"29154:916:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7749,"nodeType":"Block","src":"30305:177:31","statements":[{"id":7748,"nodeType":"UncheckedBlock","src":"30315:161:31","statements":[{"assignments":[7728],"declarations":[{"constant":false,"id":7728,"mutability":"mutable","name":"result","nameLocation":"30347:6:31","nodeType":"VariableDeclaration","scope":7748,"src":"30339:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7727,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7732,"initialValue":{"arguments":[{"id":7730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"30362:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7729,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7716,7750],"referencedDeclaration":7716,"src":"30356:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"30389:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7737,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"30431:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}],"id":7736,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"30414:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6275_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"30450:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"30459:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7734,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"30398:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"30398:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7726,"id":7747,"nodeType":"Return","src":"30382:83:31"}]}]},"documentation":{"id":7717,"nodeType":"StructuredDocumentation","src":"30076:143:31","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7750,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:31","nodeType":"FunctionDefinition","parameters":{"id":7723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"value","nameLocation":"30247:5:31","nodeType":"VariableDeclaration","scope":7750,"src":"30239:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7722,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:31","nodeType":"VariableDeclaration","scope":7750,"src":"30254:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"},"typeName":{"id":7721,"nodeType":"UserDefinedTypeName","pathNode":{"id":7720,"name":"Rounding","nameLocations":["30254:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":6275,"src":"30254:8:31"},"referencedDeclaration":6275,"src":"30254:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:31"},"returnParameters":{"id":7726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7750,"src":"30296:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7724,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:31"},"scope":7884,"src":"30224:258:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7826,"nodeType":"Block","src":"30800:675:31","statements":[{"expression":{"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7758,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"30882:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7761,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"30902:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:31","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7759,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"30886:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"30886:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:31","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7768,"nodeType":"ExpressionStatement","src":"30882:64:31"},{"expression":{"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7769,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31022:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7772,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"31044:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7773,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31049:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:31","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7770,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"31027:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"31027:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:31","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7782,"nodeType":"ExpressionStatement","src":"31022:56:31"},{"expression":{"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7783,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31153:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7786,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"31175:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7787,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31180:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:31","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7784,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"31158:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"31158:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7796,"nodeType":"ExpressionStatement","src":"31153:48:31"},{"expression":{"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7797,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31276:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7800,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"31298:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7801,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31303:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:31","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7798,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"31281:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"31281:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7810,"nodeType":"ExpressionStatement","src":"31276:44:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7811,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31426:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7817,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"31453:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7818,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31458:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7815,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"31436:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"31436:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7757,"id":7825,"nodeType":"Return","src":"31418:50:31"}]},"documentation":{"id":7751,"nodeType":"StructuredDocumentation","src":"30488:246:31","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7827,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:31","nodeType":"FunctionDefinition","parameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"x","nameLocation":"30763:1:31","nodeType":"VariableDeclaration","scope":7827,"src":"30755:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7752,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:31"},"returnParameters":{"id":7757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7756,"mutability":"mutable","name":"r","nameLocation":"30797:1:31","nodeType":"VariableDeclaration","scope":7827,"src":"30789:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7755,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:31"},"scope":7884,"src":"30739:736:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7863,"nodeType":"Block","src":"31712:184:31","statements":[{"id":7862,"nodeType":"UncheckedBlock","src":"31722:168:31","statements":[{"assignments":[7839],"declarations":[{"constant":false,"id":7839,"mutability":"mutable","name":"result","nameLocation":"31754:6:31","nodeType":"VariableDeclaration","scope":7862,"src":"31746:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7838,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7843,"initialValue":{"arguments":[{"id":7841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"31770:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7840,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7827,7864],"referencedDeclaration":7827,"src":"31763:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:31"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"31797:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7848,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"31839:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}],"id":7847,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"31822:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6275_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"31858:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"31873:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7845,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"31806:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"31806:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7837,"id":7861,"nodeType":"Return","src":"31790:89:31"}]}]},"documentation":{"id":7828,"nodeType":"StructuredDocumentation","src":"31481:144:31","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7864,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:31","nodeType":"FunctionDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"value","nameLocation":"31654:5:31","nodeType":"VariableDeclaration","scope":7864,"src":"31646:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7829,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7833,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:31","nodeType":"VariableDeclaration","scope":7864,"src":"31661:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"},"typeName":{"id":7832,"nodeType":"UserDefinedTypeName","pathNode":{"id":7831,"name":"Rounding","nameLocations":["31661:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":6275,"src":"31661:8:31"},"referencedDeclaration":6275,"src":"31661:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:31"},"returnParameters":{"id":7837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7864,"src":"31703:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:31"},"scope":7884,"src":"31630:266:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7882,"nodeType":"Block","src":"32094:48:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7875,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"32117:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}],"id":7874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7873,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:31","typeDescriptions":{}}},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7872,"id":7881,"nodeType":"Return","src":"32104:31:31"}]},"documentation":{"id":7865,"nodeType":"StructuredDocumentation","src":"31902:113:31","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7883,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:31","nodeType":"FunctionDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7868,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:31","nodeType":"VariableDeclaration","scope":7883,"src":"32046:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"},"typeName":{"id":7867,"nodeType":"UserDefinedTypeName","pathNode":{"id":7866,"name":"Rounding","nameLocations":["32046:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":6275,"src":"32046:8:31"},"referencedDeclaration":6275,"src":"32046:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6275","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:31"},"returnParameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7883,"src":"32088:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7870,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:31"},"scope":7884,"src":"32020:122:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7885,"src":"281:31863:31","usedErrors":[],"usedEvents":[]}],"src":"103:32042:31"},"id":31},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9649]},"id":9650,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7886,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:32"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7887,"nodeType":"StructuredDocumentation","src":"218:550:32","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9649,"linearizedBaseContracts":[9649],"name":"SafeCast","nameLocation":"777:8:32","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7888,"nodeType":"StructuredDocumentation","src":"792:68:32","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7894,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:32","nodeType":"ErrorDefinition","parameters":{"id":7893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7890,"mutability":"mutable","name":"bits","nameLocation":"908:4:32","nodeType":"VariableDeclaration","scope":7894,"src":"902:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7889,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7892,"mutability":"mutable","name":"value","nameLocation":"922:5:32","nodeType":"VariableDeclaration","scope":7894,"src":"914:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7891,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:32"},"src":"865:64:32"},{"documentation":{"id":7895,"nodeType":"StructuredDocumentation","src":"935:75:32","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7899,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:32","nodeType":"ErrorDefinition","parameters":{"id":7898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7897,"mutability":"mutable","name":"value","nameLocation":"1056:5:32","nodeType":"VariableDeclaration","scope":7899,"src":"1049:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7896,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:32"},"src":"1015:48:32"},{"documentation":{"id":7900,"nodeType":"StructuredDocumentation","src":"1069:67:32","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7906,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:32","nodeType":"ErrorDefinition","parameters":{"id":7905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7902,"mutability":"mutable","name":"bits","nameLocation":"1183:4:32","nodeType":"VariableDeclaration","scope":7906,"src":"1177:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7901,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7904,"mutability":"mutable","name":"value","nameLocation":"1196:5:32","nodeType":"VariableDeclaration","scope":7906,"src":"1189:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7903,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:32"},"src":"1141:62:32"},{"documentation":{"id":7907,"nodeType":"StructuredDocumentation","src":"1209:75:32","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7911,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:32","nodeType":"ErrorDefinition","parameters":{"id":7910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"value","nameLocation":"1331:5:32","nodeType":"VariableDeclaration","scope":7911,"src":"1323:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:32"},"src":"1289:49:32"},{"body":{"id":7938,"nodeType":"Block","src":"1695:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"1709:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7921,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:32","memberName":"max","nodeType":"MemberAccess","src":"1717:17:32","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7932,"nodeType":"IfStatement","src":"1705:105:32","trueBody":{"id":7931,"nodeType":"Block","src":"1736:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:32","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"1793:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7926,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"1757:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7930,"nodeType":"RevertStatement","src":"1750:49:32"}]}},{"expression":{"arguments":[{"id":7935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"1834:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7933,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:32","typeDescriptions":{}}},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7918,"id":7937,"nodeType":"Return","src":"1819:21:32"}]},"documentation":{"id":7912,"nodeType":"StructuredDocumentation","src":"1344:280:32","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7939,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:32","nodeType":"FunctionDefinition","parameters":{"id":7915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7914,"mutability":"mutable","name":"value","nameLocation":"1656:5:32","nodeType":"VariableDeclaration","scope":7939,"src":"1648:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:32"},"returnParameters":{"id":7918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7939,"src":"1686:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7916,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:32","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:32"},"scope":9649,"src":"1629:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7966,"nodeType":"Block","src":"2204:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7942,"src":"2218:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7949,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:32","memberName":"max","nodeType":"MemberAccess","src":"2226:17:32","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7960,"nodeType":"IfStatement","src":"2214:105:32","trueBody":{"id":7959,"nodeType":"Block","src":"2245:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:32","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7942,"src":"2302:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7954,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"2266:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7958,"nodeType":"RevertStatement","src":"2259:49:32"}]}},{"expression":{"arguments":[{"id":7963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7942,"src":"2343:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7961,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:32","typeDescriptions":{}}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7946,"id":7965,"nodeType":"Return","src":"2328:21:32"}]},"documentation":{"id":7940,"nodeType":"StructuredDocumentation","src":"1853:280:32","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7967,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:32","nodeType":"FunctionDefinition","parameters":{"id":7943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7942,"mutability":"mutable","name":"value","nameLocation":"2165:5:32","nodeType":"VariableDeclaration","scope":7967,"src":"2157:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:32"},"returnParameters":{"id":7946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7967,"src":"2195:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7944,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:32","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:32"},"scope":9649,"src":"2138:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7994,"nodeType":"Block","src":"2713:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"2727:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7977,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:32","memberName":"max","nodeType":"MemberAccess","src":"2735:17:32","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7988,"nodeType":"IfStatement","src":"2723:105:32","trueBody":{"id":7987,"nodeType":"Block","src":"2754:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:32","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"2811:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7982,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"2775:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7986,"nodeType":"RevertStatement","src":"2768:49:32"}]}},{"expression":{"arguments":[{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"2852:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7989,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:32","typeDescriptions":{}}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7974,"id":7993,"nodeType":"Return","src":"2837:21:32"}]},"documentation":{"id":7968,"nodeType":"StructuredDocumentation","src":"2362:280:32","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:32","nodeType":"FunctionDefinition","parameters":{"id":7971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7970,"mutability":"mutable","name":"value","nameLocation":"2674:5:32","nodeType":"VariableDeclaration","scope":7995,"src":"2666:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:32"},"returnParameters":{"id":7974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7995,"src":"2704:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7972,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:32","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:32"},"scope":9649,"src":"2647:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8022,"nodeType":"Block","src":"3222:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"3236:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8005,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":8004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":8008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:32","memberName":"max","nodeType":"MemberAccess","src":"3244:17:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8016,"nodeType":"IfStatement","src":"3232:105:32","trueBody":{"id":8015,"nodeType":"Block","src":"3263:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:32","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"3320:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8010,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"3284:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8014,"nodeType":"RevertStatement","src":"3277:49:32"}]}},{"expression":{"arguments":[{"id":8019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"3361:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8017,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:32","typeDescriptions":{}}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8002,"id":8021,"nodeType":"Return","src":"3346:21:32"}]},"documentation":{"id":7996,"nodeType":"StructuredDocumentation","src":"2871:280:32","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8023,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:32","nodeType":"FunctionDefinition","parameters":{"id":7999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7998,"mutability":"mutable","name":"value","nameLocation":"3183:5:32","nodeType":"VariableDeclaration","scope":8023,"src":"3175:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:32"},"returnParameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8023,"src":"3213:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8000,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:32"},"scope":9649,"src":"3156:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8050,"nodeType":"Block","src":"3731:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8026,"src":"3745:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8033,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":8032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:32","memberName":"max","nodeType":"MemberAccess","src":"3753:17:32","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8044,"nodeType":"IfStatement","src":"3741:105:32","trueBody":{"id":8043,"nodeType":"Block","src":"3772:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:32","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8026,"src":"3829:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8038,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"3793:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8042,"nodeType":"RevertStatement","src":"3786:49:32"}]}},{"expression":{"arguments":[{"id":8047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8026,"src":"3870:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8045,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:32","typeDescriptions":{}}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":8030,"id":8049,"nodeType":"Return","src":"3855:21:32"}]},"documentation":{"id":8024,"nodeType":"StructuredDocumentation","src":"3380:280:32","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:32","nodeType":"FunctionDefinition","parameters":{"id":8027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8026,"mutability":"mutable","name":"value","nameLocation":"3692:5:32","nodeType":"VariableDeclaration","scope":8051,"src":"3684:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8025,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:32"},"returnParameters":{"id":8030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8051,"src":"3722:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":8028,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:32","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:32"},"scope":9649,"src":"3665:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8078,"nodeType":"Block","src":"4240:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"4254:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8061,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":8060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":8064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:32","memberName":"max","nodeType":"MemberAccess","src":"4262:17:32","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8072,"nodeType":"IfStatement","src":"4250:105:32","trueBody":{"id":8071,"nodeType":"Block","src":"4281:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:32","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"4338:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"4302:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8070,"nodeType":"RevertStatement","src":"4295:49:32"}]}},{"expression":{"arguments":[{"id":8075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"4379:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8073,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:32","typeDescriptions":{}}},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8058,"id":8077,"nodeType":"Return","src":"4364:21:32"}]},"documentation":{"id":8052,"nodeType":"StructuredDocumentation","src":"3889:280:32","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8079,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:32","nodeType":"FunctionDefinition","parameters":{"id":8055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8054,"mutability":"mutable","name":"value","nameLocation":"4201:5:32","nodeType":"VariableDeclaration","scope":8079,"src":"4193:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8053,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:32"},"returnParameters":{"id":8058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8079,"src":"4231:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8056,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:32","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:32"},"scope":9649,"src":"4174:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8106,"nodeType":"Block","src":"4749:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"4763:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8089,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":8088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:32","memberName":"max","nodeType":"MemberAccess","src":"4771:17:32","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8100,"nodeType":"IfStatement","src":"4759:105:32","trueBody":{"id":8099,"nodeType":"Block","src":"4790:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:32","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"4847:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"4811:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8098,"nodeType":"RevertStatement","src":"4804:49:32"}]}},{"expression":{"arguments":[{"id":8103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"4888:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8101,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:32","typeDescriptions":{}}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":8086,"id":8105,"nodeType":"Return","src":"4873:21:32"}]},"documentation":{"id":8080,"nodeType":"StructuredDocumentation","src":"4398:280:32","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:32","nodeType":"FunctionDefinition","parameters":{"id":8083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8082,"mutability":"mutable","name":"value","nameLocation":"4710:5:32","nodeType":"VariableDeclaration","scope":8107,"src":"4702:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8081,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:32"},"returnParameters":{"id":8086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8107,"src":"4740:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":8084,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:32","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:32"},"scope":9649,"src":"4683:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8134,"nodeType":"Block","src":"5258:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5272:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8117,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":8116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":8120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:32","memberName":"max","nodeType":"MemberAccess","src":"5280:17:32","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8128,"nodeType":"IfStatement","src":"5268:105:32","trueBody":{"id":8127,"nodeType":"Block","src":"5299:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:32","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5356:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"5320:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8126,"nodeType":"RevertStatement","src":"5313:49:32"}]}},{"expression":{"arguments":[{"id":8131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5397:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8129,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:32","typeDescriptions":{}}},"id":8132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":8114,"id":8133,"nodeType":"Return","src":"5382:21:32"}]},"documentation":{"id":8108,"nodeType":"StructuredDocumentation","src":"4907:280:32","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:32","nodeType":"FunctionDefinition","parameters":{"id":8111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8110,"mutability":"mutable","name":"value","nameLocation":"5219:5:32","nodeType":"VariableDeclaration","scope":8135,"src":"5211:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:32"},"returnParameters":{"id":8114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8135,"src":"5249:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":8112,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:32","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:32"},"scope":9649,"src":"5192:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8162,"nodeType":"Block","src":"5767:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"5781:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8145,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":8144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":8148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:32","memberName":"max","nodeType":"MemberAccess","src":"5789:17:32","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8156,"nodeType":"IfStatement","src":"5777:105:32","trueBody":{"id":8155,"nodeType":"Block","src":"5808:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:32","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"5865:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"5829:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8154,"nodeType":"RevertStatement","src":"5822:49:32"}]}},{"expression":{"arguments":[{"id":8159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"5906:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8157,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:32","typeDescriptions":{}}},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":8142,"id":8161,"nodeType":"Return","src":"5891:21:32"}]},"documentation":{"id":8136,"nodeType":"StructuredDocumentation","src":"5416:280:32","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8163,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:32","nodeType":"FunctionDefinition","parameters":{"id":8139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8138,"mutability":"mutable","name":"value","nameLocation":"5728:5:32","nodeType":"VariableDeclaration","scope":8163,"src":"5720:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:32"},"returnParameters":{"id":8142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8163,"src":"5758:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":8140,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:32","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:32"},"scope":9649,"src":"5701:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8190,"nodeType":"Block","src":"6276:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"6290:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8173,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":8172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:32","memberName":"max","nodeType":"MemberAccess","src":"6298:17:32","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8184,"nodeType":"IfStatement","src":"6286:105:32","trueBody":{"id":8183,"nodeType":"Block","src":"6317:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:32","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"6374:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"6338:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8182,"nodeType":"RevertStatement","src":"6331:49:32"}]}},{"expression":{"arguments":[{"id":8187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"6415:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8185,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:32","typeDescriptions":{}}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":8170,"id":8189,"nodeType":"Return","src":"6400:21:32"}]},"documentation":{"id":8164,"nodeType":"StructuredDocumentation","src":"5925:280:32","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:32","nodeType":"FunctionDefinition","parameters":{"id":8167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8166,"mutability":"mutable","name":"value","nameLocation":"6237:5:32","nodeType":"VariableDeclaration","scope":8191,"src":"6229:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:32"},"returnParameters":{"id":8170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8191,"src":"6267:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":8168,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:32","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:32"},"scope":9649,"src":"6210:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8218,"nodeType":"Block","src":"6785:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"6799:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8201,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":8200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":8204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:32","memberName":"max","nodeType":"MemberAccess","src":"6807:17:32","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8212,"nodeType":"IfStatement","src":"6795:105:32","trueBody":{"id":8211,"nodeType":"Block","src":"6826:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:32","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"6883:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"6847:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8210,"nodeType":"RevertStatement","src":"6840:49:32"}]}},{"expression":{"arguments":[{"id":8215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"6924:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8213,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:32","typeDescriptions":{}}},"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":8198,"id":8217,"nodeType":"Return","src":"6909:21:32"}]},"documentation":{"id":8192,"nodeType":"StructuredDocumentation","src":"6434:280:32","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:32","nodeType":"FunctionDefinition","parameters":{"id":8195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8194,"mutability":"mutable","name":"value","nameLocation":"6746:5:32","nodeType":"VariableDeclaration","scope":8219,"src":"6738:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8193,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:32"},"returnParameters":{"id":8198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8219,"src":"6776:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":8196,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:32","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:32"},"scope":9649,"src":"6719:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8246,"nodeType":"Block","src":"7294:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"7308:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8229,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:32","memberName":"max","nodeType":"MemberAccess","src":"7316:17:32","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8240,"nodeType":"IfStatement","src":"7304:105:32","trueBody":{"id":8239,"nodeType":"Block","src":"7335:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:32","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"7392:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"7356:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8238,"nodeType":"RevertStatement","src":"7349:49:32"}]}},{"expression":{"arguments":[{"id":8243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"7433:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8241,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:32","typeDescriptions":{}}},"id":8244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8226,"id":8245,"nodeType":"Return","src":"7418:21:32"}]},"documentation":{"id":8220,"nodeType":"StructuredDocumentation","src":"6943:280:32","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:32","nodeType":"FunctionDefinition","parameters":{"id":8223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8222,"mutability":"mutable","name":"value","nameLocation":"7255:5:32","nodeType":"VariableDeclaration","scope":8247,"src":"7247:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:32"},"returnParameters":{"id":8226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8247,"src":"7285:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8224,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:32","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:32"},"scope":9649,"src":"7228:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8274,"nodeType":"Block","src":"7803:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"7817:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8257,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:32","memberName":"max","nodeType":"MemberAccess","src":"7825:17:32","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8268,"nodeType":"IfStatement","src":"7813:105:32","trueBody":{"id":8267,"nodeType":"Block","src":"7844:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:32","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"7901:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"7865:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8266,"nodeType":"RevertStatement","src":"7858:49:32"}]}},{"expression":{"arguments":[{"id":8271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8250,"src":"7942:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8269,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:32","typeDescriptions":{}}},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8254,"id":8273,"nodeType":"Return","src":"7927:21:32"}]},"documentation":{"id":8248,"nodeType":"StructuredDocumentation","src":"7452:280:32","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:32","nodeType":"FunctionDefinition","parameters":{"id":8251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8250,"mutability":"mutable","name":"value","nameLocation":"7764:5:32","nodeType":"VariableDeclaration","scope":8275,"src":"7756:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8249,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:32"},"returnParameters":{"id":8254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8275,"src":"7794:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8252,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:32","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:32"},"scope":9649,"src":"7737:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8302,"nodeType":"Block","src":"8312:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"8326:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8285,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:32","memberName":"max","nodeType":"MemberAccess","src":"8334:17:32","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8296,"nodeType":"IfStatement","src":"8322:105:32","trueBody":{"id":8295,"nodeType":"Block","src":"8353:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:32","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"8410:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"8374:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8294,"nodeType":"RevertStatement","src":"8367:49:32"}]}},{"expression":{"arguments":[{"id":8299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"8451:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8297,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:32","typeDescriptions":{}}},"id":8300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8282,"id":8301,"nodeType":"Return","src":"8436:21:32"}]},"documentation":{"id":8276,"nodeType":"StructuredDocumentation","src":"7961:280:32","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8303,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:32","nodeType":"FunctionDefinition","parameters":{"id":8279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8278,"mutability":"mutable","name":"value","nameLocation":"8273:5:32","nodeType":"VariableDeclaration","scope":8303,"src":"8265:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8277,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:32"},"returnParameters":{"id":8282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8303,"src":"8303:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8280,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:32","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:32"},"scope":9649,"src":"8246:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8330,"nodeType":"Block","src":"8821:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"8835:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8313,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:32","memberName":"max","nodeType":"MemberAccess","src":"8843:17:32","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8324,"nodeType":"IfStatement","src":"8831:105:32","trueBody":{"id":8323,"nodeType":"Block","src":"8862:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:32","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"8919:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"8883:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8322,"nodeType":"RevertStatement","src":"8876:49:32"}]}},{"expression":{"arguments":[{"id":8327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"8960:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8325,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:32","typeDescriptions":{}}},"id":8328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8310,"id":8329,"nodeType":"Return","src":"8945:21:32"}]},"documentation":{"id":8304,"nodeType":"StructuredDocumentation","src":"8470:280:32","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8331,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:32","nodeType":"FunctionDefinition","parameters":{"id":8307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8306,"mutability":"mutable","name":"value","nameLocation":"8782:5:32","nodeType":"VariableDeclaration","scope":8331,"src":"8774:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8305,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:32"},"returnParameters":{"id":8310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8331,"src":"8812:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8308,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:32","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:32"},"scope":9649,"src":"8755:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8358,"nodeType":"Block","src":"9330:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"9344:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8341,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:32","memberName":"max","nodeType":"MemberAccess","src":"9352:17:32","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8352,"nodeType":"IfStatement","src":"9340:105:32","trueBody":{"id":8351,"nodeType":"Block","src":"9371:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:32","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"9428:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8346,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"9392:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8350,"nodeType":"RevertStatement","src":"9385:49:32"}]}},{"expression":{"arguments":[{"id":8355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"9469:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8353,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:32","typeDescriptions":{}}},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8338,"id":8357,"nodeType":"Return","src":"9454:21:32"}]},"documentation":{"id":8332,"nodeType":"StructuredDocumentation","src":"8979:280:32","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8359,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:32","nodeType":"FunctionDefinition","parameters":{"id":8335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8334,"mutability":"mutable","name":"value","nameLocation":"9291:5:32","nodeType":"VariableDeclaration","scope":8359,"src":"9283:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8333,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:32"},"returnParameters":{"id":8338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8359,"src":"9321:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8336,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:32","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:32"},"scope":9649,"src":"9264:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8386,"nodeType":"Block","src":"9839:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"9853:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8369,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:32","memberName":"max","nodeType":"MemberAccess","src":"9861:17:32","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8380,"nodeType":"IfStatement","src":"9849:105:32","trueBody":{"id":8379,"nodeType":"Block","src":"9880:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:32","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"9937:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8374,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"9901:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8378,"nodeType":"RevertStatement","src":"9894:49:32"}]}},{"expression":{"arguments":[{"id":8383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8362,"src":"9978:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8381,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:32","typeDescriptions":{}}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8366,"id":8385,"nodeType":"Return","src":"9963:21:32"}]},"documentation":{"id":8360,"nodeType":"StructuredDocumentation","src":"9488:280:32","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8387,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:32","nodeType":"FunctionDefinition","parameters":{"id":8363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8362,"mutability":"mutable","name":"value","nameLocation":"9800:5:32","nodeType":"VariableDeclaration","scope":8387,"src":"9792:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8361,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:32"},"returnParameters":{"id":8366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8387,"src":"9830:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8364,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:32","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:32"},"scope":9649,"src":"9773:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8414,"nodeType":"Block","src":"10348:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"10362:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8397,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8396,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:32","memberName":"max","nodeType":"MemberAccess","src":"10370:17:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8408,"nodeType":"IfStatement","src":"10358:105:32","trueBody":{"id":8407,"nodeType":"Block","src":"10389:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:32","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"10446:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8402,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"10410:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8406,"nodeType":"RevertStatement","src":"10403:49:32"}]}},{"expression":{"arguments":[{"id":8411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"10487:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8409,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:32","typeDescriptions":{}}},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8394,"id":8413,"nodeType":"Return","src":"10472:21:32"}]},"documentation":{"id":8388,"nodeType":"StructuredDocumentation","src":"9997:280:32","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8415,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:32","nodeType":"FunctionDefinition","parameters":{"id":8391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8390,"mutability":"mutable","name":"value","nameLocation":"10309:5:32","nodeType":"VariableDeclaration","scope":8415,"src":"10301:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8389,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:32"},"returnParameters":{"id":8394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8415,"src":"10339:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8392,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:32"},"scope":9649,"src":"10282:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8442,"nodeType":"Block","src":"10857:152:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"10871:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8425,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:32","memberName":"max","nodeType":"MemberAccess","src":"10879:17:32","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8436,"nodeType":"IfStatement","src":"10867:105:32","trueBody":{"id":8435,"nodeType":"Block","src":"10898:74:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:32","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"10955:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8430,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"10919:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8434,"nodeType":"RevertStatement","src":"10912:49:32"}]}},{"expression":{"arguments":[{"id":8439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"10996:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8437,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:32","typeDescriptions":{}}},"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8422,"id":8441,"nodeType":"Return","src":"10981:21:32"}]},"documentation":{"id":8416,"nodeType":"StructuredDocumentation","src":"10506:280:32","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8443,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:32","nodeType":"FunctionDefinition","parameters":{"id":8419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8418,"mutability":"mutable","name":"value","nameLocation":"10818:5:32","nodeType":"VariableDeclaration","scope":8443,"src":"10810:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8417,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:32"},"returnParameters":{"id":8422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8443,"src":"10848:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8420,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:32","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:32"},"scope":9649,"src":"10791:218:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8470,"nodeType":"Block","src":"11360:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"11374:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8453,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:32","memberName":"max","nodeType":"MemberAccess","src":"11382:16:32","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8464,"nodeType":"IfStatement","src":"11370:103:32","trueBody":{"id":8463,"nodeType":"Block","src":"11400:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:32","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"11456:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8458,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"11421:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8462,"nodeType":"RevertStatement","src":"11414:48:32"}]}},{"expression":{"arguments":[{"id":8467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"11496:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8465,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:32","typeDescriptions":{}}},"id":8468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8450,"id":8469,"nodeType":"Return","src":"11482:20:32"}]},"documentation":{"id":8444,"nodeType":"StructuredDocumentation","src":"11015:276:32","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8471,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:32","nodeType":"FunctionDefinition","parameters":{"id":8447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8446,"mutability":"mutable","name":"value","nameLocation":"11322:5:32","nodeType":"VariableDeclaration","scope":8471,"src":"11314:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8445,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:32"},"returnParameters":{"id":8450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8471,"src":"11352:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8448,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:32","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:32"},"scope":9649,"src":"11296:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8498,"nodeType":"Block","src":"11860:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"11874:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8481,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:32","memberName":"max","nodeType":"MemberAccess","src":"11882:16:32","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8492,"nodeType":"IfStatement","src":"11870:103:32","trueBody":{"id":8491,"nodeType":"Block","src":"11900:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:32","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"11956:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8486,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"11921:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8490,"nodeType":"RevertStatement","src":"11914:48:32"}]}},{"expression":{"arguments":[{"id":8495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8474,"src":"11996:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8493,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:32","typeDescriptions":{}}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8478,"id":8497,"nodeType":"Return","src":"11982:20:32"}]},"documentation":{"id":8472,"nodeType":"StructuredDocumentation","src":"11515:276:32","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:32","nodeType":"FunctionDefinition","parameters":{"id":8475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8474,"mutability":"mutable","name":"value","nameLocation":"11822:5:32","nodeType":"VariableDeclaration","scope":8499,"src":"11814:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8473,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:32"},"returnParameters":{"id":8478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8499,"src":"11852:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8476,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:32","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:32"},"scope":9649,"src":"11796:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8526,"nodeType":"Block","src":"12360:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"12374:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8509,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:32","memberName":"max","nodeType":"MemberAccess","src":"12382:16:32","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8520,"nodeType":"IfStatement","src":"12370:103:32","trueBody":{"id":8519,"nodeType":"Block","src":"12400:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:32","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"12456:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8514,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"12421:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8518,"nodeType":"RevertStatement","src":"12414:48:32"}]}},{"expression":{"arguments":[{"id":8523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"12496:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8521,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:32","typeDescriptions":{}}},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8506,"id":8525,"nodeType":"Return","src":"12482:20:32"}]},"documentation":{"id":8500,"nodeType":"StructuredDocumentation","src":"12015:276:32","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:32","nodeType":"FunctionDefinition","parameters":{"id":8503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8502,"mutability":"mutable","name":"value","nameLocation":"12322:5:32","nodeType":"VariableDeclaration","scope":8527,"src":"12314:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8501,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:32"},"returnParameters":{"id":8506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8527,"src":"12352:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8504,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:32","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:32"},"scope":9649,"src":"12296:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8554,"nodeType":"Block","src":"12860:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8530,"src":"12874:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8537,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:32","memberName":"max","nodeType":"MemberAccess","src":"12882:16:32","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8548,"nodeType":"IfStatement","src":"12870:103:32","trueBody":{"id":8547,"nodeType":"Block","src":"12900:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:32","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8530,"src":"12956:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8542,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"12921:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8546,"nodeType":"RevertStatement","src":"12914:48:32"}]}},{"expression":{"arguments":[{"id":8551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8530,"src":"12996:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8549,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:32","typeDescriptions":{}}},"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8534,"id":8553,"nodeType":"Return","src":"12982:20:32"}]},"documentation":{"id":8528,"nodeType":"StructuredDocumentation","src":"12515:276:32","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8555,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:32","nodeType":"FunctionDefinition","parameters":{"id":8531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8530,"mutability":"mutable","name":"value","nameLocation":"12822:5:32","nodeType":"VariableDeclaration","scope":8555,"src":"12814:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8529,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:32"},"returnParameters":{"id":8534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8555,"src":"12852:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8532,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:32","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:32"},"scope":9649,"src":"12796:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8582,"nodeType":"Block","src":"13360:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"13374:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8565,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8564,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:32","memberName":"max","nodeType":"MemberAccess","src":"13382:16:32","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8576,"nodeType":"IfStatement","src":"13370:103:32","trueBody":{"id":8575,"nodeType":"Block","src":"13400:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"13456:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8570,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"13421:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8574,"nodeType":"RevertStatement","src":"13414:48:32"}]}},{"expression":{"arguments":[{"id":8579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"13496:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8577,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:32","typeDescriptions":{}}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8562,"id":8581,"nodeType":"Return","src":"13482:20:32"}]},"documentation":{"id":8556,"nodeType":"StructuredDocumentation","src":"13015:276:32","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8583,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:32","nodeType":"FunctionDefinition","parameters":{"id":8559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8558,"mutability":"mutable","name":"value","nameLocation":"13322:5:32","nodeType":"VariableDeclaration","scope":8583,"src":"13314:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8557,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:32"},"returnParameters":{"id":8562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8583,"src":"13352:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8560,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:32","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:32"},"scope":9649,"src":"13296:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8610,"nodeType":"Block","src":"13860:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"13874:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8593,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:32","memberName":"max","nodeType":"MemberAccess","src":"13882:16:32","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8604,"nodeType":"IfStatement","src":"13870:103:32","trueBody":{"id":8603,"nodeType":"Block","src":"13900:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:32","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"13956:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8598,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"13921:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8602,"nodeType":"RevertStatement","src":"13914:48:32"}]}},{"expression":{"arguments":[{"id":8607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"13996:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8605,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:32","typeDescriptions":{}}},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8590,"id":8609,"nodeType":"Return","src":"13982:20:32"}]},"documentation":{"id":8584,"nodeType":"StructuredDocumentation","src":"13515:276:32","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8611,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:32","nodeType":"FunctionDefinition","parameters":{"id":8587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8586,"mutability":"mutable","name":"value","nameLocation":"13822:5:32","nodeType":"VariableDeclaration","scope":8611,"src":"13814:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8585,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:32"},"returnParameters":{"id":8590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8611,"src":"13852:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8588,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:32","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:32"},"scope":9649,"src":"13796:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8638,"nodeType":"Block","src":"14360:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"14374:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8621,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:32","memberName":"max","nodeType":"MemberAccess","src":"14382:16:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8632,"nodeType":"IfStatement","src":"14370:103:32","trueBody":{"id":8631,"nodeType":"Block","src":"14400:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:32","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"14456:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8626,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"14421:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8630,"nodeType":"RevertStatement","src":"14414:48:32"}]}},{"expression":{"arguments":[{"id":8635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"14496:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8633,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:32","typeDescriptions":{}}},"id":8636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8618,"id":8637,"nodeType":"Return","src":"14482:20:32"}]},"documentation":{"id":8612,"nodeType":"StructuredDocumentation","src":"14015:276:32","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8639,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:32","nodeType":"FunctionDefinition","parameters":{"id":8615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8614,"mutability":"mutable","name":"value","nameLocation":"14322:5:32","nodeType":"VariableDeclaration","scope":8639,"src":"14314:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8613,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:32"},"returnParameters":{"id":8618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8639,"src":"14352:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8616,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:32"},"scope":9649,"src":"14296:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8666,"nodeType":"Block","src":"14860:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"14874:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8649,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:32","memberName":"max","nodeType":"MemberAccess","src":"14882:16:32","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8660,"nodeType":"IfStatement","src":"14870:103:32","trueBody":{"id":8659,"nodeType":"Block","src":"14900:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:32","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"14956:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8654,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"14921:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8658,"nodeType":"RevertStatement","src":"14914:48:32"}]}},{"expression":{"arguments":[{"id":8663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"14996:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8661,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:32","typeDescriptions":{}}},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8646,"id":8665,"nodeType":"Return","src":"14982:20:32"}]},"documentation":{"id":8640,"nodeType":"StructuredDocumentation","src":"14515:276:32","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:32","nodeType":"FunctionDefinition","parameters":{"id":8643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8642,"mutability":"mutable","name":"value","nameLocation":"14822:5:32","nodeType":"VariableDeclaration","scope":8667,"src":"14814:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8641,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:32"},"returnParameters":{"id":8646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8667,"src":"14852:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8644,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:32","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:32"},"scope":9649,"src":"14796:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8694,"nodeType":"Block","src":"15360:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8670,"src":"15374:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8677,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:32","memberName":"max","nodeType":"MemberAccess","src":"15382:16:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8688,"nodeType":"IfStatement","src":"15370:103:32","trueBody":{"id":8687,"nodeType":"Block","src":"15400:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8670,"src":"15456:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8682,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"15421:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8686,"nodeType":"RevertStatement","src":"15414:48:32"}]}},{"expression":{"arguments":[{"id":8691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8670,"src":"15496:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8689,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:32","typeDescriptions":{}}},"id":8692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8674,"id":8693,"nodeType":"Return","src":"15482:20:32"}]},"documentation":{"id":8668,"nodeType":"StructuredDocumentation","src":"15015:276:32","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:32","nodeType":"FunctionDefinition","parameters":{"id":8671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8670,"mutability":"mutable","name":"value","nameLocation":"15322:5:32","nodeType":"VariableDeclaration","scope":8695,"src":"15314:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8669,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:32"},"returnParameters":{"id":8674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8695,"src":"15352:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8672,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:32"},"scope":9649,"src":"15296:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8722,"nodeType":"Block","src":"15860:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"15874:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8705,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:32","memberName":"max","nodeType":"MemberAccess","src":"15882:16:32","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8716,"nodeType":"IfStatement","src":"15870:103:32","trueBody":{"id":8715,"nodeType":"Block","src":"15900:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:32","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"15956:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"15921:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8714,"nodeType":"RevertStatement","src":"15914:48:32"}]}},{"expression":{"arguments":[{"id":8719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"15996:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8717,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:32","typeDescriptions":{}}},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8702,"id":8721,"nodeType":"Return","src":"15982:20:32"}]},"documentation":{"id":8696,"nodeType":"StructuredDocumentation","src":"15515:276:32","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:32","nodeType":"FunctionDefinition","parameters":{"id":8699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8698,"mutability":"mutable","name":"value","nameLocation":"15822:5:32","nodeType":"VariableDeclaration","scope":8723,"src":"15814:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8697,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:32"},"returnParameters":{"id":8702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8723,"src":"15852:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8700,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:32","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:32"},"scope":9649,"src":"15796:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8750,"nodeType":"Block","src":"16360:149:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8726,"src":"16374:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8733,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:32","memberName":"max","nodeType":"MemberAccess","src":"16382:16:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8744,"nodeType":"IfStatement","src":"16370:103:32","trueBody":{"id":8743,"nodeType":"Block","src":"16400:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8726,"src":"16456:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"16421:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8742,"nodeType":"RevertStatement","src":"16414:48:32"}]}},{"expression":{"arguments":[{"id":8747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8726,"src":"16496:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8745,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:32","typeDescriptions":{}}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8730,"id":8749,"nodeType":"Return","src":"16482:20:32"}]},"documentation":{"id":8724,"nodeType":"StructuredDocumentation","src":"16015:276:32","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:32","nodeType":"FunctionDefinition","parameters":{"id":8727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8726,"mutability":"mutable","name":"value","nameLocation":"16322:5:32","nodeType":"VariableDeclaration","scope":8751,"src":"16314:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8725,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:32"},"returnParameters":{"id":8730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8751,"src":"16352:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8728,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:32"},"scope":9649,"src":"16296:213:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8778,"nodeType":"Block","src":"16854:146:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"16868:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8761,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:32","memberName":"max","nodeType":"MemberAccess","src":"16876:15:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8772,"nodeType":"IfStatement","src":"16864:101:32","trueBody":{"id":8771,"nodeType":"Block","src":"16893:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"16948:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"16914:30:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8770,"nodeType":"RevertStatement","src":"16907:47:32"}]}},{"expression":{"arguments":[{"id":8775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"16987:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8773,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:32","typeDescriptions":{}}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8758,"id":8777,"nodeType":"Return","src":"16974:19:32"}]},"documentation":{"id":8752,"nodeType":"StructuredDocumentation","src":"16515:272:32","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:32","nodeType":"FunctionDefinition","parameters":{"id":8755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8754,"mutability":"mutable","name":"value","nameLocation":"16817:5:32","nodeType":"VariableDeclaration","scope":8779,"src":"16809:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8753,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:32"},"returnParameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8779,"src":"16847:5:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8756,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:32"},"scope":9649,"src":"16792:208:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8801,"nodeType":"Block","src":"17236:128:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"17250:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8795,"nodeType":"IfStatement","src":"17246:81:32","trueBody":{"id":8794,"nodeType":"Block","src":"17261:66:32","statements":[{"errorCall":{"arguments":[{"id":8791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"17310:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8790,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"17282:27:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8793,"nodeType":"RevertStatement","src":"17275:41:32"}]}},{"expression":{"arguments":[{"id":8798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"17351:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8796,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:32","typeDescriptions":{}}},"id":8799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8786,"id":8800,"nodeType":"Return","src":"17336:21:32"}]},"documentation":{"id":8780,"nodeType":"StructuredDocumentation","src":"17006:160:32","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:32","nodeType":"FunctionDefinition","parameters":{"id":8783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8782,"mutability":"mutable","name":"value","nameLocation":"17197:5:32","nodeType":"VariableDeclaration","scope":8802,"src":"17190:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8781,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:32"},"returnParameters":{"id":8786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8802,"src":"17227:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8784,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:32"},"scope":9649,"src":"17171:193:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8827,"nodeType":"Block","src":"17761:150:32","statements":[{"expression":{"id":8815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"17771:10:32","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"17791:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8811,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:32","typeDescriptions":{}}},"id":8814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:32","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8816,"nodeType":"ExpressionStatement","src":"17771:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"17811:10:32","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"17825:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8826,"nodeType":"IfStatement","src":"17807:98:32","trueBody":{"id":8825,"nodeType":"Block","src":"17832:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:32","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"17888:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"17853:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8824,"nodeType":"RevertStatement","src":"17846:48:32"}]}}]},"documentation":{"id":8803,"nodeType":"StructuredDocumentation","src":"17370:312:32","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:32","nodeType":"FunctionDefinition","parameters":{"id":8806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8805,"mutability":"mutable","name":"value","nameLocation":"17712:5:32","nodeType":"VariableDeclaration","scope":8828,"src":"17705:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8804,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:32"},"returnParameters":{"id":8809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8808,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:32","nodeType":"VariableDeclaration","scope":8828,"src":"17742:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8807,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:32","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:32"},"scope":9649,"src":"17687:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8853,"nodeType":"Block","src":"18308:150:32","statements":[{"expression":{"id":8841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"18318:10:32","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"18338:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8837,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:32","typeDescriptions":{}}},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:32","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8842,"nodeType":"ExpressionStatement","src":"18318:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"18358:10:32","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"18372:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8852,"nodeType":"IfStatement","src":"18354:98:32","trueBody":{"id":8851,"nodeType":"Block","src":"18379:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:32","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"18435:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"18400:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8850,"nodeType":"RevertStatement","src":"18393:48:32"}]}}]},"documentation":{"id":8829,"nodeType":"StructuredDocumentation","src":"17917:312:32","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:32","nodeType":"FunctionDefinition","parameters":{"id":8832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8831,"mutability":"mutable","name":"value","nameLocation":"18259:5:32","nodeType":"VariableDeclaration","scope":8854,"src":"18252:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8830,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:32"},"returnParameters":{"id":8835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8834,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:32","nodeType":"VariableDeclaration","scope":8854,"src":"18289:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8833,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:32","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:32"},"scope":9649,"src":"18234:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8879,"nodeType":"Block","src":"18855:150:32","statements":[{"expression":{"id":8867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"18865:10:32","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8857,"src":"18885:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8863,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:32","typeDescriptions":{}}},"id":8866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:32","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8868,"nodeType":"ExpressionStatement","src":"18865:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"18905:10:32","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8857,"src":"18919:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8878,"nodeType":"IfStatement","src":"18901:98:32","trueBody":{"id":8877,"nodeType":"Block","src":"18926:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:32","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8857,"src":"18982:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"18947:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8876,"nodeType":"RevertStatement","src":"18940:48:32"}]}}]},"documentation":{"id":8855,"nodeType":"StructuredDocumentation","src":"18464:312:32","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:32","nodeType":"FunctionDefinition","parameters":{"id":8858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8857,"mutability":"mutable","name":"value","nameLocation":"18806:5:32","nodeType":"VariableDeclaration","scope":8880,"src":"18799:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8856,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:32"},"returnParameters":{"id":8861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8860,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:32","nodeType":"VariableDeclaration","scope":8880,"src":"18836:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8859,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:32","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:32"},"scope":9649,"src":"18781:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8905,"nodeType":"Block","src":"19402:150:32","statements":[{"expression":{"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"19412:10:32","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"19432:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8889,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:32","typeDescriptions":{}}},"id":8892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:32","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8894,"nodeType":"ExpressionStatement","src":"19412:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"19452:10:32","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"19466:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8904,"nodeType":"IfStatement","src":"19448:98:32","trueBody":{"id":8903,"nodeType":"Block","src":"19473:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:32","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"19529:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"19494:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8902,"nodeType":"RevertStatement","src":"19487:48:32"}]}}]},"documentation":{"id":8881,"nodeType":"StructuredDocumentation","src":"19011:312:32","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:32","nodeType":"FunctionDefinition","parameters":{"id":8884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8883,"mutability":"mutable","name":"value","nameLocation":"19353:5:32","nodeType":"VariableDeclaration","scope":8906,"src":"19346:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8882,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:32"},"returnParameters":{"id":8887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8886,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:32","nodeType":"VariableDeclaration","scope":8906,"src":"19383:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8885,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:32","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:32"},"scope":9649,"src":"19328:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8931,"nodeType":"Block","src":"19949:150:32","statements":[{"expression":{"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"19959:10:32","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8909,"src":"19979:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8915,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:32","typeDescriptions":{}}},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:32","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8920,"nodeType":"ExpressionStatement","src":"19959:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"19999:10:32","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8909,"src":"20013:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8930,"nodeType":"IfStatement","src":"19995:98:32","trueBody":{"id":8929,"nodeType":"Block","src":"20020:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:32","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8909,"src":"20076:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8924,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"20041:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8928,"nodeType":"RevertStatement","src":"20034:48:32"}]}}]},"documentation":{"id":8907,"nodeType":"StructuredDocumentation","src":"19558:312:32","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8932,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:32","nodeType":"FunctionDefinition","parameters":{"id":8910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8909,"mutability":"mutable","name":"value","nameLocation":"19900:5:32","nodeType":"VariableDeclaration","scope":8932,"src":"19893:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8908,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:32"},"returnParameters":{"id":8913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8912,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:32","nodeType":"VariableDeclaration","scope":8932,"src":"19930:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8911,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:32","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:32"},"scope":9649,"src":"19875:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8957,"nodeType":"Block","src":"20496:150:32","statements":[{"expression":{"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"20506:10:32","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"20526:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8941,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:32","typeDescriptions":{}}},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:32","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8946,"nodeType":"ExpressionStatement","src":"20506:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"20546:10:32","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"20560:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8956,"nodeType":"IfStatement","src":"20542:98:32","trueBody":{"id":8955,"nodeType":"Block","src":"20567:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:32","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"20623:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8950,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"20588:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8954,"nodeType":"RevertStatement","src":"20581:48:32"}]}}]},"documentation":{"id":8933,"nodeType":"StructuredDocumentation","src":"20105:312:32","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8958,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:32","nodeType":"FunctionDefinition","parameters":{"id":8936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8935,"mutability":"mutable","name":"value","nameLocation":"20447:5:32","nodeType":"VariableDeclaration","scope":8958,"src":"20440:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8934,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:32"},"returnParameters":{"id":8939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8938,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:32","nodeType":"VariableDeclaration","scope":8958,"src":"20477:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8937,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:32","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:32"},"scope":9649,"src":"20422:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8983,"nodeType":"Block","src":"21043:150:32","statements":[{"expression":{"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8964,"src":"21053:10:32","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"21073:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8967,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:32","typeDescriptions":{}}},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:32","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8972,"nodeType":"ExpressionStatement","src":"21053:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8964,"src":"21093:10:32","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"21107:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8982,"nodeType":"IfStatement","src":"21089:98:32","trueBody":{"id":8981,"nodeType":"Block","src":"21114:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:32","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"21170:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8976,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"21135:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8980,"nodeType":"RevertStatement","src":"21128:48:32"}]}}]},"documentation":{"id":8959,"nodeType":"StructuredDocumentation","src":"20652:312:32","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:32","nodeType":"FunctionDefinition","parameters":{"id":8962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8961,"mutability":"mutable","name":"value","nameLocation":"20994:5:32","nodeType":"VariableDeclaration","scope":8984,"src":"20987:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8960,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:32"},"returnParameters":{"id":8965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8964,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:32","nodeType":"VariableDeclaration","scope":8984,"src":"21024:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8963,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:32","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:32"},"scope":9649,"src":"20969:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9009,"nodeType":"Block","src":"21590:150:32","statements":[{"expression":{"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"21600:10:32","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"21620:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8993,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:32","typeDescriptions":{}}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:32","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8998,"nodeType":"ExpressionStatement","src":"21600:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"21640:10:32","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"21654:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9008,"nodeType":"IfStatement","src":"21636:98:32","trueBody":{"id":9007,"nodeType":"Block","src":"21661:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":9003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:32","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":9004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"21717:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9002,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"21682:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9006,"nodeType":"RevertStatement","src":"21675:48:32"}]}}]},"documentation":{"id":8985,"nodeType":"StructuredDocumentation","src":"21199:312:32","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":9010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:32","nodeType":"FunctionDefinition","parameters":{"id":8988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8987,"mutability":"mutable","name":"value","nameLocation":"21541:5:32","nodeType":"VariableDeclaration","scope":9010,"src":"21534:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8986,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:32"},"returnParameters":{"id":8991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8990,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:32","nodeType":"VariableDeclaration","scope":9010,"src":"21571:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8989,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:32","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:32"},"scope":9649,"src":"21516:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9035,"nodeType":"Block","src":"22137:150:32","statements":[{"expression":{"id":9023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"22147:10:32","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"22167:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":9019,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:32","typeDescriptions":{}}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:32","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":9024,"nodeType":"ExpressionStatement","src":"22147:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"22187:10:32","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"22201:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9034,"nodeType":"IfStatement","src":"22183:98:32","trueBody":{"id":9033,"nodeType":"Block","src":"22208:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":9029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:32","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":9030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"22264:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9028,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"22229:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9032,"nodeType":"RevertStatement","src":"22222:48:32"}]}}]},"documentation":{"id":9011,"nodeType":"StructuredDocumentation","src":"21746:312:32","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":9036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:32","nodeType":"FunctionDefinition","parameters":{"id":9014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9013,"mutability":"mutable","name":"value","nameLocation":"22088:5:32","nodeType":"VariableDeclaration","scope":9036,"src":"22081:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9012,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:32"},"returnParameters":{"id":9017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9016,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:32","nodeType":"VariableDeclaration","scope":9036,"src":"22118:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":9015,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:32","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:32"},"scope":9649,"src":"22063:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9061,"nodeType":"Block","src":"22684:150:32","statements":[{"expression":{"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"22694:10:32","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9039,"src":"22714:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":9045,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:32","typeDescriptions":{}}},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:32","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":9050,"nodeType":"ExpressionStatement","src":"22694:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"22734:10:32","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9039,"src":"22748:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9060,"nodeType":"IfStatement","src":"22730:98:32","trueBody":{"id":9059,"nodeType":"Block","src":"22755:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":9055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:32","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":9056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9039,"src":"22811:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9054,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"22776:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9058,"nodeType":"RevertStatement","src":"22769:48:32"}]}}]},"documentation":{"id":9037,"nodeType":"StructuredDocumentation","src":"22293:312:32","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":9062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:32","nodeType":"FunctionDefinition","parameters":{"id":9040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9039,"mutability":"mutable","name":"value","nameLocation":"22635:5:32","nodeType":"VariableDeclaration","scope":9062,"src":"22628:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9038,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:32"},"returnParameters":{"id":9043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9042,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:32","nodeType":"VariableDeclaration","scope":9062,"src":"22665:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":9041,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:32","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:32"},"scope":9649,"src":"22610:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9087,"nodeType":"Block","src":"23231:150:32","statements":[{"expression":{"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"23241:10:32","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"23261:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":9071,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:32","typeDescriptions":{}}},"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:32","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":9076,"nodeType":"ExpressionStatement","src":"23241:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"23281:10:32","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"23295:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9086,"nodeType":"IfStatement","src":"23277:98:32","trueBody":{"id":9085,"nodeType":"Block","src":"23302:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":9081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:32","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":9082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"23358:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9080,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"23323:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9084,"nodeType":"RevertStatement","src":"23316:48:32"}]}}]},"documentation":{"id":9063,"nodeType":"StructuredDocumentation","src":"22840:312:32","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":9088,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:32","nodeType":"FunctionDefinition","parameters":{"id":9066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9065,"mutability":"mutable","name":"value","nameLocation":"23182:5:32","nodeType":"VariableDeclaration","scope":9088,"src":"23175:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9064,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:32"},"returnParameters":{"id":9069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9068,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:32","nodeType":"VariableDeclaration","scope":9088,"src":"23212:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":9067,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:32","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:32"},"scope":9649,"src":"23157:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9113,"nodeType":"Block","src":"23778:150:32","statements":[{"expression":{"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"23788:10:32","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9091,"src":"23808:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":9097,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:32","typeDescriptions":{}}},"id":9100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:32","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":9102,"nodeType":"ExpressionStatement","src":"23788:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"23828:10:32","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9091,"src":"23842:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9112,"nodeType":"IfStatement","src":"23824:98:32","trueBody":{"id":9111,"nodeType":"Block","src":"23849:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":9107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:32","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":9108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9091,"src":"23905:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9106,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"23870:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9110,"nodeType":"RevertStatement","src":"23863:48:32"}]}}]},"documentation":{"id":9089,"nodeType":"StructuredDocumentation","src":"23387:312:32","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":9114,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:32","nodeType":"FunctionDefinition","parameters":{"id":9092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9091,"mutability":"mutable","name":"value","nameLocation":"23729:5:32","nodeType":"VariableDeclaration","scope":9114,"src":"23722:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9090,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:32"},"returnParameters":{"id":9095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9094,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:32","nodeType":"VariableDeclaration","scope":9114,"src":"23759:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":9093,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:32","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:32"},"scope":9649,"src":"23704:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9139,"nodeType":"Block","src":"24325:150:32","statements":[{"expression":{"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"24335:10:32","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"24355:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":9123,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:32","typeDescriptions":{}}},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:32","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":9128,"nodeType":"ExpressionStatement","src":"24335:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"24375:10:32","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"24389:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9138,"nodeType":"IfStatement","src":"24371:98:32","trueBody":{"id":9137,"nodeType":"Block","src":"24396:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":9133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:32","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":9134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"24452:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9132,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"24417:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9136,"nodeType":"RevertStatement","src":"24410:48:32"}]}}]},"documentation":{"id":9115,"nodeType":"StructuredDocumentation","src":"23934:312:32","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":9140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:32","nodeType":"FunctionDefinition","parameters":{"id":9118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9117,"mutability":"mutable","name":"value","nameLocation":"24276:5:32","nodeType":"VariableDeclaration","scope":9140,"src":"24269:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9116,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:32"},"returnParameters":{"id":9121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9120,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:32","nodeType":"VariableDeclaration","scope":9140,"src":"24306:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":9119,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:32","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:32"},"scope":9649,"src":"24251:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9165,"nodeType":"Block","src":"24872:150:32","statements":[{"expression":{"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"24882:10:32","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"24902:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":9149,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:32","typeDescriptions":{}}},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:32","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":9154,"nodeType":"ExpressionStatement","src":"24882:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"24922:10:32","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"24936:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9164,"nodeType":"IfStatement","src":"24918:98:32","trueBody":{"id":9163,"nodeType":"Block","src":"24943:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":9159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:32","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":9160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"24999:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9158,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"24964:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9162,"nodeType":"RevertStatement","src":"24957:48:32"}]}}]},"documentation":{"id":9141,"nodeType":"StructuredDocumentation","src":"24481:312:32","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":9166,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:32","nodeType":"FunctionDefinition","parameters":{"id":9144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9143,"mutability":"mutable","name":"value","nameLocation":"24823:5:32","nodeType":"VariableDeclaration","scope":9166,"src":"24816:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9142,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:32"},"returnParameters":{"id":9147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9146,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:32","nodeType":"VariableDeclaration","scope":9166,"src":"24853:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":9145,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:32","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:32"},"scope":9649,"src":"24798:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9191,"nodeType":"Block","src":"25419:150:32","statements":[{"expression":{"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9172,"src":"25429:10:32","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9169,"src":"25449:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":9175,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:32","typeDescriptions":{}}},"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:32","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":9180,"nodeType":"ExpressionStatement","src":"25429:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9172,"src":"25469:10:32","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9169,"src":"25483:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9190,"nodeType":"IfStatement","src":"25465:98:32","trueBody":{"id":9189,"nodeType":"Block","src":"25490:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":9185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:32","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":9186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9169,"src":"25546:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9184,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"25511:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9188,"nodeType":"RevertStatement","src":"25504:48:32"}]}}]},"documentation":{"id":9167,"nodeType":"StructuredDocumentation","src":"25028:312:32","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":9192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:32","nodeType":"FunctionDefinition","parameters":{"id":9170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9169,"mutability":"mutable","name":"value","nameLocation":"25370:5:32","nodeType":"VariableDeclaration","scope":9192,"src":"25363:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9168,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:32"},"returnParameters":{"id":9173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9172,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:32","nodeType":"VariableDeclaration","scope":9192,"src":"25400:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":9171,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:32","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:32"},"scope":9649,"src":"25345:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9217,"nodeType":"Block","src":"25966:150:32","statements":[{"expression":{"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"25976:10:32","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"25996:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9201,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:32","typeDescriptions":{}}},"id":9204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:32","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9206,"nodeType":"ExpressionStatement","src":"25976:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"26016:10:32","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"26030:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9216,"nodeType":"IfStatement","src":"26012:98:32","trueBody":{"id":9215,"nodeType":"Block","src":"26037:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":9211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:32","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":9212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"26093:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9210,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"26058:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9214,"nodeType":"RevertStatement","src":"26051:48:32"}]}}]},"documentation":{"id":9193,"nodeType":"StructuredDocumentation","src":"25575:312:32","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":9218,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:32","nodeType":"FunctionDefinition","parameters":{"id":9196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9195,"mutability":"mutable","name":"value","nameLocation":"25917:5:32","nodeType":"VariableDeclaration","scope":9218,"src":"25910:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9194,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:32"},"returnParameters":{"id":9199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9198,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:32","nodeType":"VariableDeclaration","scope":9218,"src":"25947:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9197,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:32","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:32"},"scope":9649,"src":"25892:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9243,"nodeType":"Block","src":"26513:150:32","statements":[{"expression":{"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"26523:10:32","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"26543:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9227,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:32","typeDescriptions":{}}},"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:32","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9232,"nodeType":"ExpressionStatement","src":"26523:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"26563:10:32","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"26577:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9242,"nodeType":"IfStatement","src":"26559:98:32","trueBody":{"id":9241,"nodeType":"Block","src":"26584:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:32","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"26640:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9236,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"26605:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9240,"nodeType":"RevertStatement","src":"26598:48:32"}]}}]},"documentation":{"id":9219,"nodeType":"StructuredDocumentation","src":"26122:312:32","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:32","nodeType":"FunctionDefinition","parameters":{"id":9222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9221,"mutability":"mutable","name":"value","nameLocation":"26464:5:32","nodeType":"VariableDeclaration","scope":9244,"src":"26457:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9220,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:32"},"returnParameters":{"id":9225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9224,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:32","nodeType":"VariableDeclaration","scope":9244,"src":"26494:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":9223,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:32","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:32"},"scope":9649,"src":"26439:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9269,"nodeType":"Block","src":"27060:150:32","statements":[{"expression":{"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"27070:10:32","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9247,"src":"27090:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9253,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:32","typeDescriptions":{}}},"id":9256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:32","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9258,"nodeType":"ExpressionStatement","src":"27070:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"27110:10:32","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9247,"src":"27124:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9268,"nodeType":"IfStatement","src":"27106:98:32","trueBody":{"id":9267,"nodeType":"Block","src":"27131:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:32","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9247,"src":"27187:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9262,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"27152:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9266,"nodeType":"RevertStatement","src":"27145:48:32"}]}}]},"documentation":{"id":9245,"nodeType":"StructuredDocumentation","src":"26669:312:32","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9270,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:32","nodeType":"FunctionDefinition","parameters":{"id":9248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9247,"mutability":"mutable","name":"value","nameLocation":"27011:5:32","nodeType":"VariableDeclaration","scope":9270,"src":"27004:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9246,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:32"},"returnParameters":{"id":9251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9250,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:32","nodeType":"VariableDeclaration","scope":9270,"src":"27041:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9249,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:32","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:32"},"scope":9649,"src":"26986:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9295,"nodeType":"Block","src":"27607:150:32","statements":[{"expression":{"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9276,"src":"27617:10:32","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9273,"src":"27637:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9279,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:32","typeDescriptions":{}}},"id":9282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:32","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9284,"nodeType":"ExpressionStatement","src":"27617:26:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9276,"src":"27657:10:32","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9273,"src":"27671:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9294,"nodeType":"IfStatement","src":"27653:98:32","trueBody":{"id":9293,"nodeType":"Block","src":"27678:73:32","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:32","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9273,"src":"27734:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"27699:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9292,"nodeType":"RevertStatement","src":"27692:48:32"}]}}]},"documentation":{"id":9271,"nodeType":"StructuredDocumentation","src":"27216:312:32","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:32","nodeType":"FunctionDefinition","parameters":{"id":9274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9273,"mutability":"mutable","name":"value","nameLocation":"27558:5:32","nodeType":"VariableDeclaration","scope":9296,"src":"27551:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9272,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:32"},"returnParameters":{"id":9277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9276,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:32","nodeType":"VariableDeclaration","scope":9296,"src":"27588:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9275,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:32","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:32"},"scope":9649,"src":"27533:224:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9321,"nodeType":"Block","src":"28147:148:32","statements":[{"expression":{"id":9309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"28157:10:32","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9299,"src":"28176:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9305,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:32","typeDescriptions":{}}},"id":9308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:32","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9310,"nodeType":"ExpressionStatement","src":"28157:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"28196:10:32","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9299,"src":"28210:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9320,"nodeType":"IfStatement","src":"28192:97:32","trueBody":{"id":9319,"nodeType":"Block","src":"28217:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:32","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9299,"src":"28272:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"28238:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9318,"nodeType":"RevertStatement","src":"28231:47:32"}]}}]},"documentation":{"id":9297,"nodeType":"StructuredDocumentation","src":"27763:307:32","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:32","nodeType":"FunctionDefinition","parameters":{"id":9300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9299,"mutability":"mutable","name":"value","nameLocation":"28099:5:32","nodeType":"VariableDeclaration","scope":9322,"src":"28092:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9298,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:32"},"returnParameters":{"id":9303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9302,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:32","nodeType":"VariableDeclaration","scope":9322,"src":"28129:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9301,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:32","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:32"},"scope":9649,"src":"28075:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9347,"nodeType":"Block","src":"28685:148:32","statements":[{"expression":{"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"28695:10:32","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"28714:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9331,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:32","typeDescriptions":{}}},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:32","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9336,"nodeType":"ExpressionStatement","src":"28695:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"28734:10:32","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"28748:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9346,"nodeType":"IfStatement","src":"28730:97:32","trueBody":{"id":9345,"nodeType":"Block","src":"28755:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:32","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"28810:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"28776:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9344,"nodeType":"RevertStatement","src":"28769:47:32"}]}}]},"documentation":{"id":9323,"nodeType":"StructuredDocumentation","src":"28301:307:32","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:32","nodeType":"FunctionDefinition","parameters":{"id":9326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9325,"mutability":"mutable","name":"value","nameLocation":"28637:5:32","nodeType":"VariableDeclaration","scope":9348,"src":"28630:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9324,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:32"},"returnParameters":{"id":9329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9328,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:32","nodeType":"VariableDeclaration","scope":9348,"src":"28667:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9327,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:32","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:32"},"scope":9649,"src":"28613:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9373,"nodeType":"Block","src":"29223:148:32","statements":[{"expression":{"id":9361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9354,"src":"29233:10:32","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"29252:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9357,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:32","typeDescriptions":{}}},"id":9360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:32","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9362,"nodeType":"ExpressionStatement","src":"29233:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9354,"src":"29272:10:32","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"29286:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9372,"nodeType":"IfStatement","src":"29268:97:32","trueBody":{"id":9371,"nodeType":"Block","src":"29293:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:32","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"29348:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"29314:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9370,"nodeType":"RevertStatement","src":"29307:47:32"}]}}]},"documentation":{"id":9349,"nodeType":"StructuredDocumentation","src":"28839:307:32","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:32","nodeType":"FunctionDefinition","parameters":{"id":9352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9351,"mutability":"mutable","name":"value","nameLocation":"29175:5:32","nodeType":"VariableDeclaration","scope":9374,"src":"29168:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9350,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:32"},"returnParameters":{"id":9355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9354,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:32","nodeType":"VariableDeclaration","scope":9374,"src":"29205:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9353,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:32","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:32"},"scope":9649,"src":"29151:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9399,"nodeType":"Block","src":"29761:148:32","statements":[{"expression":{"id":9387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9380,"src":"29771:10:32","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"29790:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9383,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:32","typeDescriptions":{}}},"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:32","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9388,"nodeType":"ExpressionStatement","src":"29771:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9380,"src":"29810:10:32","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"29824:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9398,"nodeType":"IfStatement","src":"29806:97:32","trueBody":{"id":9397,"nodeType":"Block","src":"29831:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:32","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"29886:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"29852:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9396,"nodeType":"RevertStatement","src":"29845:47:32"}]}}]},"documentation":{"id":9375,"nodeType":"StructuredDocumentation","src":"29377:307:32","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:32","nodeType":"FunctionDefinition","parameters":{"id":9378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9377,"mutability":"mutable","name":"value","nameLocation":"29713:5:32","nodeType":"VariableDeclaration","scope":9400,"src":"29706:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9376,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:32"},"returnParameters":{"id":9381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9380,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:32","nodeType":"VariableDeclaration","scope":9400,"src":"29743:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9379,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:32","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:32"},"scope":9649,"src":"29689:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9425,"nodeType":"Block","src":"30299:148:32","statements":[{"expression":{"id":9413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"30309:10:32","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"30328:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9409,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:32","typeDescriptions":{}}},"id":9412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:32","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9414,"nodeType":"ExpressionStatement","src":"30309:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"30348:10:32","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"30362:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9424,"nodeType":"IfStatement","src":"30344:97:32","trueBody":{"id":9423,"nodeType":"Block","src":"30369:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"30424:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"30390:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9422,"nodeType":"RevertStatement","src":"30383:47:32"}]}}]},"documentation":{"id":9401,"nodeType":"StructuredDocumentation","src":"29915:307:32","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:32","nodeType":"FunctionDefinition","parameters":{"id":9404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9403,"mutability":"mutable","name":"value","nameLocation":"30251:5:32","nodeType":"VariableDeclaration","scope":9426,"src":"30244:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9402,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:32"},"returnParameters":{"id":9407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9406,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:32","nodeType":"VariableDeclaration","scope":9426,"src":"30281:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9405,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:32","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:32"},"scope":9649,"src":"30227:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9451,"nodeType":"Block","src":"30837:148:32","statements":[{"expression":{"id":9439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"30847:10:32","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"30866:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9435,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:32","typeDescriptions":{}}},"id":9438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:32","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9440,"nodeType":"ExpressionStatement","src":"30847:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"30886:10:32","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"30900:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9450,"nodeType":"IfStatement","src":"30882:97:32","trueBody":{"id":9449,"nodeType":"Block","src":"30907:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:32","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9429,"src":"30962:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"30928:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9448,"nodeType":"RevertStatement","src":"30921:47:32"}]}}]},"documentation":{"id":9427,"nodeType":"StructuredDocumentation","src":"30453:307:32","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:32","nodeType":"FunctionDefinition","parameters":{"id":9430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9429,"mutability":"mutable","name":"value","nameLocation":"30789:5:32","nodeType":"VariableDeclaration","scope":9452,"src":"30782:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9428,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:32"},"returnParameters":{"id":9433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9432,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:32","nodeType":"VariableDeclaration","scope":9452,"src":"30819:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9431,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:32","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:32"},"scope":9649,"src":"30765:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9477,"nodeType":"Block","src":"31375:148:32","statements":[{"expression":{"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9458,"src":"31385:10:32","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9455,"src":"31404:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9461,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:32","typeDescriptions":{}}},"id":9464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:32","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9466,"nodeType":"ExpressionStatement","src":"31385:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9458,"src":"31424:10:32","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9455,"src":"31438:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9476,"nodeType":"IfStatement","src":"31420:97:32","trueBody":{"id":9475,"nodeType":"Block","src":"31445:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:32","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9455,"src":"31500:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"31466:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9474,"nodeType":"RevertStatement","src":"31459:47:32"}]}}]},"documentation":{"id":9453,"nodeType":"StructuredDocumentation","src":"30991:307:32","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:32","nodeType":"FunctionDefinition","parameters":{"id":9456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9455,"mutability":"mutable","name":"value","nameLocation":"31327:5:32","nodeType":"VariableDeclaration","scope":9478,"src":"31320:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9454,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:32"},"returnParameters":{"id":9459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9458,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:32","nodeType":"VariableDeclaration","scope":9478,"src":"31357:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9457,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:32","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:32"},"scope":9649,"src":"31303:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9503,"nodeType":"Block","src":"31913:148:32","statements":[{"expression":{"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"31923:10:32","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"31942:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9487,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:32","typeDescriptions":{}}},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:32","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9492,"nodeType":"ExpressionStatement","src":"31923:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"31962:10:32","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"31976:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9502,"nodeType":"IfStatement","src":"31958:97:32","trueBody":{"id":9501,"nodeType":"Block","src":"31983:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:32","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"32038:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"32004:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9500,"nodeType":"RevertStatement","src":"31997:47:32"}]}}]},"documentation":{"id":9479,"nodeType":"StructuredDocumentation","src":"31529:307:32","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:32","nodeType":"FunctionDefinition","parameters":{"id":9482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9481,"mutability":"mutable","name":"value","nameLocation":"31865:5:32","nodeType":"VariableDeclaration","scope":9504,"src":"31858:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9480,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:32"},"returnParameters":{"id":9485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9484,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:32","nodeType":"VariableDeclaration","scope":9504,"src":"31895:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9483,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:32","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:32"},"scope":9649,"src":"31841:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9529,"nodeType":"Block","src":"32451:148:32","statements":[{"expression":{"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"32461:10:32","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9507,"src":"32480:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9513,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:32","typeDescriptions":{}}},"id":9516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:32","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9518,"nodeType":"ExpressionStatement","src":"32461:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9510,"src":"32500:10:32","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9507,"src":"32514:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9528,"nodeType":"IfStatement","src":"32496:97:32","trueBody":{"id":9527,"nodeType":"Block","src":"32521:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9507,"src":"32576:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"32542:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9526,"nodeType":"RevertStatement","src":"32535:47:32"}]}}]},"documentation":{"id":9505,"nodeType":"StructuredDocumentation","src":"32067:307:32","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:32","nodeType":"FunctionDefinition","parameters":{"id":9508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9507,"mutability":"mutable","name":"value","nameLocation":"32403:5:32","nodeType":"VariableDeclaration","scope":9530,"src":"32396:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9506,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:32"},"returnParameters":{"id":9511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9510,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:32","nodeType":"VariableDeclaration","scope":9530,"src":"32433:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9509,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:32","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:32"},"scope":9649,"src":"32379:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9555,"nodeType":"Block","src":"32989:148:32","statements":[{"expression":{"id":9543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"32999:10:32","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"33018:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9539,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:32","typeDescriptions":{}}},"id":9542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:32","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9544,"nodeType":"ExpressionStatement","src":"32999:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"33038:10:32","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"33052:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9554,"nodeType":"IfStatement","src":"33034:97:32","trueBody":{"id":9553,"nodeType":"Block","src":"33059:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:32","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9533,"src":"33114:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"33080:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9552,"nodeType":"RevertStatement","src":"33073:47:32"}]}}]},"documentation":{"id":9531,"nodeType":"StructuredDocumentation","src":"32605:307:32","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:32","nodeType":"FunctionDefinition","parameters":{"id":9534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9533,"mutability":"mutable","name":"value","nameLocation":"32941:5:32","nodeType":"VariableDeclaration","scope":9556,"src":"32934:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9532,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:32"},"returnParameters":{"id":9537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9536,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:32","nodeType":"VariableDeclaration","scope":9556,"src":"32971:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9535,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:32","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:32"},"scope":9649,"src":"32917:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9581,"nodeType":"Block","src":"33527:148:32","statements":[{"expression":{"id":9569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"33537:10:32","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9559,"src":"33556:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9565,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:32","typeDescriptions":{}}},"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:32","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9570,"nodeType":"ExpressionStatement","src":"33537:25:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"33576:10:32","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9559,"src":"33590:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9580,"nodeType":"IfStatement","src":"33572:97:32","trueBody":{"id":9579,"nodeType":"Block","src":"33597:72:32","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9559,"src":"33652:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"33618:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9578,"nodeType":"RevertStatement","src":"33611:47:32"}]}}]},"documentation":{"id":9557,"nodeType":"StructuredDocumentation","src":"33143:307:32","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:32","nodeType":"FunctionDefinition","parameters":{"id":9560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9559,"mutability":"mutable","name":"value","nameLocation":"33479:5:32","nodeType":"VariableDeclaration","scope":9582,"src":"33472:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9558,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:32"},"returnParameters":{"id":9563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9562,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:32","nodeType":"VariableDeclaration","scope":9582,"src":"33509:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9561,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:32","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:32"},"scope":9649,"src":"33455:220:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9607,"nodeType":"Block","src":"34058:146:32","statements":[{"expression":{"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"34068:10:32","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9585,"src":"34086:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9591,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:32","typeDescriptions":{}}},"id":9594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:32","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9596,"nodeType":"ExpressionStatement","src":"34068:24:32"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"34106:10:32","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9585,"src":"34120:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9606,"nodeType":"IfStatement","src":"34102:96:32","trueBody":{"id":9605,"nodeType":"Block","src":"34127:71:32","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9585,"src":"34181:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"34148:29:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9604,"nodeType":"RevertStatement","src":"34141:46:32"}]}}]},"documentation":{"id":9583,"nodeType":"StructuredDocumentation","src":"33681:302:32","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:32","nodeType":"FunctionDefinition","parameters":{"id":9586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9585,"mutability":"mutable","name":"value","nameLocation":"34011:5:32","nodeType":"VariableDeclaration","scope":9608,"src":"34004:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9584,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:32"},"returnParameters":{"id":9589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9588,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:32","nodeType":"VariableDeclaration","scope":9608,"src":"34041:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9587,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:32","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:32"},"scope":9649,"src":"33988:216:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9637,"nodeType":"Block","src":"34444:250:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9611,"src":"34557:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9620,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:32","memberName":"max","nodeType":"MemberAccess","src":"34573:16:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9617,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:32","typeDescriptions":{}}},"id":9624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9631,"nodeType":"IfStatement","src":"34553:105:32","trueBody":{"id":9630,"nodeType":"Block","src":"34592:66:32","statements":[{"errorCall":{"arguments":[{"id":9627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9611,"src":"34641:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9626,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"34613:27:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":9628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9629,"nodeType":"RevertStatement","src":"34606:41:32"}]}},{"expression":{"arguments":[{"id":9634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9611,"src":"34681:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9632,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:32","typeDescriptions":{}}},"id":9635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9615,"id":9636,"nodeType":"Return","src":"34667:20:32"}]},"documentation":{"id":9609,"nodeType":"StructuredDocumentation","src":"34210:165:32","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9638,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:32","nodeType":"FunctionDefinition","parameters":{"id":9612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9611,"mutability":"mutable","name":"value","nameLocation":"34406:5:32","nodeType":"VariableDeclaration","scope":9638,"src":"34398:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9610,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:32"},"returnParameters":{"id":9615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9638,"src":"34436:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9613,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:32"},"scope":9649,"src":"34380:314:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9647,"nodeType":"Block","src":"34853:87:32","statements":[{"AST":{"nativeSrc":"34888:46:32","nodeType":"YulBlock","src":"34888:46:32","statements":[{"nativeSrc":"34902:22:32","nodeType":"YulAssignment","src":"34902:22:32","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:32","nodeType":"YulIdentifier","src":"34921:1:32"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:32","nodeType":"YulIdentifier","src":"34914:6:32"},"nativeSrc":"34914:9:32","nodeType":"YulFunctionCall","src":"34914:9:32"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:32","nodeType":"YulIdentifier","src":"34907:6:32"},"nativeSrc":"34907:17:32","nodeType":"YulFunctionCall","src":"34907:17:32"},"variableNames":[{"name":"u","nativeSrc":"34902:1:32","nodeType":"YulIdentifier","src":"34902:1:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9641,"isOffset":false,"isSlot":false,"src":"34921:1:32","valueSize":1},{"declaration":9644,"isOffset":false,"isSlot":false,"src":"34902:1:32","valueSize":1}],"flags":["memory-safe"],"id":9646,"nodeType":"InlineAssembly","src":"34863:71:32"}]},"documentation":{"id":9639,"nodeType":"StructuredDocumentation","src":"34700:90:32","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9648,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:32","nodeType":"FunctionDefinition","parameters":{"id":9642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9641,"mutability":"mutable","name":"b","nameLocation":"34816:1:32","nodeType":"VariableDeclaration","scope":9648,"src":"34811:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9640,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:32"},"returnParameters":{"id":9645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9644,"mutability":"mutable","name":"u","nameLocation":"34850:1:32","nodeType":"VariableDeclaration","scope":9648,"src":"34842:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9643,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:32"},"scope":9649,"src":"34795:145:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9650,"src":"769:34173:32","usedErrors":[7894,7899,7906,7911],"usedEvents":[]}],"src":"192:34751:32"},"id":32},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9649],"SignedMath":[9793]},"id":9794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9651,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:33"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9794,"sourceUnit":9650,"src":"135:40:33","symbolAliases":[{"foreign":{"id":9652,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"143:8:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9654,"nodeType":"StructuredDocumentation","src":"177:80:33","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9793,"linearizedBaseContracts":[9793],"name":"SignedMath","nameLocation":"266:10:33","nodeType":"ContractDefinition","nodes":[{"body":{"id":9683,"nodeType":"Block","src":"746:215:33","statements":[{"id":9682,"nodeType":"UncheckedBlock","src":"756:199:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"894:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9659,"src":"900:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9668,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"904:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9675,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9657,"src":"932:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9673,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"916:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9649_$","typeString":"type(library SafeCast)"}},"id":9674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9648,"src":"916:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9671,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:33","typeDescriptions":{}}},"id":9677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9665,"id":9681,"nodeType":"Return","src":"887:57:33"}]}]},"documentation":{"id":9655,"nodeType":"StructuredDocumentation","src":"283:374:33","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9684,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:33","nodeType":"FunctionDefinition","parameters":{"id":9662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9657,"mutability":"mutable","name":"condition","nameLocation":"684:9:33","nodeType":"VariableDeclaration","scope":9684,"src":"679:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9656,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9659,"mutability":"mutable","name":"a","nameLocation":"702:1:33","nodeType":"VariableDeclaration","scope":9684,"src":"695:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9658,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9661,"mutability":"mutable","name":"b","nameLocation":"712:1:33","nodeType":"VariableDeclaration","scope":9684,"src":"705:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9660,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:33"},"returnParameters":{"id":9665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9684,"src":"738:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9663,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:33"},"scope":9793,"src":"662:299:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9702,"nodeType":"Block","src":"1102:44:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9695,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9687,"src":"1127:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9696,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9689,"src":"1131:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9687,"src":"1134:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9689,"src":"1137:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9694,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"1119:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9693,"id":9701,"nodeType":"Return","src":"1112:27:33"}]},"documentation":{"id":9685,"nodeType":"StructuredDocumentation","src":"967:66:33","text":" @dev Returns the largest of two signed numbers."},"id":9703,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:33","nodeType":"FunctionDefinition","parameters":{"id":9690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9687,"mutability":"mutable","name":"a","nameLocation":"1058:1:33","nodeType":"VariableDeclaration","scope":9703,"src":"1051:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9686,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9689,"mutability":"mutable","name":"b","nameLocation":"1068:1:33","nodeType":"VariableDeclaration","scope":9703,"src":"1061:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9688,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:33"},"returnParameters":{"id":9693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9703,"src":"1094:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9691,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:33"},"scope":9793,"src":"1038:108:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9721,"nodeType":"Block","src":"1288:44:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9706,"src":"1313:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9708,"src":"1317:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9717,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9706,"src":"1320:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9708,"src":"1323:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9713,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"1305:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9712,"id":9720,"nodeType":"Return","src":"1298:27:33"}]},"documentation":{"id":9704,"nodeType":"StructuredDocumentation","src":"1152:67:33","text":" @dev Returns the smallest of two signed numbers."},"id":9722,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:33","nodeType":"FunctionDefinition","parameters":{"id":9709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9706,"mutability":"mutable","name":"a","nameLocation":"1244:1:33","nodeType":"VariableDeclaration","scope":9722,"src":"1237:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9705,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9708,"mutability":"mutable","name":"b","nameLocation":"1254:1:33","nodeType":"VariableDeclaration","scope":9722,"src":"1247:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9707,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:33"},"returnParameters":{"id":9712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9722,"src":"1280:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9710,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:33"},"scope":9793,"src":"1224:108:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9765,"nodeType":"Block","src":"1537:162:33","statements":[{"assignments":[9733],"declarations":[{"constant":false,"id":9733,"mutability":"mutable","name":"x","nameLocation":"1606:1:33","nodeType":"VariableDeclaration","scope":9765,"src":"1599:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9732,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9746,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9725,"src":"1611:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"1615:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9725,"src":"1622:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9739,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"1626:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:33"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9747,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9733,"src":"1651:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9733,"src":"1671:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:33","typeDescriptions":{}}},"id":9753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:33","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9748,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:33","typeDescriptions":{}}},"id":9756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9725,"src":"1685:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"1689:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9731,"id":9764,"nodeType":"Return","src":"1644:48:33"}]},"documentation":{"id":9723,"nodeType":"StructuredDocumentation","src":"1338:126:33","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9766,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:33","nodeType":"FunctionDefinition","parameters":{"id":9728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9725,"mutability":"mutable","name":"a","nameLocation":"1493:1:33","nodeType":"VariableDeclaration","scope":9766,"src":"1486:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9724,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9727,"mutability":"mutable","name":"b","nameLocation":"1503:1:33","nodeType":"VariableDeclaration","scope":9766,"src":"1496:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9726,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:33"},"returnParameters":{"id":9731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9766,"src":"1529:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9729,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:33"},"scope":9793,"src":"1469:230:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9791,"nodeType":"Block","src":"1843:767:33","statements":[{"id":9790,"nodeType":"UncheckedBlock","src":"1853:751:33","statements":[{"assignments":[9775],"declarations":[{"constant":false,"id":9775,"mutability":"mutable","name":"mask","nameLocation":"2424:4:33","nodeType":"VariableDeclaration","scope":9790,"src":"2417:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9774,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9779,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9776,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"2431:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:33","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9782,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"2576:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9783,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9775,"src":"2580:4:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9786,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9775,"src":"2588:4:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:33","typeDescriptions":{}}},"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9773,"id":9789,"nodeType":"Return","src":"2560:33:33"}]}]},"documentation":{"id":9767,"nodeType":"StructuredDocumentation","src":"1705:78:33","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9792,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:33","nodeType":"FunctionDefinition","parameters":{"id":9770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9769,"mutability":"mutable","name":"n","nameLocation":"1808:1:33","nodeType":"VariableDeclaration","scope":9792,"src":"1801:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9768,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:33"},"returnParameters":{"id":9773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9792,"src":"1834:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:33"},"scope":9793,"src":"1788:822:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9794,"src":"258:2354:33","usedErrors":[],"usedEvents":[]}],"src":"109:2504:33"},"id":33},"contracts/ApeBeatsGenesis.sol":{"ast":{"absolutePath":"contracts/ApeBeatsGenesis.sol","exportedSymbols":{"ApeBeatsGenesis":[10906],"ApeBeatsMetadataLib":[11403],"ApeBeatsRoyalties":[11902],"Base64":[3439],"Context":[3469],"ContextUpgradeable":[1971],"ERC165Upgradeable":[2140],"ERC2981Upgradeable":[1925],"ERC721RoyaltyUpgradeable":[1589],"ERC721Upgradeable":[1542],"ERC721Utils":[3084],"Hashes":[5178],"IDelegateRegistry":[9814],"IERC165":[6263],"IERC721":[2961],"IERC721Errors":[2419],"IERC721Metadata":[3007],"Initializable":[462],"Math":[7884],"MerkleProof":[6251],"Ownable":[2288],"OwnableUpgradeable":[194],"ReentrancyGuard":[3612],"ReentrancyGuardUpgradeable":[2100],"SafeCast":[9649],"SignedMath":[9793],"Strings":[5138]},"id":10907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9795,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:34"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","id":9796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":1543,"src":"58:80:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol","id":9797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":1590,"src":"139:98:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":9798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":195,"src":"238:75:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":9799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":2101,"src":"314:82:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":9800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":463,"src":"397:75:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":9801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":5139,"src":"473:51:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":9802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":6252,"src":"525:68:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ApeBeatsMetadataLib.sol","file":"./ApeBeatsMetadataLib.sol","id":9803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":11404,"src":"594:35:34","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ApeBeatsRoyalties.sol","file":"./ApeBeatsRoyalties.sol","id":9804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":11903,"src":"630:33:34","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IDelegateRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9814,"linearizedBaseContracts":[9814],"name":"IDelegateRegistry","nameLocation":"710:17:34","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9c395bc2","id":9813,"implemented":false,"kind":"function","modifiers":[],"name":"checkDelegateForAll","nameLocation":"743:19:34","nodeType":"FunctionDefinition","parameters":{"id":9809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9806,"mutability":"mutable","name":"delegate","nameLocation":"771:8:34","nodeType":"VariableDeclaration","scope":9813,"src":"763:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9805,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9808,"mutability":"mutable","name":"vault","nameLocation":"789:5:34","nodeType":"VariableDeclaration","scope":9813,"src":"781:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9807,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"762:33:34"},"returnParameters":{"id":9812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9813,"src":"819:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9810,"name":"bool","nodeType":"ElementaryTypeName","src":"819:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:6:34"},"scope":9814,"src":"734:91:34","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10907,"src":"700:127:34","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":9815,"name":"Initializable","nameLocations":["857:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"857:13:34"},"id":9816,"nodeType":"InheritanceSpecifier","src":"857:13:34"},{"baseName":{"id":9817,"name":"ERC721Upgradeable","nameLocations":["872:17:34"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"872:17:34"},"id":9818,"nodeType":"InheritanceSpecifier","src":"872:17:34"},{"baseName":{"id":9819,"name":"ERC721RoyaltyUpgradeable","nameLocations":["891:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":1589,"src":"891:24:34"},"id":9820,"nodeType":"InheritanceSpecifier","src":"891:24:34"},{"baseName":{"id":9821,"name":"OwnableUpgradeable","nameLocations":["917:18:34"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"917:18:34"},"id":9822,"nodeType":"InheritanceSpecifier","src":"917:18:34"},{"baseName":{"id":9823,"name":"ReentrancyGuardUpgradeable","nameLocations":["937:26:34"],"nodeType":"IdentifierPath","referencedDeclaration":2100,"src":"937:26:34"},"id":9824,"nodeType":"InheritanceSpecifier","src":"937:26:34"}],"canonicalName":"ApeBeatsGenesis","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10906,"linearizedBaseContracts":[10906,2100,194,1589,1542,2419,3007,2961,1925,2140,2329,6263,1971,462],"name":"ApeBeatsGenesis","nameLocation":"838:15:34","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9827,"libraryName":{"id":9825,"name":"Strings","nameLocations":["976:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"976:7:34"},"nodeType":"UsingForDirective","src":"970:26:34","typeName":{"id":9826,"name":"uint256","nodeType":"ElementaryTypeName","src":"988:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"902d55a5","id":9830,"mutability":"constant","name":"TOTAL_SUPPLY","nameLocation":"1043:12:34","nodeType":"VariableDeclaration","scope":10906,"src":"1019:42:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343230","id":9829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1058:3:34","typeDescriptions":{"typeIdentifier":"t_rational_420_by_1","typeString":"int_const 420"},"value":"420"},"visibility":"public"},{"constant":true,"functionSelector":"0ea58915","id":9833,"mutability":"constant","name":"FOUNDER_MINT_AMOUNT","nameLocation":"1091:19:34","nodeType":"VariableDeclaration","scope":10906,"src":"1067:47:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1067:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":9832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1113:1:34","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"public"},{"constant":true,"functionSelector":"6ac6319c","id":9836,"mutability":"constant","name":"GTD_MINT_AMOUNT","nameLocation":"1144:15:34","nodeType":"VariableDeclaration","scope":10906,"src":"1120:44:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3432","id":9835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1162:2:34","typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"},"visibility":"public"},{"constant":true,"functionSelector":"40b55480","id":9839,"mutability":"constant","name":"GTD_PRICE","nameLocation":"1194:9:34","nodeType":"VariableDeclaration","scope":10906,"src":"1170:45:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"342e32","id":9838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1206:9:34","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_4200000000000000000_by_1","typeString":"int_const 4200000000000000000"},"value":"4.2"},"visibility":"public"},{"constant":true,"functionSelector":"2d632678","id":9842,"mutability":"constant","name":"FCFS_PRICE","nameLocation":"1245:10:34","nodeType":"VariableDeclaration","scope":10906,"src":"1221:46:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"362e39","id":9841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1258:9:34","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_6900000000000000000_by_1","typeString":"int_const 6900000000000000000"},"value":"6.9"},"visibility":"public"},{"constant":true,"functionSelector":"611f3f10","id":9845,"mutability":"constant","name":"PUBLIC_PRICE","nameLocation":"1297:12:34","nodeType":"VariableDeclaration","scope":10906,"src":"1273:48:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"362e39","id":9844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:9:34","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_6900000000000000000_by_1","typeString":"int_const 6900000000000000000"},"value":"6.9"},"visibility":"public"},{"constant":true,"functionSelector":"8539cb82","id":9848,"mutability":"constant","name":"GTD_MAX_PER_WALLET","nameLocation":"1351:18:34","nodeType":"VariableDeclaration","scope":10906,"src":"1327:46:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1327:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":9847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1372:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"b0660c77","id":9851,"mutability":"constant","name":"FCFS_MAX_PER_WALLET","nameLocation":"1403:19:34","nodeType":"VariableDeclaration","scope":10906,"src":"1379:47:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":9850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1425:1:34","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"public"},{"constant":true,"functionSelector":"74819ef7","id":9854,"mutability":"constant","name":"PUBLIC_MAX_PER_WALLET","nameLocation":"1456:21:34","nodeType":"VariableDeclaration","scope":10906,"src":"1432:49:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1432:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":9853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1480:1:34","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"3c404a9c","id":9857,"mutability":"constant","name":"ROYALTY_BASIS_POINTS","nameLocation":"1510:20:34","nodeType":"VariableDeclaration","scope":10906,"src":"1487:49:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9855,"name":"uint96","nodeType":"ElementaryTypeName","src":"1487:6:34","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"value":{"hexValue":"343230","id":9856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1533:3:34","typeDescriptions":{"typeIdentifier":"t_rational_420_by_1","typeString":"int_const 420"},"value":"420"},"visibility":"public"},{"constant":false,"functionSelector":"a2309ff8","id":9859,"mutability":"mutable","name":"totalMinted","nameLocation":"1581:11:34","nodeType":"VariableDeclaration","scope":10906,"src":"1566:26:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ef39154b","id":9861,"mutability":"mutable","name":"gtdMerkleRoot","nameLocation":"1613:13:34","nodeType":"VariableDeclaration","scope":10906,"src":"1598:28:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1598:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"7bb23e3a","id":9863,"mutability":"mutable","name":"fcfsMerkleRoot","nameLocation":"1686:14:34","nodeType":"VariableDeclaration","scope":10906,"src":"1671:29:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1671:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":9865,"mutability":"mutable","name":"treasury","nameLocation":"1766:8:34","nodeType":"VariableDeclaration","scope":10906,"src":"1751:23:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9864,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4d853ee5","id":9867,"mutability":"mutable","name":"founder","nameLocation":"1795:7:34","nodeType":"VariableDeclaration","scope":10906,"src":"1780:22:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9866,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4e8117a9","id":9870,"mutability":"mutable","name":"metadataLib","nameLocation":"1835:11:34","nodeType":"VariableDeclaration","scope":10906,"src":"1808:38:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"},"typeName":{"id":9869,"nodeType":"UserDefinedTypeName","pathNode":{"id":9868,"name":"ApeBeatsMetadataLib","nameLocations":["1808:19:34"],"nodeType":"IdentifierPath","referencedDeclaration":11403,"src":"1808:19:34"},"referencedDeclaration":11403,"src":"1808:19:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"visibility":"public"},{"constant":false,"functionSelector":"76c25e6f","id":9873,"mutability":"mutable","name":"royaltiesContract","nameLocation":"1877:17:34","nodeType":"VariableDeclaration","scope":10906,"src":"1852:42:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"},"typeName":{"id":9872,"nodeType":"UserDefinedTypeName","pathNode":{"id":9871,"name":"ApeBeatsRoyalties","nameLocations":["1852:17:34"],"nodeType":"IdentifierPath","referencedDeclaration":11902,"src":"1852:17:34"},"referencedDeclaration":11902,"src":"1852:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"visibility":"public"},{"constant":false,"functionSelector":"ab13c089","id":9875,"mutability":"mutable","name":"prerevealNoiseBase64","nameLocation":"1914:20:34","nodeType":"VariableDeclaration","scope":10906,"src":"1900:34:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9874,"name":"string","nodeType":"ElementaryTypeName","src":"1900:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"13bfffac","id":9878,"mutability":"mutable","name":"delegateRegistry","nameLocation":"1965:16:34","nodeType":"VariableDeclaration","scope":10906,"src":"1940:41:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegateRegistry_$9814","typeString":"contract IDelegateRegistry"},"typeName":{"id":9877,"nodeType":"UserDefinedTypeName","pathNode":{"id":9876,"name":"IDelegateRegistry","nameLocations":["1940:17:34"],"nodeType":"IdentifierPath","referencedDeclaration":9814,"src":"1940:17:34"},"referencedDeclaration":9814,"src":"1940:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegateRegistry_$9814","typeString":"contract IDelegateRegistry"}},"visibility":"public"},{"constant":false,"functionSelector":"bfa41777","id":9880,"mutability":"mutable","name":"founderMintStart","nameLocation":"2027:16:34","nodeType":"VariableDeclaration","scope":10906,"src":"2012:31:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d0e8f26e","id":9882,"mutability":"mutable","name":"gtdMintStart","nameLocation":"2064:12:34","nodeType":"VariableDeclaration","scope":10906,"src":"2049:27:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2049:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"eafd4891","id":9884,"mutability":"mutable","name":"fcfsMintStart","nameLocation":"2097:13:34","nodeType":"VariableDeclaration","scope":10906,"src":"2082:28:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2082:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8cfec4c0","id":9886,"mutability":"mutable","name":"publicMintStart","nameLocation":"2131:15:34","nodeType":"VariableDeclaration","scope":10906,"src":"2116:30:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"5270c753","id":9889,"mutability":"constant","name":"GTD_DURATION","nameLocation":"2200:12:34","nodeType":"VariableDeclaration","scope":10906,"src":"2176:49:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2176:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135","id":9888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2215:10:34","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_900_by_1","typeString":"int_const 900"},"value":"15"},"visibility":"public"},{"constant":true,"functionSelector":"4a7887c4","id":9892,"mutability":"constant","name":"FCFS_DURATION","nameLocation":"2255:13:34","nodeType":"VariableDeclaration","scope":10906,"src":"2231:50:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2231:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":9891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2271:10:34","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"},"value":"30"},"visibility":"public"},{"constant":false,"functionSelector":"24659318","id":9894,"mutability":"mutable","name":"founderMinted","nameLocation":"2332:13:34","nodeType":"VariableDeclaration","scope":10906,"src":"2317:28:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9893,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b32395ca","id":9898,"mutability":"mutable","name":"mintedPerWalletGTD","nameLocation":"2434:18:34","nodeType":"VariableDeclaration","scope":10906,"src":"2399:53:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9897,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9895,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2399:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2418:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f0505f1","id":9902,"mutability":"mutable","name":"mintedPerWalletFCFS","nameLocation":"2493:19:34","nodeType":"VariableDeclaration","scope":10906,"src":"2458:54:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9901,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9899,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2458:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9900,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"5c121bc9","id":9906,"mutability":"mutable","name":"mintedPerWalletPublic","nameLocation":"2553:21:34","nodeType":"VariableDeclaration","scope":10906,"src":"2518:56:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9905,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9903,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2518:27:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe","id":9912,"name":"Minted","nameLocation":"2587:6:34","nodeType":"EventDefinition","parameters":{"id":9911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9908,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2610:2:34","nodeType":"VariableDeclaration","scope":9912,"src":"2594:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9907,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9910,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2630:7:34","nodeType":"VariableDeclaration","scope":9912,"src":"2614:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2614:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2593:45:34"},"src":"2581:58:34"},{"body":{"id":9919,"nodeType":"Block","src":"2712:39:34","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9916,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2722:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2722:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9918,"nodeType":"ExpressionStatement","src":"2722:22:34"}]},"documentation":{"id":9913,"nodeType":"StructuredDocumentation","src":"2645:48:34","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":9920,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9914,"nodeType":"ParameterList","parameters":[],"src":"2709:2:34"},"returnParameters":{"id":9915,"nodeType":"ParameterList","parameters":[],"src":"2712:0:34"},"scope":10906,"src":"2698:53:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10041,"nodeType":"Block","src":"3005:1012:34","statements":[{"expression":{"arguments":[{"hexValue":"417065426561747347656e65736973","id":9938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3029:17:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_b540c6aa6babc3fc4fce783e14e39c5182163d475b06a1780658a7f5f53abd45","typeString":"literal_string \"ApeBeatsGenesis\""},"value":"ApeBeatsGenesis"},{"hexValue":"414247","id":9939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3048:5:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_86f673a2107b271760fc8c20cc7d05cc0da23093a259e77fca8d4f11e1b0dca3","typeString":"literal_string \"ABG\""},"value":"ABG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b540c6aa6babc3fc4fce783e14e39c5182163d475b06a1780658a7f5f53abd45","typeString":"literal_string \"ApeBeatsGenesis\""},{"typeIdentifier":"t_stringliteral_86f673a2107b271760fc8c20cc7d05cc0da23093a259e77fca8d4f11e1b0dca3","typeString":"literal_string \"ABG\""}],"id":9937,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"3015:13:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":9940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3015:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9941,"nodeType":"ExpressionStatement","src":"3015:39:34"},{"expression":{"arguments":[{"expression":{"id":9943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3079:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:6:34","memberName":"sender","nodeType":"MemberAccess","src":"3079:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9942,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3064:14:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3064:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9946,"nodeType":"ExpressionStatement","src":"3064:26:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9947,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3100:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3100:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9949,"nodeType":"ExpressionStatement","src":"3100:24:34"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9950,"name":"__ERC721Royalty_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"3134:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3134:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9952,"nodeType":"ExpressionStatement","src":"3134:22:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9954,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"3175:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3188:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9955,"name":"address","nodeType":"ElementaryTypeName","src":"3188:7:34","typeDescriptions":{}}},"id":9958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3188:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3175:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726561737572792063616e6e6f74206265207a65726f2061646472657373","id":9960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3200:33:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512","typeString":"literal_string \"Treasury cannot be zero address\""},"value":"Treasury cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512","typeString":"literal_string \"Treasury cannot be zero address\""}],"id":9953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3167:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:67:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9962,"nodeType":"ExpressionStatement","src":"3167:67:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9964,"name":"_metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9928,"src":"3252:12:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3276:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3268:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9965,"name":"address","nodeType":"ElementaryTypeName","src":"3268:7:34","typeDescriptions":{}}},"id":9968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3268:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3252:26:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d657461646174614c69622063616e6e6f74206265207a65726f2061646472657373","id":9970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:36:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa3d86901877ce04fc083dc4b2f3958f137a5b1d61159304a6d6151e004e436e","typeString":"literal_string \"MetadataLib cannot be zero address\""},"value":"MetadataLib cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa3d86901877ce04fc083dc4b2f3958f137a5b1d61159304a6d6151e004e436e","typeString":"literal_string \"MetadataLib cannot be zero address\""}],"id":9963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3244:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:73:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9972,"nodeType":"ExpressionStatement","src":"3244:73:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9974,"name":"_royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9930,"src":"3335:18:34","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3365:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3357:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9975,"name":"address","nodeType":"ElementaryTypeName","src":"3357:7:34","typeDescriptions":{}}},"id":9978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3357:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3335:32:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f79616c7469657320636f6e74726163742063616e6e6f74206265207a65726f2061646472657373","id":9980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3369:43:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_69e9753250629751b783d62e62093bda9f03c808977335af20a6683735b49f90","typeString":"literal_string \"Royalties contract cannot be zero address\""},"value":"Royalties contract cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69e9753250629751b783d62e62093bda9f03c808977335af20a6683735b49f90","typeString":"literal_string \"Royalties contract cannot be zero address\""}],"id":9973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3327:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3327:86:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9982,"nodeType":"ExpressionStatement","src":"3327:86:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9984,"name":"_delegateRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"3431:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3452:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9985,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:34","typeDescriptions":{}}},"id":9988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3452:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3431:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656c65676174652072656769737472792063616e6e6f74206265207a65726f2061646472657373","id":9990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3464:42:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_e73a52fa76ac79268a48d3b12a19cf20ce34b42b25c5d0749a9035445f94c3fe","typeString":"literal_string \"Delegate registry cannot be zero address\""},"value":"Delegate registry cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e73a52fa76ac79268a48d3b12a19cf20ce34b42b25c5d0749a9035445f94c3fe","typeString":"literal_string \"Delegate registry cannot be zero address\""}],"id":9983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3423:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3423:84:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9992,"nodeType":"ExpressionStatement","src":"3423:84:34"},{"expression":{"id":9995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9993,"name":"gtdMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9861,"src":"3518:13:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9994,"name":"_gtdMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"3534:14:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3518:30:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9996,"nodeType":"ExpressionStatement","src":"3518:30:34"},{"expression":{"id":9999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9997,"name":"fcfsMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"3558:14:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9998,"name":"_fcfsMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"3575:15:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3558:32:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10000,"nodeType":"ExpressionStatement","src":"3558:32:34"},{"expression":{"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10001,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"3600:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10002,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"3611:9:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10004,"nodeType":"ExpressionStatement","src":"3600:20:34"},{"expression":{"id":10008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10005,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"3630:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10006,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3640:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3644:6:34","memberName":"sender","nodeType":"MemberAccess","src":"3640:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3630:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10009,"nodeType":"ExpressionStatement","src":"3630:20:34"},{"expression":{"id":10014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10010,"name":"metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"3660:11:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10012,"name":"_metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9928,"src":"3694:12:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10011,"name":"ApeBeatsMetadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11403,"src":"3674:19:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ApeBeatsMetadataLib_$11403_$","typeString":"type(contract ApeBeatsMetadataLib)"}},"id":10013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"src":"3660:47:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"id":10015,"nodeType":"ExpressionStatement","src":"3660:47:34"},{"expression":{"id":10020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10016,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"3717:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10018,"name":"_royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9930,"src":"3755:18:34","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":10017,"name":"ApeBeatsRoyalties","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11902,"src":"3737:17:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ApeBeatsRoyalties_$11902_$","typeString":"type(contract ApeBeatsRoyalties)"}},"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:37:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"src":"3717:57:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10021,"nodeType":"ExpressionStatement","src":"3717:57:34"},{"expression":{"id":10026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10022,"name":"delegateRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9878,"src":"3784:16:34","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegateRegistry_$9814","typeString":"contract IDelegateRegistry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10024,"name":"_delegateRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"3821:17:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10023,"name":"IDelegateRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"3803:17:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDelegateRegistry_$9814_$","typeString":"type(contract IDelegateRegistry)"}},"id":10025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDelegateRegistry_$9814","typeString":"contract IDelegateRegistry"}},"src":"3784:55:34","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegateRegistry_$9814","typeString":"contract IDelegateRegistry"}},"id":10027,"nodeType":"ExpressionStatement","src":"3784:55:34"},{"expression":{"arguments":[{"arguments":[{"id":10031,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"3876:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}],"id":10030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10029,"name":"address","nodeType":"ElementaryTypeName","src":"3868:7:34","typeDescriptions":{}}},"id":10032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10033,"name":"ROYALTY_BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"3896:20:34","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":10028,"name":"_setDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"3849:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3849:68:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10035,"nodeType":"ExpressionStatement","src":"3849:68:34"},{"expression":{"id":10039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10036,"name":"founderMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"3976:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10037,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3995:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4001:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"3995:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3976:34:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10040,"nodeType":"ExpressionStatement","src":"3976:34:34"}]},"functionSelector":"89d29c4c","id":10042,"implemented":true,"kind":"function","modifiers":[{"id":9935,"kind":"modifierInvocation","modifierName":{"id":9934,"name":"initializer","nameLocations":["2993:11:34"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2993:11:34"},"nodeType":"ModifierInvocation","src":"2993:11:34"}],"name":"initialize","nameLocation":"2766:10:34","nodeType":"FunctionDefinition","parameters":{"id":9933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9922,"mutability":"mutable","name":"_gtdMerkleRoot","nameLocation":"2794:14:34","nodeType":"VariableDeclaration","scope":10042,"src":"2786:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2786:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9924,"mutability":"mutable","name":"_fcfsMerkleRoot","nameLocation":"2826:15:34","nodeType":"VariableDeclaration","scope":10042,"src":"2818:23:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2818:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9926,"mutability":"mutable","name":"_treasury","nameLocation":"2859:9:34","nodeType":"VariableDeclaration","scope":10042,"src":"2851:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9925,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9928,"mutability":"mutable","name":"_metadataLib","nameLocation":"2886:12:34","nodeType":"VariableDeclaration","scope":10042,"src":"2878:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9927,"name":"address","nodeType":"ElementaryTypeName","src":"2878:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9930,"mutability":"mutable","name":"_royaltiesContract","nameLocation":"2924:18:34","nodeType":"VariableDeclaration","scope":10042,"src":"2908:34:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":9929,"name":"address","nodeType":"ElementaryTypeName","src":"2908:15:34","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":9932,"mutability":"mutable","name":"_delegateRegistry","nameLocation":"2960:17:34","nodeType":"VariableDeclaration","scope":10042,"src":"2952:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9931,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2776:207:34"},"returnParameters":{"id":9936,"nodeType":"ParameterList","parameters":[],"src":"3005:0:34"},"scope":10906,"src":"2757:1260:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10064,"nodeType":"Block","src":"4114:152:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10052,"name":"_prerevealNoiseBase64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10044,"src":"4138:21:34","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":10051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4132:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10050,"name":"bytes","nodeType":"ElementaryTypeName","src":"4132:5:34","typeDescriptions":{}}},"id":10053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":10054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:6:34","memberName":"length","nodeType":"MemberAccess","src":"4132:35:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4170:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4132:39:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726572657665616c205552492063616e6e6f7420626520656d707479","id":10057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4173:31:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0165a09e416d9422f7475da333a2b60d31cf6553cd0ec16548d788a0c808a0b","typeString":"literal_string \"Prereveal URI cannot be empty\""},"value":"Prereveal URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0165a09e416d9422f7475da333a2b60d31cf6553cd0ec16548d788a0c808a0b","typeString":"literal_string \"Prereveal URI cannot be empty\""}],"id":10049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4124:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:81:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10059,"nodeType":"ExpressionStatement","src":"4124:81:34"},{"expression":{"id":10062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10060,"name":"prerevealNoiseBase64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"4215:20:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10061,"name":"_prerevealNoiseBase64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10044,"src":"4238:21:34","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"4215:44:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":10063,"nodeType":"ExpressionStatement","src":"4215:44:34"}]},"functionSelector":"aa0f0d7f","id":10065,"implemented":true,"kind":"function","modifiers":[{"id":10047,"kind":"modifierInvocation","modifierName":{"id":10046,"name":"onlyOwner","nameLocations":["4104:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"4104:9:34"},"nodeType":"ModifierInvocation","src":"4104:9:34"}],"name":"setPrerevealNoiseBase64","nameLocation":"4032:23:34","nodeType":"FunctionDefinition","parameters":{"id":10045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10044,"mutability":"mutable","name":"_prerevealNoiseBase64","nameLocation":"4072:21:34","nodeType":"VariableDeclaration","scope":10065,"src":"4056:37:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10043,"name":"string","nodeType":"ElementaryTypeName","src":"4056:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4055:39:34"},"returnParameters":{"id":10048,"nodeType":"ParameterList","parameters":[],"src":"4114:0:34"},"scope":10906,"src":"4023:243:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[608,1588],"body":{"id":10080,"nodeType":"Block","src":"4408:60:34","statements":[{"expression":{"arguments":[{"id":10077,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10067,"src":"4449:11:34","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":10075,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4425:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ApeBeatsGenesis_$10906_$","typeString":"type(contract super ApeBeatsGenesis)"}},"id":10076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4431:17:34","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"4425:23:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":10078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4425:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10074,"id":10079,"nodeType":"Return","src":"4418:43:34"}]},"functionSelector":"01ffc9a7","id":10081,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4281:17:34","nodeType":"FunctionDefinition","overrides":{"id":10071,"nodeType":"OverrideSpecifier","overrides":[{"id":10069,"name":"ERC721Upgradeable","nameLocations":["4348:17:34"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"4348:17:34"},{"id":10070,"name":"ERC721RoyaltyUpgradeable","nameLocations":["4367:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":1589,"src":"4367:24:34"}],"src":"4339:53:34"},"parameters":{"id":10068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10067,"mutability":"mutable","name":"interfaceId","nameLocation":"4306:11:34","nodeType":"VariableDeclaration","scope":10081,"src":"4299:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10066,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4299:6:34","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4298:20:34"},"returnParameters":{"id":10074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10081,"src":"4402:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10072,"name":"bool","nodeType":"ElementaryTypeName","src":"4402:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4401:6:34"},"scope":10906,"src":"4272:196:34","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":10167,"nodeType":"Block","src":"4612:767:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4630:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4634:6:34","memberName":"sender","nodeType":"MemberAccess","src":"4630:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10091,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"4644:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4630:21:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920666f756e6465722063616e206d696e74","id":10093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4653:23:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_880a052a999bb69fa13bbcc5f3b0d04344d28f2a9147d78ca265ab0d0e8f5c12","typeString":"literal_string \"Only founder can mint\""},"value":"Only founder can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_880a052a999bb69fa13bbcc5f3b0d04344d28f2a9147d78ca265ab0d0e8f5c12","typeString":"literal_string \"Only founder can mint\""}],"id":10088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4622:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10095,"nodeType":"ExpressionStatement","src":"4622:55:34"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10097,"name":"isFounderMintActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10613,"src":"4695:19:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":10098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:21:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466f756e646572206d696e74207068617365206e6f7420616374697665","id":10099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4718:31:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f90e601458373c0b469617399187d82496562dd4d77c80b0fc03e91d6b66c86","typeString":"literal_string \"Founder mint phase not active\""},"value":"Founder mint phase not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f90e601458373c0b469617399187d82496562dd4d77c80b0fc03e91d6b66c86","typeString":"literal_string \"Founder mint phase not active\""}],"id":10096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4687:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:63:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10101,"nodeType":"ExpressionStatement","src":"4687:63:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10103,"name":"founderMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9894,"src":"4768:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10104,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10083,"src":"4784:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4768:22:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10106,"name":"FOUNDER_MINT_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"4794:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4768:45:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320666f756e646572206d696e74206c696d6974","id":10108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4815:28:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_21529c030b9cb434177b8f07e0a9cdcae06e335e102913b63ac22ab9a3606c82","typeString":"literal_string \"Exceeds founder mint limit\""},"value":"Exceeds founder mint limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21529c030b9cb434177b8f07e0a9cdcae06e335e102913b63ac22ab9a3606c82","typeString":"literal_string \"Exceeds founder mint limit\""}],"id":10102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4760:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4760:84:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10110,"nodeType":"ExpressionStatement","src":"4760:84:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10112,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"4862:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10083,"src":"4876:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4862:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10115,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"4886:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4862:36:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320746f74616c20737570706c79","id":10117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4900:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""},"value":"Exceeds total supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""}],"id":10111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4854:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4854:69:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10119,"nodeType":"ExpressionStatement","src":"4854:69:34"},{"expression":{"id":10122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10120,"name":"founderMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9894,"src":"4934:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10121,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10083,"src":"4951:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4934:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10123,"nodeType":"ExpressionStatement","src":"4934:23:34"},{"body":{"id":10155,"nodeType":"Block","src":"5004:200:34","statements":[{"expression":{"id":10135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5018:13:34","subExpression":{"id":10134,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"5018:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10136,"nodeType":"ExpressionStatement","src":"5018:13:34"},{"expression":{"arguments":[{"id":10138,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"5055:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10139,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"5064:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10137,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1204,1234],"referencedDeclaration":1204,"src":"5045:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5045:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10141,"nodeType":"ExpressionStatement","src":"5045:31:34"},{"expression":{"arguments":[{"id":10145,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"5122:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10146,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"5135:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":10147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5144:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":10142,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"5090:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5108:13:34","memberName":"mintAndRecord","nodeType":"MemberAccess","referencedDeclaration":11881,"src":"5090:31:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) external"}},"id":10148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5090:56:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10149,"nodeType":"ExpressionStatement","src":"5090:56:34"},{"eventCall":{"arguments":[{"id":10151,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"5172:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10152,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"5181:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10150,"name":"Minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"5165:6:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5165:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10154,"nodeType":"EmitStatement","src":"5160:33:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10125,"src":"4987:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10083,"src":"4991:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4987:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10156,"initializationExpression":{"assignments":[10125],"declarations":[{"constant":false,"id":10125,"mutability":"mutable","name":"i","nameLocation":"4980:1:34","nodeType":"VariableDeclaration","scope":10156,"src":"4972:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10124,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10127,"initialValue":{"hexValue":"30","id":10126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4984:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4972:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4999:3:34","subExpression":{"id":10131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10125,"src":"4999:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10133,"nodeType":"ExpressionStatement","src":"4999:3:34"},"nodeType":"ForStatement","src":"4967:237:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10157,"name":"founderMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9894,"src":"5280:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10158,"name":"FOUNDER_MINT_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"5297:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5280:36:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10166,"nodeType":"IfStatement","src":"5276:97:34","trueBody":{"id":10165,"nodeType":"Block","src":"5318:55:34","statements":[{"expression":{"id":10163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10160,"name":"gtdMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"5332:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10161,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5347:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5353:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"5347:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5332:30:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10164,"nodeType":"ExpressionStatement","src":"5332:30:34"}]}}]},"functionSelector":"b4bbb18f","id":10168,"implemented":true,"kind":"function","modifiers":[{"id":10086,"kind":"modifierInvocation","modifierName":{"id":10085,"name":"nonReentrant","nameLocations":["4599:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"4599:12:34"},"nodeType":"ModifierInvocation","src":"4599:12:34"}],"name":"mintFounder","nameLocation":"4562:11:34","nodeType":"FunctionDefinition","parameters":{"id":10084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10083,"mutability":"mutable","name":"amount","nameLocation":"4582:6:34","nodeType":"VariableDeclaration","scope":10168,"src":"4574:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10082,"name":"uint256","nodeType":"ElementaryTypeName","src":"4574:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4573:16:34"},"returnParameters":{"id":10087,"nodeType":"ParameterList","parameters":[],"src":"4612:0:34"},"scope":10906,"src":"4553:826:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10289,"nodeType":"Block","src":"5570:966:34","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10179,"name":"isGTDMintActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10634,"src":"5588:15:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5588:17:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"475444206d696e74207068617365206e6f7420616374697665","id":10181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5607:27:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_e21d2b22fa9a0e05d3e9855ac0a6cbe121b79a94420941c0c3cba33514ca7939","typeString":"literal_string \"GTD mint phase not active\""},"value":"GTD mint phase not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e21d2b22fa9a0e05d3e9855ac0a6cbe121b79a94420941c0c3cba33514ca7939","typeString":"literal_string \"GTD mint phase not active\""}],"id":10178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5580:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5580:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10183,"nodeType":"ExpressionStatement","src":"5580:55:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10185,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"5653:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5667:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5653:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10188,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"5672:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5653:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320746f74616c20737570706c79","id":10190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5686:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""},"value":"Exceeds total supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""}],"id":10184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5645:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5645:64:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10192,"nodeType":"ExpressionStatement","src":"5645:64:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5727:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5731:5:34","memberName":"value","nodeType":"MemberAccess","src":"5727:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10196,"name":"GTD_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"5740:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5727:22:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":10198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5751:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":10193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5719:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5719:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10200,"nodeType":"ExpressionStatement","src":"5719:55:34"},{"assignments":[10202],"declarations":[{"constant":false,"id":10202,"mutability":"mutable","name":"account","nameLocation":"5793:7:34","nodeType":"VariableDeclaration","scope":10289,"src":"5785:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10201,"name":"address","nodeType":"ElementaryTypeName","src":"5785:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10206,"initialValue":{"arguments":[{"id":10204,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"5815:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10203,"name":"_getAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"5803:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":10205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5803:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5785:36:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10208,"name":"mintedPerWalletGTD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"5839:18:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10210,"indexExpression":{"id":10209,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10202,"src":"5858:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5839:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5870:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5839:32:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206d696e74656420475444","id":10213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5873:20:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb9aef1938d6dfe9be0d7145ae4148fef371dffa7f2587bc64833da01391289e","typeString":"literal_string \"Already minted GTD\""},"value":"Already minted GTD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb9aef1938d6dfe9be0d7145ae4148fef371dffa7f2587bc64833da01391289e","typeString":"literal_string \"Already minted GTD\""}],"id":10207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5831:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5831:63:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10215,"nodeType":"ExpressionStatement","src":"5831:63:34"},{"assignments":[10217],"declarations":[{"constant":false,"id":10217,"mutability":"mutable","name":"leaf","nameLocation":"5913:4:34","nodeType":"VariableDeclaration","scope":10289,"src":"5905:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5905:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10224,"initialValue":{"arguments":[{"arguments":[{"id":10221,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10202,"src":"5947:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10219,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5930:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5934:12:34","memberName":"encodePacked","nodeType":"MemberAccess","src":"5930:16:34","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10218,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5920:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5920:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5905:51:34"},{"expression":{"arguments":[{"arguments":[{"id":10228,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"5993:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":10229,"name":"gtdMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9861,"src":"6006:13:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10230,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"6021:4:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10226,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"5974:11:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$6251_$","typeString":"type(library MerkleProof)"}},"id":10227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5986:6:34","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":5207,"src":"5974:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204d65726b6c652070726f6f66","id":10232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6028:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfff98aea1f4314a786c0426b520c2e5600fd9bdeb9d59d5d51311c13153d3c6","typeString":"literal_string \"Invalid Merkle proof\""},"value":"Invalid Merkle proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfff98aea1f4314a786c0426b520c2e5600fd9bdeb9d59d5d51311c13153d3c6","typeString":"literal_string \"Invalid Merkle proof\""}],"id":10225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5966:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5966:85:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10234,"nodeType":"ExpressionStatement","src":"5966:85:34"},{"expression":{"id":10239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10235,"name":"mintedPerWalletGTD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"6062:18:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10237,"indexExpression":{"id":10236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10202,"src":"6081:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6062:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":10238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6093:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6062:32:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10240,"nodeType":"ExpressionStatement","src":"6062:32:34"},{"expression":{"id":10242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6104:13:34","subExpression":{"id":10241,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"6104:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10243,"nodeType":"ExpressionStatement","src":"6104:13:34"},{"expression":{"arguments":[{"expression":{"id":10245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6137:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6141:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6137:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10247,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"6149:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10244,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1204,1234],"referencedDeclaration":1204,"src":"6127:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6127:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10249,"nodeType":"ExpressionStatement","src":"6127:34:34"},{"expression":{"arguments":[{"id":10253,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"6203:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10254,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6216:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6220:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6216:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":10256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6228:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":10250,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"6171:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:13:34","memberName":"mintAndRecord","nodeType":"MemberAccess","referencedDeclaration":11881,"src":"6171:31:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) external"}},"id":10257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6171:59:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10258,"nodeType":"ExpressionStatement","src":"6171:59:34"},{"eventCall":{"arguments":[{"expression":{"id":10260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6252:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6256:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6252:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10262,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"6264:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10259,"name":"Minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"6245:6:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6245:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10264,"nodeType":"EmitStatement","src":"6240:36:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10265,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6291:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6295:5:34","memberName":"value","nodeType":"MemberAccess","src":"6291:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10267,"name":"GTD_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"6303:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6291:21:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10288,"nodeType":"IfStatement","src":"6287:161:34","trueBody":{"id":10287,"nodeType":"Block","src":"6314:134:34","statements":[{"assignments":[10270,null],"declarations":[{"constant":false,"id":10270,"mutability":"mutable","name":"sent","nameLocation":"6334:4:34","nodeType":"VariableDeclaration","scope":10287,"src":"6329:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10269,"name":"bool","nodeType":"ElementaryTypeName","src":"6329:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10281,"initialValue":{"arguments":[{"hexValue":"","id":10279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6390:2:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":10271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6344:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6348:6:34","memberName":"sender","nodeType":"MemberAccess","src":"6344:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6355:4:34","memberName":"call","nodeType":"MemberAccess","src":"6344:15:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6367:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6371:5:34","memberName":"value","nodeType":"MemberAccess","src":"6367:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10276,"name":"GTD_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"6379:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6367:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6344:45:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6344:49:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6328:65:34"},{"expression":{"arguments":[{"id":10283,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10270,"src":"6415:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":10284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6421:15:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":10282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6407:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10286,"nodeType":"ExpressionStatement","src":"6407:30:34"}]}}]},"functionSelector":"3f2c0d6a","id":10290,"implemented":true,"kind":"function","modifiers":[{"id":10176,"kind":"modifierInvocation","modifierName":{"id":10175,"name":"nonReentrant","nameLocations":["5557:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"5557:12:34"},"nodeType":"ModifierInvocation","src":"5557:12:34"}],"name":"mintGTD","nameLocation":"5485:7:34","nodeType":"FunctionDefinition","parameters":{"id":10174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10170,"mutability":"mutable","name":"vault","nameLocation":"5501:5:34","nodeType":"VariableDeclaration","scope":10290,"src":"5493:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10169,"name":"address","nodeType":"ElementaryTypeName","src":"5493:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10173,"mutability":"mutable","name":"merkleProof","nameLocation":"5527:11:34","nodeType":"VariableDeclaration","scope":10290,"src":"5508:30:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5508:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10172,"nodeType":"ArrayTypeName","src":"5508:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5492:47:34"},"returnParameters":{"id":10177,"nodeType":"ParameterList","parameters":[],"src":"5570:0:34"},"scope":10906,"src":"5476:1060:34","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":10440,"nodeType":"Block","src":"6732:1186:34","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10303,"name":"isFCFSMintActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10655,"src":"6750:16:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":10304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46434653206d696e74207068617365206e6f7420616374697665","id":10305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6770:28:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_2929faae0fa5bde683278a602212036eb96bbdd068a342eb7925c0cd09aa9a44","typeString":"literal_string \"FCFS mint phase not active\""},"value":"FCFS mint phase not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2929faae0fa5bde683278a602212036eb96bbdd068a342eb7925c0cd09aa9a44","typeString":"literal_string \"FCFS mint phase not active\""}],"id":10302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6742:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6742:57:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10307,"nodeType":"ExpressionStatement","src":"6742:57:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10309,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"6817:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10310,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"6831:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6817:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10312,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"6841:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6817:36:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320746f74616c20737570706c79","id":10314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6855:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""},"value":"Exceeds total supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""}],"id":10308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6809:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6809:69:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10316,"nodeType":"ExpressionStatement","src":"6809:69:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10318,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"6896:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10319,"name":"FCFS_MAX_PER_WALLET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"6906:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6896:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564732046434653206c696d6974","id":10321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6927:20:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_91ca8a12ecf939f13af442703c96e9fd0f5834d78f928d2ed6de087480ca3248","typeString":"literal_string \"Exceeds FCFS limit\""},"value":"Exceeds FCFS limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91ca8a12ecf939f13af442703c96e9fd0f5834d78f928d2ed6de087480ca3248","typeString":"literal_string \"Exceeds FCFS limit\""}],"id":10317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6888:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6888:60:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10323,"nodeType":"ExpressionStatement","src":"6888:60:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6966:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6970:5:34","memberName":"value","nodeType":"MemberAccess","src":"6966:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10327,"name":"FCFS_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"6979:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10328,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"6992:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6966:32:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":10331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7000:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":10324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6958:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6958:65:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10333,"nodeType":"ExpressionStatement","src":"6958:65:34"},{"assignments":[10335],"declarations":[{"constant":false,"id":10335,"mutability":"mutable","name":"account","nameLocation":"7042:7:34","nodeType":"VariableDeclaration","scope":10440,"src":"7034:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10334,"name":"address","nodeType":"ElementaryTypeName","src":"7034:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10339,"initialValue":{"arguments":[{"id":10337,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10294,"src":"7064:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10336,"name":"_getAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"7052:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":10338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7034:36:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10341,"name":"mintedPerWalletFCFS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"7088:19:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10343,"indexExpression":{"id":10342,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10335,"src":"7108:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7088:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10344,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"7119:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:37:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10346,"name":"FCFS_MAX_PER_WALLET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"7129:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:60:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564732077616c6c6574206c696d6974","id":10348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7150:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_750251c989841039a10877e00a4532ed4e1fd895f8479952e843ccab613d1605","typeString":"literal_string \"Exceeds wallet limit\""},"value":"Exceeds wallet limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_750251c989841039a10877e00a4532ed4e1fd895f8479952e843ccab613d1605","typeString":"literal_string \"Exceeds wallet limit\""}],"id":10340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:93:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10350,"nodeType":"ExpressionStatement","src":"7080:93:34"},{"assignments":[10352],"declarations":[{"constant":false,"id":10352,"mutability":"mutable","name":"leaf","nameLocation":"7192:4:34","nodeType":"VariableDeclaration","scope":10440,"src":"7184:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7184:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10359,"initialValue":{"arguments":[{"arguments":[{"id":10356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10335,"src":"7226:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10354,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7209:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7213:12:34","memberName":"encodePacked","nodeType":"MemberAccess","src":"7209:16:34","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10353,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7199:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7199:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7184:51:34"},{"expression":{"arguments":[{"arguments":[{"id":10363,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10297,"src":"7272:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":10364,"name":"fcfsMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"7285:14:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10365,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10352,"src":"7301:4:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10361,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"7253:11:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$6251_$","typeString":"type(library MerkleProof)"}},"id":10362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7265:6:34","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":5207,"src":"7253:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":10366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:53:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204d65726b6c652070726f6f66","id":10367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7308:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfff98aea1f4314a786c0426b520c2e5600fd9bdeb9d59d5d51311c13153d3c6","typeString":"literal_string \"Invalid Merkle proof\""},"value":"Invalid Merkle proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfff98aea1f4314a786c0426b520c2e5600fd9bdeb9d59d5d51311c13153d3c6","typeString":"literal_string \"Invalid Merkle proof\""}],"id":10360,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7245:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7245:86:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10369,"nodeType":"ExpressionStatement","src":"7245:86:34"},{"expression":{"id":10374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10370,"name":"mintedPerWalletFCFS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"7342:19:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10372,"indexExpression":{"id":10371,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10335,"src":"7362:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7342:28:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10373,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"7374:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7342:38:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10375,"nodeType":"ExpressionStatement","src":"7342:38:34"},{"body":{"id":10410,"nodeType":"Block","src":"7427:209:34","statements":[{"expression":{"id":10387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7441:13:34","subExpression":{"id":10386,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"7441:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10388,"nodeType":"ExpressionStatement","src":"7441:13:34"},{"expression":{"arguments":[{"expression":{"id":10390,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7478:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7482:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7478:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10392,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"7490:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10389,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1204,1234],"referencedDeclaration":1204,"src":"7468:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7468:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10394,"nodeType":"ExpressionStatement","src":"7468:34:34"},{"expression":{"arguments":[{"id":10398,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"7548:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7561:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7561:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":10401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7573:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":10395,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"7516:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7534:13:34","memberName":"mintAndRecord","nodeType":"MemberAccess","referencedDeclaration":11881,"src":"7516:31:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) external"}},"id":10402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7516:59:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10403,"nodeType":"ExpressionStatement","src":"7516:59:34"},{"eventCall":{"arguments":[{"expression":{"id":10405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7601:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7601:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10407,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"7613:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10404,"name":"Minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"7594:6:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7594:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10409,"nodeType":"EmitStatement","src":"7589:36:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10380,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10377,"src":"7410:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10381,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"7414:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7410:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10411,"initializationExpression":{"assignments":[10377],"declarations":[{"constant":false,"id":10377,"mutability":"mutable","name":"i","nameLocation":"7403:1:34","nodeType":"VariableDeclaration","scope":10411,"src":"7395:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10376,"name":"uint256","nodeType":"ElementaryTypeName","src":"7395:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10379,"initialValue":{"hexValue":"30","id":10378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7407:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7395:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7422:3:34","subExpression":{"id":10383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10377,"src":"7422:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10385,"nodeType":"ExpressionStatement","src":"7422:3:34"},"nodeType":"ForStatement","src":"7390:246:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7650:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7654:5:34","memberName":"value","nodeType":"MemberAccess","src":"7650:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10414,"name":"FCFS_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"7662:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"7675:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7662:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7650:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10439,"nodeType":"IfStatement","src":"7646:181:34","trueBody":{"id":10438,"nodeType":"Block","src":"7683:144:34","statements":[{"assignments":[10419,null],"declarations":[{"constant":false,"id":10419,"mutability":"mutable","name":"sent","nameLocation":"7703:4:34","nodeType":"VariableDeclaration","scope":10438,"src":"7698:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10418,"name":"bool","nodeType":"ElementaryTypeName","src":"7698:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10432,"initialValue":{"arguments":[{"hexValue":"","id":10430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7769:2:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":10420,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7713:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7717:6:34","memberName":"sender","nodeType":"MemberAccess","src":"7713:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7724:4:34","memberName":"call","nodeType":"MemberAccess","src":"7713:15:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7736:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7740:5:34","memberName":"value","nodeType":"MemberAccess","src":"7736:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10425,"name":"FCFS_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"7748:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10292,"src":"7761:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7748:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7736:31:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7713:55:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7713:59:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7697:75:34"},{"expression":{"arguments":[{"id":10434,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10419,"src":"7794:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":10435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7800:15:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":10433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7786:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7786:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10437,"nodeType":"ExpressionStatement","src":"7786:30:34"}]}}]},"functionSelector":"18919d62","id":10441,"implemented":true,"kind":"function","modifiers":[{"id":10300,"kind":"modifierInvocation","modifierName":{"id":10299,"name":"nonReentrant","nameLocations":["6719:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"6719:12:34"},"nodeType":"ModifierInvocation","src":"6719:12:34"}],"name":"mintFCFS","nameLocation":"6630:8:34","nodeType":"FunctionDefinition","parameters":{"id":10298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10292,"mutability":"mutable","name":"amount","nameLocation":"6647:6:34","nodeType":"VariableDeclaration","scope":10441,"src":"6639:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6639:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10294,"mutability":"mutable","name":"vault","nameLocation":"6663:5:34","nodeType":"VariableDeclaration","scope":10441,"src":"6655:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10293,"name":"address","nodeType":"ElementaryTypeName","src":"6655:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10297,"mutability":"mutable","name":"merkleProof","nameLocation":"6689:11:34","nodeType":"VariableDeclaration","scope":10441,"src":"6670:30:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6670:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10296,"nodeType":"ArrayTypeName","src":"6670:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6638:63:34"},"returnParameters":{"id":10301,"nodeType":"ParameterList","parameters":[],"src":"6732:0:34"},"scope":10906,"src":"6621:1297:34","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":10563,"nodeType":"Block","src":"8064:922:34","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10449,"name":"isPublicMintActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10669,"src":"8082:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":10450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8082:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5075626c6963206d696e74207068617365206e6f7420616374697665","id":10451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8104:30:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca8f6fb075653edb96d327e326ea98b73d22b30ed7a980f7b71903f0aaa59534","typeString":"literal_string \"Public mint phase not active\""},"value":"Public mint phase not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca8f6fb075653edb96d327e326ea98b73d22b30ed7a980f7b71903f0aaa59534","typeString":"literal_string \"Public mint phase not active\""}],"id":10448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8074:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:61:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10453,"nodeType":"ExpressionStatement","src":"8074:61:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10455,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"8153:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8167:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8153:20:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10458,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"8177:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8153:36:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320746f74616c20737570706c79","id":10460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8191:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""},"value":"Exceeds total supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565e1481a2e007f3a4ee5a55daa721053a2021d207f4fb284a9d73ea0dfa471c","typeString":"literal_string \"Exceeds total supply\""}],"id":10454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8145:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8145:69:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10462,"nodeType":"ExpressionStatement","src":"8145:69:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8232:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10465,"name":"PUBLIC_MAX_PER_WALLET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"8242:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8232:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473207075626c6963206c696d6974","id":10467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8265:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c57cdf2abf08f61a0c6daf541d9e54d05ce22d5080b8c13053a8007f2ca10c0","typeString":"literal_string \"Exceeds public limit\""},"value":"Exceeds public limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c57cdf2abf08f61a0c6daf541d9e54d05ce22d5080b8c13053a8007f2ca10c0","typeString":"literal_string \"Exceeds public limit\""}],"id":10463,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8224:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8224:64:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10469,"nodeType":"ExpressionStatement","src":"8224:64:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10471,"name":"mintedPerWalletPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9906,"src":"8306:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10474,"indexExpression":{"expression":{"id":10472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8328:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8332:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8328:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8306:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10475,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8342:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8306:42:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10477,"name":"PUBLIC_MAX_PER_WALLET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"8352:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8306:67:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564732077616c6c6574206c696d6974","id":10479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8375:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_750251c989841039a10877e00a4532ed4e1fd895f8479952e843ccab613d1605","typeString":"literal_string \"Exceeds wallet limit\""},"value":"Exceeds wallet limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_750251c989841039a10877e00a4532ed4e1fd895f8479952e843ccab613d1605","typeString":"literal_string \"Exceeds wallet limit\""}],"id":10470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8298:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8298:100:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10481,"nodeType":"ExpressionStatement","src":"8298:100:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8416:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8420:5:34","memberName":"value","nodeType":"MemberAccess","src":"8416:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10485,"name":"PUBLIC_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9845,"src":"8429:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10486,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8444:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8429:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8416:34:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":10489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8452:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":10482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8408:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8408:67:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10491,"nodeType":"ExpressionStatement","src":"8408:67:34"},{"expression":{"id":10497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10492,"name":"mintedPerWalletPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9906,"src":"8486:21:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10495,"indexExpression":{"expression":{"id":10493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8508:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8512:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8508:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8486:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10496,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8523:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8486:43:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10498,"nodeType":"ExpressionStatement","src":"8486:43:34"},{"body":{"id":10533,"nodeType":"Block","src":"8576:209:34","statements":[{"expression":{"id":10510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8590:13:34","subExpression":{"id":10509,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"8590:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10511,"nodeType":"ExpressionStatement","src":"8590:13:34"},{"expression":{"arguments":[{"expression":{"id":10513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8627:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8631:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8627:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10515,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"8639:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10512,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1204,1234],"referencedDeclaration":1204,"src":"8617:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8617:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10517,"nodeType":"ExpressionStatement","src":"8617:34:34"},{"expression":{"arguments":[{"id":10521,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"8697:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10522,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8710:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8714:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8710:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":10524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8722:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":10518,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"8665:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8683:13:34","memberName":"mintAndRecord","nodeType":"MemberAccess","referencedDeclaration":11881,"src":"8665:31:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) external"}},"id":10525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8665:59:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10526,"nodeType":"ExpressionStatement","src":"8665:59:34"},{"eventCall":{"arguments":[{"expression":{"id":10528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8750:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8754:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8750:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10530,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"8762:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10527,"name":"Minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"8743:6:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8743:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10532,"nodeType":"EmitStatement","src":"8738:36:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"8559:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10504,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8563:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8559:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10534,"initializationExpression":{"assignments":[10500],"declarations":[{"constant":false,"id":10500,"mutability":"mutable","name":"i","nameLocation":"8552:1:34","nodeType":"VariableDeclaration","scope":10534,"src":"8544:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10499,"name":"uint256","nodeType":"ElementaryTypeName","src":"8544:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10502,"initialValue":{"hexValue":"30","id":10501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8544:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8571:3:34","subExpression":{"id":10506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"8571:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10508,"nodeType":"ExpressionStatement","src":"8571:3:34"},"nodeType":"ForStatement","src":"8539:246:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8799:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8803:5:34","memberName":"value","nodeType":"MemberAccess","src":"8799:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10537,"name":"PUBLIC_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9845,"src":"8811:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10538,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8826:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8811:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8799:33:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10562,"nodeType":"IfStatement","src":"8795:185:34","trueBody":{"id":10561,"nodeType":"Block","src":"8834:146:34","statements":[{"assignments":[10542,null],"declarations":[{"constant":false,"id":10542,"mutability":"mutable","name":"sent","nameLocation":"8854:4:34","nodeType":"VariableDeclaration","scope":10561,"src":"8849:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10541,"name":"bool","nodeType":"ElementaryTypeName","src":"8849:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10555,"initialValue":{"arguments":[{"hexValue":"","id":10553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8922:2:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":10543,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8864:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8868:6:34","memberName":"sender","nodeType":"MemberAccess","src":"8864:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8875:4:34","memberName":"call","nodeType":"MemberAccess","src":"8864:15:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8887:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8891:5:34","memberName":"value","nodeType":"MemberAccess","src":"8887:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10548,"name":"PUBLIC_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9845,"src":"8899:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10549,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"8914:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8887:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8864:57:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8864:61:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8848:77:34"},{"expression":{"arguments":[{"id":10557,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10542,"src":"8947:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":10558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8953:15:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":10556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8939:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10560,"nodeType":"ExpressionStatement","src":"8939:30:34"}]}}]},"functionSelector":"efd0cbf9","id":10564,"implemented":true,"kind":"function","modifiers":[{"id":10446,"kind":"modifierInvocation","modifierName":{"id":10445,"name":"nonReentrant","nameLocations":["8051:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"8051:12:34"},"nodeType":"ModifierInvocation","src":"8051:12:34"}],"name":"mintPublic","nameLocation":"8007:10:34","nodeType":"FunctionDefinition","parameters":{"id":10444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10443,"mutability":"mutable","name":"amount","nameLocation":"8026:6:34","nodeType":"VariableDeclaration","scope":10564,"src":"8018:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10442,"name":"uint256","nodeType":"ElementaryTypeName","src":"8018:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8017:16:34"},"returnParameters":{"id":10447,"nodeType":"ParameterList","parameters":[],"src":"8064:0:34"},"scope":10906,"src":"7998:988:34","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":10598,"nodeType":"Block","src":"9112:255:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10571,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10566,"src":"9126:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9143:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9135:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10572,"name":"address","nodeType":"ElementaryTypeName","src":"9135:7:34","typeDescriptions":{}}},"id":10575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9135:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9126:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10594,"nodeType":"IfStatement","src":"9122:212:34","trueBody":{"id":10593,"nodeType":"Block","src":"9147:187:34","statements":[{"assignments":[10578],"declarations":[{"constant":false,"id":10578,"mutability":"mutable","name":"isDelegateValid","nameLocation":"9166:15:34","nodeType":"VariableDeclaration","scope":10593,"src":"9161:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10577,"name":"bool","nodeType":"ElementaryTypeName","src":"9161:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10585,"initialValue":{"arguments":[{"expression":{"id":10581,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9221:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9225:6:34","memberName":"sender","nodeType":"MemberAccess","src":"9221:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10583,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10566,"src":"9233:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10579,"name":"delegateRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9878,"src":"9184:16:34","typeDescriptions":{"typeIdentifier":"t_contract$_IDelegateRegistry_$9814","typeString":"contract IDelegateRegistry"}},"id":10580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9201:19:34","memberName":"checkDelegateForAll","nodeType":"MemberAccess","referencedDeclaration":9813,"src":"9184:36:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view external returns (bool)"}},"id":10584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9184:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9161:78:34"},{"expression":{"arguments":[{"id":10587,"name":"isDelegateValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10578,"src":"9261:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642064656c6567617465","id":10588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9278:18:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_10d106d50279b02eba65be278f1fb7131bdfa58e43eeb7bdf9f971cfb6c22c74","typeString":"literal_string \"Invalid delegate\""},"value":"Invalid delegate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10d106d50279b02eba65be278f1fb7131bdfa58e43eeb7bdf9f971cfb6c22c74","typeString":"literal_string \"Invalid delegate\""}],"id":10586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9253:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9253:44:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10590,"nodeType":"ExpressionStatement","src":"9253:44:34"},{"expression":{"id":10591,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10566,"src":"9318:5:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10570,"id":10592,"nodeType":"Return","src":"9311:12:34"}]}},{"expression":{"expression":{"id":10595,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9350:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9354:6:34","memberName":"sender","nodeType":"MemberAccess","src":"9350:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10570,"id":10597,"nodeType":"Return","src":"9343:17:34"}]},"id":10599,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccount","nameLocation":"9053:11:34","nodeType":"FunctionDefinition","parameters":{"id":10567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10566,"mutability":"mutable","name":"vault","nameLocation":"9073:5:34","nodeType":"VariableDeclaration","scope":10599,"src":"9065:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10565,"name":"address","nodeType":"ElementaryTypeName","src":"9065:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9064:15:34"},"returnParameters":{"id":10570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10599,"src":"9103:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10568,"name":"address","nodeType":"ElementaryTypeName","src":"9103:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9102:9:34"},"scope":10906,"src":"9044:323:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10612,"nodeType":"Block","src":"9460:83:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10604,"name":"founderMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"9477:16:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9496:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9477:20:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10607,"name":"founderMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9894,"src":"9501:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10608,"name":"FOUNDER_MINT_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"9517:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9501:35:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9477:59:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10603,"id":10611,"nodeType":"Return","src":"9470:66:34"}]},"functionSelector":"9134d9c2","id":10613,"implemented":true,"kind":"function","modifiers":[],"name":"isFounderMintActive","nameLocation":"9411:19:34","nodeType":"FunctionDefinition","parameters":{"id":10600,"nodeType":"ParameterList","parameters":[],"src":"9430:2:34"},"returnParameters":{"id":10603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10613,"src":"9454:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10601,"name":"bool","nodeType":"ElementaryTypeName","src":"9454:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9453:6:34"},"scope":10906,"src":"9402:141:34","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10633,"nodeType":"Block","src":"9603:119:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10618,"name":"gtdMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"9620:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9635:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9620:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10621,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9640:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9646:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"9640:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10623,"name":"gtdMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"9658:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10624,"name":"GTD_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9889,"src":"9673:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9658:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9640:45:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9620:65:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10628,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"9689:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10629,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"9703:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:26:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9620:95:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10617,"id":10632,"nodeType":"Return","src":"9613:102:34"}]},"functionSelector":"7726c505","id":10634,"implemented":true,"kind":"function","modifiers":[],"name":"isGTDMintActive","nameLocation":"9558:15:34","nodeType":"FunctionDefinition","parameters":{"id":10614,"nodeType":"ParameterList","parameters":[],"src":"9573:2:34"},"returnParameters":{"id":10617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10634,"src":"9597:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10615,"name":"bool","nodeType":"ElementaryTypeName","src":"9597:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9596:6:34"},"scope":10906,"src":"9549:173:34","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10654,"nodeType":"Block","src":"9783:122:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10639,"name":"fcfsMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"9800:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9816:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9800:17:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10642,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9821:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9827:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"9821:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10644,"name":"fcfsMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"9839:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10645,"name":"FCFS_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9892,"src":"9855:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9821:47:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9800:68:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10649,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"9872:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10650,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"9886:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9872:26:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9800:98:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10638,"id":10653,"nodeType":"Return","src":"9793:105:34"}]},"functionSelector":"34f8f268","id":10655,"implemented":true,"kind":"function","modifiers":[],"name":"isFCFSMintActive","nameLocation":"9737:16:34","nodeType":"FunctionDefinition","parameters":{"id":10635,"nodeType":"ParameterList","parameters":[],"src":"9753:2:34"},"returnParameters":{"id":10638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10655,"src":"9777:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10636,"name":"bool","nodeType":"ElementaryTypeName","src":"9777:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9776:6:34"},"scope":10906,"src":"9728:177:34","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10668,"nodeType":"Block","src":"9968:73:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10660,"name":"publicMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"9985:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10003:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9985:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10663,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"10008:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10664,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"10022:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10008:26:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:49:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10659,"id":10667,"nodeType":"Return","src":"9978:56:34"}]},"functionSelector":"2d6b6224","id":10669,"implemented":true,"kind":"function","modifiers":[],"name":"isPublicMintActive","nameLocation":"9920:18:34","nodeType":"FunctionDefinition","parameters":{"id":10656,"nodeType":"ParameterList","parameters":[],"src":"9938:2:34"},"returnParameters":{"id":10659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10669,"src":"9962:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10657,"name":"bool","nodeType":"ElementaryTypeName","src":"9962:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9961:6:34"},"scope":10906,"src":"9911:130:34","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10693,"nodeType":"Block","src":"10162:155:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10675,"name":"gtdMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"10180:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10195:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10180:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10678,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10200:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10206:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"10200:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10680,"name":"gtdMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"10219:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10681,"name":"GTD_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9889,"src":"10234:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10219:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10200:46:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10180:66:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"475444206d696e74206e6f7420656e646564","id":10685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10248:20:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_30ae1a2585e2baac675cb6e7b523bdc9940914e698545c07ebcbe8382f609582","typeString":"literal_string \"GTD mint not ended\""},"value":"GTD mint not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30ae1a2585e2baac675cb6e7b523bdc9940914e698545c07ebcbe8382f609582","typeString":"literal_string \"GTD mint not ended\""}],"id":10674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10172:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10172:97:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10687,"nodeType":"ExpressionStatement","src":"10172:97:34"},{"expression":{"id":10691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10688,"name":"fcfsMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"10279:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10689,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10295:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10301:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"10295:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10279:31:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10692,"nodeType":"ExpressionStatement","src":"10279:31:34"}]},"functionSelector":"a3eca3ed","id":10694,"implemented":true,"kind":"function","modifiers":[{"id":10672,"kind":"modifierInvocation","modifierName":{"id":10671,"name":"onlyOwner","nameLocations":["10152:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"10152:9:34"},"nodeType":"ModifierInvocation","src":"10152:9:34"}],"name":"startFCFSMint","nameLocation":"10127:13:34","nodeType":"FunctionDefinition","parameters":{"id":10670,"nodeType":"ParameterList","parameters":[],"src":"10140:2:34"},"returnParameters":{"id":10673,"nodeType":"ParameterList","parameters":[],"src":"10162:0:34"},"scope":10906,"src":"10118:199:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10718,"nodeType":"Block","src":"10369:161:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10700,"name":"fcfsMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"10387:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10387:17:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10703,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10408:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10414:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"10408:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10705,"name":"fcfsMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"10427:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10706,"name":"FCFS_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9892,"src":"10443:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10427:29:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10408:48:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10387:69:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46434653206d696e74206e6f7420656e646564","id":10710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10458:21:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d54cf958392fd558b784fa3fb52b044f55a997ab93472865c1a1a6e5de6559","typeString":"literal_string \"FCFS mint not ended\""},"value":"FCFS mint not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32d54cf958392fd558b784fa3fb52b044f55a997ab93472865c1a1a6e5de6559","typeString":"literal_string \"FCFS mint not ended\""}],"id":10699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10379:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10379:101:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10712,"nodeType":"ExpressionStatement","src":"10379:101:34"},{"expression":{"id":10716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10713,"name":"publicMintStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"10490:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10714,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10508:5:34","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10514:9:34","memberName":"timestamp","nodeType":"MemberAccess","src":"10508:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10490:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10717,"nodeType":"ExpressionStatement","src":"10490:33:34"}]},"functionSelector":"76c64c62","id":10719,"implemented":true,"kind":"function","modifiers":[{"id":10697,"kind":"modifierInvocation","modifierName":{"id":10696,"name":"onlyOwner","nameLocations":["10359:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"10359:9:34"},"nodeType":"ModifierInvocation","src":"10359:9:34"}],"name":"startPublicMint","nameLocation":"10332:15:34","nodeType":"FunctionDefinition","parameters":{"id":10695,"nodeType":"ParameterList","parameters":[],"src":"10347:2:34"},"returnParameters":{"id":10698,"nodeType":"ParameterList","parameters":[],"src":"10369:0:34"},"scope":10906,"src":"10323:207:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[724],"body":{"id":10737,"nodeType":"Block","src":"10673:96:34","statements":[{"expression":{"arguments":[{"id":10730,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10721,"src":"10714:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10731,"name":"prerevealNoiseBase64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9875,"src":"10723:20:34","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":10733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10721,"src":"10753:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10732,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"10745:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10728,"name":"metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"10690:11:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"id":10729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10702:11:34","memberName":"getTokenURI","nodeType":"MemberAccess","referencedDeclaration":11402,"src":"10690:23:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,string memory,address) view external returns (string memory)"}},"id":10735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10690:72:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":10727,"id":10736,"nodeType":"Return","src":"10683:79:34"}]},"functionSelector":"c87b56dd","id":10738,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"10583:8:34","nodeType":"FunctionDefinition","overrides":{"id":10724,"nodeType":"OverrideSpecifier","overrides":[{"id":10723,"name":"ERC721Upgradeable","nameLocations":["10630:17:34"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"10630:17:34"}],"src":"10621:27:34"},"parameters":{"id":10722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10721,"mutability":"mutable","name":"tokenId","nameLocation":"10600:7:34","nodeType":"VariableDeclaration","scope":10738,"src":"10592:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10720,"name":"uint256","nodeType":"ElementaryTypeName","src":"10592:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10591:17:34"},"returnParameters":{"id":10727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10738,"src":"10658:13:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10725,"name":"string","nodeType":"ElementaryTypeName","src":"10658:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10657:15:34"},"scope":10906,"src":"10574:195:34","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1139],"body":{"id":10782,"nodeType":"Block","src":"10879:204:34","statements":[{"assignments":[10751],"declarations":[{"constant":false,"id":10751,"mutability":"mutable","name":"from","nameLocation":"10897:4:34","nodeType":"VariableDeclaration","scope":10782,"src":"10889:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10750,"name":"address","nodeType":"ElementaryTypeName","src":"10889:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10758,"initialValue":{"arguments":[{"id":10754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10740,"src":"10918:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10742,"src":"10922:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10756,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10744,"src":"10931:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10752,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10904:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ApeBeatsGenesis_$10906_$","typeString":"type(contract super ApeBeatsGenesis)"}},"id":10753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10910:7:34","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"10904:13:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":10757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10904:32:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10889:47:34"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10759,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10751,"src":"10950:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10966:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10958:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10760,"name":"address","nodeType":"ElementaryTypeName","src":"10958:7:34","typeDescriptions":{}}},"id":10763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10958:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10950:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10765,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10740,"src":"10972:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10986:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10978:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10766,"name":"address","nodeType":"ElementaryTypeName","src":"10978:7:34","typeDescriptions":{}}},"id":10769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10978:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10972:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10950:38:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10779,"nodeType":"IfStatement","src":"10946:110:34","trueBody":{"id":10778,"nodeType":"Block","src":"10990:66:34","statements":[{"expression":{"arguments":[{"id":10775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10742,"src":"11037:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10772,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"11004:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11022:14:34","memberName":"recordTransfer","nodeType":"MemberAccess","referencedDeclaration":11835,"src":"11004:32:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":10776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11004:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10777,"nodeType":"ExpressionStatement","src":"11004:41:34"}]}},{"expression":{"id":10780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10751,"src":"11072:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10749,"id":10781,"nodeType":"Return","src":"11065:11:34"}]},"id":10783,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"10784:7:34","nodeType":"FunctionDefinition","overrides":{"id":10746,"nodeType":"OverrideSpecifier","overrides":[],"src":"10852:8:34"},"parameters":{"id":10745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10740,"mutability":"mutable","name":"to","nameLocation":"10800:2:34","nodeType":"VariableDeclaration","scope":10783,"src":"10792:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10739,"name":"address","nodeType":"ElementaryTypeName","src":"10792:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10742,"mutability":"mutable","name":"tokenId","nameLocation":"10812:7:34","nodeType":"VariableDeclaration","scope":10783,"src":"10804:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10741,"name":"uint256","nodeType":"ElementaryTypeName","src":"10804:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10744,"mutability":"mutable","name":"auth","nameLocation":"10829:4:34","nodeType":"VariableDeclaration","scope":10783,"src":"10821:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10743,"name":"address","nodeType":"ElementaryTypeName","src":"10821:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10791:43:34"},"returnParameters":{"id":10749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10783,"src":"10870:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10747,"name":"address","nodeType":"ElementaryTypeName","src":"10870:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10869:9:34"},"scope":10906,"src":"10775:308:34","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10793,"nodeType":"Block","src":"11137:51:34","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10788,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"11147:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11165:14:34","memberName":"claimRoyalties","nodeType":"MemberAccess","referencedDeclaration":11628,"src":"11147:32:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":10791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10792,"nodeType":"ExpressionStatement","src":"11147:34:34"}]},"functionSelector":"069b7820","id":10794,"implemented":true,"kind":"function","modifiers":[{"id":10786,"kind":"modifierInvocation","modifierName":{"id":10785,"name":"nonReentrant","nameLocations":["11124:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"11124:12:34"},"nodeType":"ModifierInvocation","src":"11124:12:34"}],"name":"claimRoyalties","nameLocation":"11098:14:34","nodeType":"FunctionDefinition","parameters":{"id":10784,"nodeType":"ParameterList","parameters":[],"src":"11112:2:34"},"returnParameters":{"id":10787,"nodeType":"ParameterList","parameters":[],"src":"11137:0:34"},"scope":10906,"src":"11089:99:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10804,"nodeType":"Block","src":"11246:55:34","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10799,"name":"royaltiesContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9873,"src":"11256:17:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsRoyalties_$11902","typeString":"contract ApeBeatsRoyalties"}},"id":10801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11274:18:34","memberName":"claimPoolRoyalties","nodeType":"MemberAccess","referencedDeclaration":11771,"src":"11256:36:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":10802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11256:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10803,"nodeType":"ExpressionStatement","src":"11256:38:34"}]},"functionSelector":"d67f8d0b","id":10805,"implemented":true,"kind":"function","modifiers":[{"id":10797,"kind":"modifierInvocation","modifierName":{"id":10796,"name":"nonReentrant","nameLocations":["11233:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"11233:12:34"},"nodeType":"ModifierInvocation","src":"11233:12:34"}],"name":"claimPoolRoyalties","nameLocation":"11203:18:34","nodeType":"FunctionDefinition","parameters":{"id":10795,"nodeType":"ParameterList","parameters":[],"src":"11221:2:34"},"returnParameters":{"id":10798,"nodeType":"ParameterList","parameters":[],"src":"11246:0:34"},"scope":10906,"src":"11194:107:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10839,"nodeType":"Block","src":"11346:213:34","statements":[{"assignments":[10811],"declarations":[{"constant":false,"id":10811,"mutability":"mutable","name":"balance","nameLocation":"11364:7:34","nodeType":"VariableDeclaration","scope":10839,"src":"11356:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10810,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10817,"initialValue":{"expression":{"arguments":[{"id":10814,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11382:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsGenesis_$10906","typeString":"contract ApeBeatsGenesis"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ApeBeatsGenesis_$10906","typeString":"contract ApeBeatsGenesis"}],"id":10813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11374:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10812,"name":"address","nodeType":"ElementaryTypeName","src":"11374:7:34","typeDescriptions":{}}},"id":10815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11374:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11388:7:34","memberName":"balance","nodeType":"MemberAccess","src":"11374:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11356:39:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10819,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10811,"src":"11413:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11423:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11413:11:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2066756e647320746f207769746864726177","id":10822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:22:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""},"value":"No funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""}],"id":10818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11405:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11405:44:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10824,"nodeType":"ExpressionStatement","src":"11405:44:34"},{"assignments":[10826,null],"declarations":[{"constant":false,"id":10826,"mutability":"mutable","name":"sent","nameLocation":"11465:4:34","nodeType":"VariableDeclaration","scope":10839,"src":"11460:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10825,"name":"bool","nodeType":"ElementaryTypeName","src":"11460:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10833,"initialValue":{"arguments":[{"hexValue":"","id":10831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11505:2:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":10827,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"11475:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11484:4:34","memberName":"call","nodeType":"MemberAccess","src":"11475:13:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10829,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10811,"src":"11496:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11475:29:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11475:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11459:49:34"},{"expression":{"arguments":[{"id":10835,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10826,"src":"11526:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c206661696c6564","id":10836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11532:19:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""},"value":"Withdrawal failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""}],"id":10834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11518:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11518:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10838,"nodeType":"ExpressionStatement","src":"11518:34:34"}]},"functionSelector":"3ccfd60b","id":10840,"implemented":true,"kind":"function","modifiers":[{"id":10808,"kind":"modifierInvocation","modifierName":{"id":10807,"name":"onlyOwner","nameLocations":["11336:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"11336:9:34"},"nodeType":"ModifierInvocation","src":"11336:9:34"}],"name":"withdraw","nameLocation":"11316:8:34","nodeType":"FunctionDefinition","parameters":{"id":10806,"nodeType":"ParameterList","parameters":[],"src":"11324:2:34"},"returnParameters":{"id":10809,"nodeType":"ParameterList","parameters":[],"src":"11346:0:34"},"scope":10906,"src":"11307:252:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10853,"nodeType":"Block","src":"11621:51:34","statements":[{"expression":{"arguments":[{"id":10850,"name":"_revealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10842,"src":"11655:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":10847,"name":"metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"11631:11:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"id":10849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11643:11:34","memberName":"setRevealed","nodeType":"MemberAccess","referencedDeclaration":11006,"src":"11631:23:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bool_$returns$__$","typeString":"function (bool) external"}},"id":10851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11631:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10852,"nodeType":"ExpressionStatement","src":"11631:34:34"}]},"functionSelector":"e0a80853","id":10854,"implemented":true,"kind":"function","modifiers":[{"id":10845,"kind":"modifierInvocation","modifierName":{"id":10844,"name":"onlyOwner","nameLocations":["11611:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"11611:9:34"},"nodeType":"ModifierInvocation","src":"11611:9:34"}],"name":"setRevealed","nameLocation":"11574:11:34","nodeType":"FunctionDefinition","parameters":{"id":10843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10842,"mutability":"mutable","name":"_revealed","nameLocation":"11591:9:34","nodeType":"VariableDeclaration","scope":10854,"src":"11586:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10841,"name":"bool","nodeType":"ElementaryTypeName","src":"11586:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11585:16:34"},"returnParameters":{"id":10846,"nodeType":"ParameterList","parameters":[],"src":"11621:0:34"},"scope":10906,"src":"11565:107:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10870,"nodeType":"Block","src":"11757:57:34","statements":[{"expression":{"arguments":[{"id":10866,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10856,"src":"11794:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10867,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10858,"src":"11803:3:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":10863,"name":"metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"11767:11:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"id":10865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11779:14:34","memberName":"setWaveformURI","nodeType":"MemberAccess","referencedDeclaration":11032,"src":"11767:26:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) external"}},"id":10868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11767:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10869,"nodeType":"ExpressionStatement","src":"11767:40:34"}]},"functionSelector":"7d330cdd","id":10871,"implemented":true,"kind":"function","modifiers":[{"id":10861,"kind":"modifierInvocation","modifierName":{"id":10860,"name":"onlyOwner","nameLocations":["11747:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"11747:9:34"},"nodeType":"ModifierInvocation","src":"11747:9:34"}],"name":"setWaveformURI","nameLocation":"11687:14:34","nodeType":"FunctionDefinition","parameters":{"id":10859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10856,"mutability":"mutable","name":"tokenId","nameLocation":"11710:7:34","nodeType":"VariableDeclaration","scope":10871,"src":"11702:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10855,"name":"uint256","nodeType":"ElementaryTypeName","src":"11702:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10858,"mutability":"mutable","name":"uri","nameLocation":"11733:3:34","nodeType":"VariableDeclaration","scope":10871,"src":"11719:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10857,"name":"string","nodeType":"ElementaryTypeName","src":"11719:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11701:36:34"},"returnParameters":{"id":10862,"nodeType":"ParameterList","parameters":[],"src":"11757:0:34"},"scope":10906,"src":"11678:136:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10887,"nodeType":"Block","src":"11901:59:34","statements":[{"expression":{"arguments":[{"id":10883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10873,"src":"11940:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10884,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10875,"src":"11949:3:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":10880,"name":"metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"11911:11:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"id":10882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11923:16:34","memberName":"setMixedAudioURI","nodeType":"MemberAccess","referencedDeclaration":11053,"src":"11911:28:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) external"}},"id":10885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11911:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10886,"nodeType":"ExpressionStatement","src":"11911:42:34"}]},"functionSelector":"0fb51ac4","id":10888,"implemented":true,"kind":"function","modifiers":[{"id":10878,"kind":"modifierInvocation","modifierName":{"id":10877,"name":"onlyOwner","nameLocations":["11891:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"11891:9:34"},"nodeType":"ModifierInvocation","src":"11891:9:34"}],"name":"setMixedAudioURI","nameLocation":"11829:16:34","nodeType":"FunctionDefinition","parameters":{"id":10876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10873,"mutability":"mutable","name":"tokenId","nameLocation":"11854:7:34","nodeType":"VariableDeclaration","scope":10888,"src":"11846:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10872,"name":"uint256","nodeType":"ElementaryTypeName","src":"11846:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10875,"mutability":"mutable","name":"uri","nameLocation":"11877:3:34","nodeType":"VariableDeclaration","scope":10888,"src":"11863:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10874,"name":"string","nodeType":"ElementaryTypeName","src":"11863:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11845:36:34"},"returnParameters":{"id":10879,"nodeType":"ParameterList","parameters":[],"src":"11901:0:34"},"scope":10906,"src":"11820:140:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10904,"nodeType":"Block","src":"12018:62:34","statements":[{"expression":{"arguments":[{"id":10898,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10890,"src":"12047:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":10900,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10890,"src":"12064:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10899,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"12056:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10895,"name":"metadataLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"12028:11:34","typeDescriptions":{"typeIdentifier":"t_contract$_ApeBeatsMetadataLib_$11403","typeString":"contract ApeBeatsMetadataLib"}},"id":10897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12040:6:34","memberName":"reveal","nodeType":"MemberAccess","referencedDeclaration":11176,"src":"12028:18:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":10902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12028:45:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10903,"nodeType":"ExpressionStatement","src":"12028:45:34"}]},"functionSelector":"c2ca0ac5","id":10905,"implemented":true,"kind":"function","modifiers":[{"id":10893,"kind":"modifierInvocation","modifierName":{"id":10892,"name":"onlyOwner","nameLocations":["12008:9:34"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"12008:9:34"},"nodeType":"ModifierInvocation","src":"12008:9:34"}],"name":"reveal","nameLocation":"11975:6:34","nodeType":"FunctionDefinition","parameters":{"id":10891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10890,"mutability":"mutable","name":"tokenId","nameLocation":"11990:7:34","nodeType":"VariableDeclaration","scope":10905,"src":"11982:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10889,"name":"uint256","nodeType":"ElementaryTypeName","src":"11982:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11981:17:34"},"returnParameters":{"id":10894,"nodeType":"ParameterList","parameters":[],"src":"12018:0:34"},"scope":10906,"src":"11966:114:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10907,"src":"829:11253:34","usedErrors":[30,35,211,214,1639,1644,1653,1660,2002,2377,2382,2391,2396,2401,2408,2413,2418],"usedEvents":[41,219,2860,2869,2878,9912]}],"src":"32:12051:34"},"id":34},"contracts/ApeBeatsMetadataLib.sol":{"ast":{"absolutePath":"contracts/ApeBeatsMetadataLib.sol","exportedSymbols":{"ApeBeatsMetadataLib":[11403],"Base64":[3439],"Context":[3469],"Math":[7884],"Ownable":[2288],"SafeCast":[9649],"SignedMath":[9793],"Strings":[5138]},"id":11404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10908,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:35"},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":10909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11404,"sourceUnit":3440,"src":"58:50:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":10910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11404,"sourceUnit":5139,"src":"109:51:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":10911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11404,"sourceUnit":2289,"src":"161:52:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10912,"name":"Ownable","nameLocations":["247:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"247:7:35"},"id":10913,"nodeType":"InheritanceSpecifier","src":"247:7:35"}],"canonicalName":"ApeBeatsMetadataLib","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":11403,"linearizedBaseContracts":[11403,2288,3469],"name":"ApeBeatsMetadataLib","nameLocation":"224:19:35","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10916,"libraryName":{"id":10914,"name":"Strings","nameLocations":["267:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"267:7:35"},"nodeType":"UsingForDirective","src":"261:26:35","typeName":{"id":10915,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ApeBeatsMetadataLib.WaveData","id":10929,"members":[{"constant":false,"id":10918,"mutability":"mutable","name":"bass","nameLocation":"325:4:35","nodeType":"VariableDeclaration","scope":10929,"src":"319:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10917,"name":"uint8","nodeType":"ElementaryTypeName","src":"319:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10920,"mutability":"mutable","name":"drums","nameLocation":"345:5:35","nodeType":"VariableDeclaration","scope":10929,"src":"339:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10919,"name":"uint8","nodeType":"ElementaryTypeName","src":"339:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10922,"mutability":"mutable","name":"melody","nameLocation":"366:6:35","nodeType":"VariableDeclaration","scope":10929,"src":"360:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10921,"name":"uint8","nodeType":"ElementaryTypeName","src":"360:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10924,"mutability":"mutable","name":"fx","nameLocation":"388:2:35","nodeType":"VariableDeclaration","scope":10929,"src":"382:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10923,"name":"uint8","nodeType":"ElementaryTypeName","src":"382:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10926,"mutability":"mutable","name":"colorWave","nameLocation":"406:9:35","nodeType":"VariableDeclaration","scope":10929,"src":"400:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10925,"name":"uint8","nodeType":"ElementaryTypeName","src":"400:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10928,"mutability":"mutable","name":"colorBg","nameLocation":"431:7:35","nodeType":"VariableDeclaration","scope":10929,"src":"425:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10927,"name":"uint8","nodeType":"ElementaryTypeName","src":"425:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"WaveData","nameLocation":"300:8:35","nodeType":"StructDefinition","scope":11403,"src":"293:152:35","visibility":"public"},{"constant":false,"functionSelector":"6ad81c74","id":10933,"mutability":"mutable","name":"bassLoops","nameLocation":"468:9:35","nodeType":"VariableDeclaration","scope":11403,"src":"451:26:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string[5]"},"typeName":{"baseType":{"id":10930,"name":"string","nodeType":"ElementaryTypeName","src":"451:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10932,"length":{"hexValue":"35","id":10931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"458:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"451:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"public"},{"constant":false,"functionSelector":"5ac93a0a","id":10937,"mutability":"mutable","name":"drumLoops","nameLocation":"500:9:35","nodeType":"VariableDeclaration","scope":11403,"src":"483:26:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string[5]"},"typeName":{"baseType":{"id":10934,"name":"string","nodeType":"ElementaryTypeName","src":"483:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10936,"length":{"hexValue":"35","id":10935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"490:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"483:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"public"},{"constant":false,"functionSelector":"ab95081d","id":10941,"mutability":"mutable","name":"melodyLoops","nameLocation":"532:11:35","nodeType":"VariableDeclaration","scope":11403,"src":"515:28:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string[5]"},"typeName":{"baseType":{"id":10938,"name":"string","nodeType":"ElementaryTypeName","src":"515:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10940,"length":{"hexValue":"35","id":10939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"522:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"515:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"public"},{"constant":false,"functionSelector":"4dfa177f","id":10945,"mutability":"mutable","name":"fxLoops","nameLocation":"566:7:35","nodeType":"VariableDeclaration","scope":11403,"src":"549:24:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string[5]"},"typeName":{"baseType":{"id":10942,"name":"string","nodeType":"ElementaryTypeName","src":"549:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10944,"length":{"hexValue":"35","id":10943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"556:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"549:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"public"},{"constant":false,"functionSelector":"857a6f5b","id":10961,"mutability":"mutable","name":"COLORS","nameLocation":"597:6:35","nodeType":"VariableDeclaration","scope":11403,"src":"579:148:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$11_storage","typeString":"string[11]"},"typeName":{"baseType":{"id":10946,"name":"string","nodeType":"ElementaryTypeName","src":"579:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":10948,"length":{"hexValue":"3131","id":10947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"586:2:35","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"nodeType":"ArrayTypeName","src":"579:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$11_storage_ptr","typeString":"string[11]"}},"value":{"components":[{"hexValue":"23423946324646","id":10949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"607:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_e29d5da0b76e0137a0ab5b1165dfa6d8e406dc04229fb5098eec7861a8a6fd44","typeString":"literal_string \"#B9F2FF\""},"value":"#B9F2FF"},{"hexValue":"23464644373030","id":10950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"618:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_57d210041527d74b1fa27ce73fda1b41908e22c17692fd2e023df65e0257d6c6","typeString":"literal_string \"#FFD700\""},"value":"#FFD700"},{"hexValue":"23433043304330","id":10951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"629:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_11c2f0d9d2bc7fdf4fcb6cb0def41bf88029318c3f8ad4a5421c1ecc35922c6a","typeString":"literal_string \"#C0C0C0\""},"value":"#C0C0C0"},{"hexValue":"23434437463332","id":10952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"640:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb47c079be56869178fdeeec01a2a76a53dea838384715bbda15dd379f77b241","typeString":"literal_string \"#CD7F32\""},"value":"#CD7F32"},{"hexValue":"5261696e626f77","id":10953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"651:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_520b7e0fa71292fc3580658e9fcf097987149f9bab7aa0a213933370b9f02218","typeString":"literal_string \"Rainbow\""},"value":"Rainbow"},{"hexValue":"23303030303030","id":10954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"662:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c4cb0e0696b02a9382bc32619ef000bc4e01ae21db0ef84d1471c3a02d4092a","typeString":"literal_string \"#000000\""},"value":"#000000"},{"hexValue":"23464630303030","id":10955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"673:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4e0c6fba40a1bd8314d2c0addbfcddc1c01bff1c91293e755ec3d388f77879f","typeString":"literal_string \"#FF0000\""},"value":"#FF0000"},{"hexValue":"23303030304646","id":10956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"684:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_772b6c179c2870589d0d8f55bd3fa72ef895a0e22773aa1982f4b73bd2e85cc7","typeString":"literal_string \"#0000FF\""},"value":"#0000FF"},{"hexValue":"23303046463030","id":10957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"695:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee75ca319e24d189b4ec5e82d842c8ea6b6f7144eeb68247f4f1006fdf5787db","typeString":"literal_string \"#00FF00\""},"value":"#00FF00"},{"hexValue":"23383030303830","id":10958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"706:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f891ba567637fc7759f4a7a8336cda1b40667c15dbac9c22eda46dfdfd62894","typeString":"literal_string \"#800080\""},"value":"#800080"},{"hexValue":"23464641353030","id":10959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"717:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_7eaac63b791080d653a1dbc941b3da98b74b5efc23a6dcb7694adb12ea4e7c25","typeString":"literal_string \"#FFA500\""},"value":"#FFA500"}],"id":10960,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"606:121:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$11_memory_ptr","typeString":"string memory[11] memory"}},"visibility":"public"},{"constant":false,"functionSelector":"51830227","id":10963,"mutability":"mutable","name":"revealed","nameLocation":"746:8:35","nodeType":"VariableDeclaration","scope":11403,"src":"734:20:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10962,"name":"bool","nodeType":"ElementaryTypeName","src":"734:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"32dbd609","id":10968,"mutability":"mutable","name":"waveData","nameLocation":"796:8:35","nodeType":"VariableDeclaration","scope":11403,"src":"760:44:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WaveData_$10929_storage_$","typeString":"mapping(uint256 => struct ApeBeatsMetadataLib.WaveData)"},"typeName":{"id":10967,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10964,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"760:28:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WaveData_$10929_storage_$","typeString":"mapping(uint256 => struct ApeBeatsMetadataLib.WaveData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10966,"nodeType":"UserDefinedTypeName","pathNode":{"id":10965,"name":"WaveData","nameLocations":["779:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":10929,"src":"779:8:35"},"referencedDeclaration":10929,"src":"779:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_storage_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData"}}},"visibility":"public"},{"constant":false,"functionSelector":"c0aa14b6","id":10972,"mutability":"mutable","name":"mixedAudioURIs","nameLocation":"844:14:35","nodeType":"VariableDeclaration","scope":11403,"src":"810:48:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":10971,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10969,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"810:26:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10970,"name":"string","nodeType":"ElementaryTypeName","src":"829:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"1e4f8beb","id":10976,"mutability":"mutable","name":"waveformURIs","nameLocation":"898:12:35","nodeType":"VariableDeclaration","scope":11403,"src":"864:46:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":10975,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10973,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"864:26:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10974,"name":"string","nodeType":"ElementaryTypeName","src":"883:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"a5573bd0","id":10980,"mutability":"mutable","name":"rarityScore","nameLocation":"951:11:35","nodeType":"VariableDeclaration","scope":11403,"src":"916:46:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":10979,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10977,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"916:27:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10978,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"77f0150fb3b30f6451acdccf70cd397383911429734276985d2b689849b00c2d","id":10986,"name":"WaveformURIUpdated","nameLocation":"975:18:35","nodeType":"EventDefinition","parameters":{"id":10985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10982,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1010:7:35","nodeType":"VariableDeclaration","scope":10986,"src":"994:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10981,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10984,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"1026:3:35","nodeType":"VariableDeclaration","scope":10986,"src":"1019:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10983,"name":"string","nodeType":"ElementaryTypeName","src":"1019:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"993:37:35"},"src":"969:62:35"},{"body":{"id":10993,"nodeType":"Block","src":"1071:2:35","statements":[]},"id":10994,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":10989,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1059:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1063:6:35","memberName":"sender","nodeType":"MemberAccess","src":"1059:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10991,"kind":"baseConstructorSpecifier","modifierName":{"id":10988,"name":"Ownable","nameLocations":["1051:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"1051:7:35"},"nodeType":"ModifierInvocation","src":"1051:19:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10987,"nodeType":"ParameterList","parameters":[],"src":"1048:2:35"},"returnParameters":{"id":10992,"nodeType":"ParameterList","parameters":[],"src":"1071:0:35"},"scope":11403,"src":"1037:36:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11005,"nodeType":"Block","src":"1135:37:35","statements":[{"expression":{"id":11003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11001,"name":"revealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"1145:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11002,"name":"_revealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10996,"src":"1156:9:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1145:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11004,"nodeType":"ExpressionStatement","src":"1145:20:35"}]},"functionSelector":"e0a80853","id":11006,"implemented":true,"kind":"function","modifiers":[{"id":10999,"kind":"modifierInvocation","modifierName":{"id":10998,"name":"onlyOwner","nameLocations":["1125:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"1125:9:35"},"nodeType":"ModifierInvocation","src":"1125:9:35"}],"name":"setRevealed","nameLocation":"1088:11:35","nodeType":"FunctionDefinition","parameters":{"id":10997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10996,"mutability":"mutable","name":"_revealed","nameLocation":"1105:9:35","nodeType":"VariableDeclaration","scope":11006,"src":"1100:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10995,"name":"bool","nodeType":"ElementaryTypeName","src":"1100:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1099:16:35"},"returnParameters":{"id":11000,"nodeType":"ParameterList","parameters":[],"src":"1135:0:35"},"scope":11403,"src":"1079:93:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11031,"nodeType":"Block","src":"1257:139:35","statements":[{"expression":{"arguments":[{"id":11016,"name":"revealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"1275:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657665616c206e6f7420616374697665","id":11017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1285:19:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb09d4645b979e7e2c61223aea27580e5de6757a2d738891640f2ca7a479a300","typeString":"literal_string \"Reveal not active\""},"value":"Reveal not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb09d4645b979e7e2c61223aea27580e5de6757a2d738891640f2ca7a479a300","typeString":"literal_string \"Reveal not active\""}],"id":11015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1267:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1267:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11019,"nodeType":"ExpressionStatement","src":"1267:38:35"},{"expression":{"id":11024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11020,"name":"waveformURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10976,"src":"1315:12:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11022,"indexExpression":{"id":11021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11008,"src":"1328:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1315:21:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11023,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11010,"src":"1339:3:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1315:27:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11025,"nodeType":"ExpressionStatement","src":"1315:27:35"},{"eventCall":{"arguments":[{"id":11027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11008,"src":"1376:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11028,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11010,"src":"1385:3:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":11026,"name":"WaveformURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10986,"src":"1357:18:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":11029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1357:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11030,"nodeType":"EmitStatement","src":"1352:37:35"}]},"functionSelector":"7d330cdd","id":11032,"implemented":true,"kind":"function","modifiers":[{"id":11013,"kind":"modifierInvocation","modifierName":{"id":11012,"name":"onlyOwner","nameLocations":["1247:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"1247:9:35"},"nodeType":"ModifierInvocation","src":"1247:9:35"}],"name":"setWaveformURI","nameLocation":"1187:14:35","nodeType":"FunctionDefinition","parameters":{"id":11011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11008,"mutability":"mutable","name":"tokenId","nameLocation":"1210:7:35","nodeType":"VariableDeclaration","scope":11032,"src":"1202:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1202:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11010,"mutability":"mutable","name":"uri","nameLocation":"1233:3:35","nodeType":"VariableDeclaration","scope":11032,"src":"1219:17:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11009,"name":"string","nodeType":"ElementaryTypeName","src":"1219:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1201:36:35"},"returnParameters":{"id":11014,"nodeType":"ParameterList","parameters":[],"src":"1257:0:35"},"scope":11403,"src":"1178:218:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11052,"nodeType":"Block","src":"1483:94:35","statements":[{"expression":{"arguments":[{"id":11042,"name":"revealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"1501:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657665616c206e6f7420616374697665","id":11043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1511:19:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb09d4645b979e7e2c61223aea27580e5de6757a2d738891640f2ca7a479a300","typeString":"literal_string \"Reveal not active\""},"value":"Reveal not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb09d4645b979e7e2c61223aea27580e5de6757a2d738891640f2ca7a479a300","typeString":"literal_string \"Reveal not active\""}],"id":11041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1493:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1493:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11045,"nodeType":"ExpressionStatement","src":"1493:38:35"},{"expression":{"id":11050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11046,"name":"mixedAudioURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10972,"src":"1541:14:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11048,"indexExpression":{"id":11047,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11034,"src":"1556:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1541:23:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11049,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11036,"src":"1567:3:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1541:29:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11051,"nodeType":"ExpressionStatement","src":"1541:29:35"}]},"functionSelector":"0fb51ac4","id":11053,"implemented":true,"kind":"function","modifiers":[{"id":11039,"kind":"modifierInvocation","modifierName":{"id":11038,"name":"onlyOwner","nameLocations":["1473:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"1473:9:35"},"nodeType":"ModifierInvocation","src":"1473:9:35"}],"name":"setMixedAudioURI","nameLocation":"1411:16:35","nodeType":"FunctionDefinition","parameters":{"id":11037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11034,"mutability":"mutable","name":"tokenId","nameLocation":"1436:7:35","nodeType":"VariableDeclaration","scope":11053,"src":"1428:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11036,"mutability":"mutable","name":"uri","nameLocation":"1459:3:35","nodeType":"VariableDeclaration","scope":11053,"src":"1445:17:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11035,"name":"string","nodeType":"ElementaryTypeName","src":"1445:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1427:36:35"},"returnParameters":{"id":11040,"nodeType":"ParameterList","parameters":[],"src":"1483:0:35"},"scope":11403,"src":"1402:175:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11175,"nodeType":"Block","src":"1655:725:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11063,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11057,"src":"1673:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1695:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1687:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11064,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:35","typeDescriptions":{}}},"id":11067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1673:24:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":11069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1699:22:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":11062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1665:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:57:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11071,"nodeType":"ExpressionStatement","src":"1665:57:35"},{"expression":{"arguments":[{"id":11073,"name":"revealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"1740:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657665616c206e6f7420616374697665","id":11074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1750:19:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb09d4645b979e7e2c61223aea27580e5de6757a2d738891640f2ca7a479a300","typeString":"literal_string \"Reveal not active\""},"value":"Reveal not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb09d4645b979e7e2c61223aea27580e5de6757a2d738891640f2ca7a479a300","typeString":"literal_string \"Reveal not active\""}],"id":11072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1732:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11076,"nodeType":"ExpressionStatement","src":"1732:38:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":11080,"name":"mixedAudioURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10972,"src":"1794:14:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11082,"indexExpression":{"id":11081,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11055,"src":"1809:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1794:23:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":11079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1788:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11078,"name":"bytes","nodeType":"ElementaryTypeName","src":"1788:5:35","typeDescriptions":{}}},"id":11083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1788:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":11084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:35","memberName":"length","nodeType":"MemberAccess","src":"1788:37:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1829:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1788:42:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072657665616c6564","id":11087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1832:18:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476","typeString":"literal_string \"Already revealed\""},"value":"Already revealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476","typeString":"literal_string \"Already revealed\""}],"id":11077,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1780:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:71:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11089,"nodeType":"ExpressionStatement","src":"1780:71:35"},{"assignments":[11091],"declarations":[{"constant":false,"id":11091,"mutability":"mutable","name":"pseudoRandom","nameLocation":"1870:12:35","nodeType":"VariableDeclaration","scope":11175,"src":"1862:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11105,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":11097,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1920:5:35","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1926:9:35","memberName":"timestamp","nodeType":"MemberAccess","src":"1920:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11099,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11055,"src":"1937:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1946:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1950:6:35","memberName":"sender","nodeType":"MemberAccess","src":"1946:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":11095,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1903:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":11096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1907:12:35","memberName":"encodePacked","nodeType":"MemberAccess","src":"1903:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1903:54:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":11094,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1893:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1893:65:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":11093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1885:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1885:7:35","typeDescriptions":{}}},"id":11104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1885:74:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1862:97:35"},{"expression":{"id":11162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11106,"name":"waveData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10968,"src":"1969:8:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WaveData_$10929_storage_$","typeString":"mapping(uint256 => struct ApeBeatsMetadataLib.WaveData storage ref)"}},"id":11108,"indexExpression":{"id":11107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11055,"src":"1978:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1969:17:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_storage","typeString":"struct ApeBeatsMetadataLib.WaveData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11112,"name":"pseudoRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"2024:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"35","id":11113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2039:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2024:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":11110,"name":"uint8","nodeType":"ElementaryTypeName","src":"2018:5:35","typeDescriptions":{}}},"id":11115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11118,"name":"pseudoRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"2069:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":11119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2084:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2069:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2068:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"35","id":11122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2089:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2068:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2062:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":11116,"name":"uint8","nodeType":"ElementaryTypeName","src":"2062:5:35","typeDescriptions":{}}},"id":11124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2062:29:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11127,"name":"pseudoRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"2120:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3235","id":11128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2135:2:35","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"2120:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2119:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"35","id":11131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2119:23:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2113:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":11125,"name":"uint8","nodeType":"ElementaryTypeName","src":"2113:5:35","typeDescriptions":{}}},"id":11133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2113:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11136,"name":"pseudoRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"2168:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313235","id":11137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2183:3:35","typeDescriptions":{"typeIdentifier":"t_rational_125_by_1","typeString":"int_const 125"},"value":"125"},"src":"2168:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2167:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"35","id":11140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2190:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2167:24:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2161:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":11134,"name":"uint8","nodeType":"ElementaryTypeName","src":"2161:5:35","typeDescriptions":{}}},"id":11142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:31:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11145,"name":"pseudoRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"2224:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"363235","id":11146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2239:3:35","typeDescriptions":{"typeIdentifier":"t_rational_625_by_1","typeString":"int_const 625"},"value":"625"},"src":"2224:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2223:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3131","id":11149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2246:2:35","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"2223:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":11143,"name":"uint8","nodeType":"ElementaryTypeName","src":"2217:5:35","typeDescriptions":{}}},"id":11151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11154,"name":"pseudoRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"2279:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"36383735","id":11155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2294:4:35","typeDescriptions":{"typeIdentifier":"t_rational_6875_by_1","typeString":"int_const 6875"},"value":"6875"},"src":"2279:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2278:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3131","id":11158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2302:2:35","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"2278:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2272:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":11152,"name":"uint8","nodeType":"ElementaryTypeName","src":"2272:5:35","typeDescriptions":{}}},"id":11160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2272:33:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":11109,"name":"WaveData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10929,"src":"1989:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WaveData_$10929_storage_ptr_$","typeString":"type(struct ApeBeatsMetadataLib.WaveData storage pointer)"}},"id":11161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2012:4:35","2055:5:35","2105:6:35","2157:2:35","2206:9:35","2263:7:35"],"names":["bass","drums","melody","fx","colorWave","colorBg"],"nodeType":"FunctionCall","src":"1989:327:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"src":"1969:347:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_storage","typeString":"struct ApeBeatsMetadataLib.WaveData storage ref"}},"id":11163,"nodeType":"ExpressionStatement","src":"1969:347:35"},{"expression":{"id":11173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11164,"name":"rarityScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10980,"src":"2326:11:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11166,"indexExpression":{"id":11165,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11055,"src":"2338:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2326:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11167,"name":"pseudoRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"2350:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"313030","id":11168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2365:3:35","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2350:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2349:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":11171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2372:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2349:24:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2326:47:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11174,"nodeType":"ExpressionStatement","src":"2326:47:35"}]},"functionSelector":"bfb70e04","id":11176,"implemented":true,"kind":"function","modifiers":[{"id":11060,"kind":"modifierInvocation","modifierName":{"id":11059,"name":"onlyOwner","nameLocations":["1645:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"1645:9:35"},"nodeType":"ModifierInvocation","src":"1645:9:35"}],"name":"reveal","nameLocation":"1592:6:35","nodeType":"FunctionDefinition","parameters":{"id":11058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11055,"mutability":"mutable","name":"tokenId","nameLocation":"1607:7:35","nodeType":"VariableDeclaration","scope":11176,"src":"1599:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1599:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11057,"mutability":"mutable","name":"tokenOwner","nameLocation":"1624:10:35","nodeType":"VariableDeclaration","scope":11176,"src":"1616:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11056,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1598:37:35"},"returnParameters":{"id":11061,"nodeType":"ParameterList","parameters":[],"src":"1655:0:35"},"scope":11403,"src":"1583:797:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11326,"nodeType":"Block","src":"2737:1484:35","statements":[{"assignments":[11213],"declarations":[{"constant":false,"id":11213,"mutability":"mutable","name":"json","nameLocation":"2761:4:35","nodeType":"VariableDeclaration","scope":11326,"src":"2747:18:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11212,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":11316,"initialValue":{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a22417065426561747347656e657369732023","id":11218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2812:28:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c74c61321159a2475211de32b290cc35dbdf5250ad5a2b384574916271a4461","typeString":"literal_string \"{\"name\":\"ApeBeatsGenesis #\""},"value":"{\"name\":\"ApeBeatsGenesis #"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":11219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"2842:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2850:8:35","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"2842:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":11221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2862:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a22556e6971756520617564696f2d76697375616c204e4654222c","id":11223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2880:42:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdb7f3407af5203b9b3b05ca14eb69773b0b486f8f17f37dc78421a91fb84ca2","typeString":"literal_string \"\"description\":\"Unique audio-visual NFT\",\""},"value":"\"description\":\"Unique audio-visual NFT\","},{"hexValue":"22696d616765223a22","id":11224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2936:11:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","typeString":"literal_string \"\"image\":\"\""},"value":"\"image\":\""},{"id":11225,"name":"waveformURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11203,"src":"2949:11:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2962:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22616e696d6174696f6e5f75726c223a22","id":11227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2980:19:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_49dcfc21b17d9aca2267968e398a8388fccd277d1ec088d688dc2ade4c56ee7c","typeString":"literal_string \"\"animation_url\":\"\""},"value":"\"animation_url\":\""},{"id":11228,"name":"mixedAudioURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11201,"src":"3001:13:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3016:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226f6e636861696e5f64617461223a7b","id":11230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3034:18:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_313a8f53520c08701d47b23048c48a0838641327255d7034790ac1cae9c4fdc6","typeString":"literal_string \"\"onchain_data\":{\""},"value":"\"onchain_data\":{"},{"hexValue":"2262617373223a22","id":11231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3070:10:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6c033857b7f01d4ac4c7f3512e6cc2d68550a2bd07976f5693f02e5d31139af","typeString":"literal_string \"\"bass\":\"\""},"value":"\"bass\":\""},{"baseExpression":{"id":11232,"name":"bassLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11182,"src":"3082:12:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11235,"indexExpression":{"expression":{"id":11233,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3095:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3100:4:35","memberName":"bass","nodeType":"MemberAccess","referencedDeclaration":10918,"src":"3095:9:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3082:23:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3107:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226472756d73223a22","id":11237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3129:11:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_5abd106637a8730b4e2450870b908fb2d6849bad9f9b7ca349993f0d749aded5","typeString":"literal_string \"\"drums\":\"\""},"value":"\"drums\":\""},{"baseExpression":{"id":11238,"name":"drumLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"3142:12:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11241,"indexExpression":{"expression":{"id":11239,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3155:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3160:5:35","memberName":"drums","nodeType":"MemberAccess","referencedDeclaration":10920,"src":"3155:10:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3142:24:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3168:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226d656c6f6479223a22","id":11243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3190:12:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d847e98efc522c300673164ca2cd363ebc4d990fe32cda701a1da5e6d83f4b6","typeString":"literal_string \"\"melody\":\"\""},"value":"\"melody\":\""},{"baseExpression":{"id":11244,"name":"melodyLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11190,"src":"3204:14:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11247,"indexExpression":{"expression":{"id":11245,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3219:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3224:6:35","memberName":"melody","nodeType":"MemberAccess","referencedDeclaration":10922,"src":"3219:11:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3204:27:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3233:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226678223a22","id":11249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3255:8:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_056d74a77c48f2b54477b4d8ce8dab5193b3e1d87e4746014908b12ff97da7a3","typeString":"literal_string \"\"fx\":\"\""},"value":"\"fx\":\""},{"baseExpression":{"id":11250,"name":"fxLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11194,"src":"3265:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11253,"indexExpression":{"expression":{"id":11251,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3276:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3281:2:35","memberName":"fx","nodeType":"MemberAccess","referencedDeclaration":10924,"src":"3276:7:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:19:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3286:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22776176655f636f6c6f72223a22","id":11255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3308:16:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c05b69f6469abb65288cd0d850334b9e10d4e9db42c2788edf5770e70a0d1d6","typeString":"literal_string \"\"wave_color\":\"\""},"value":"\"wave_color\":\""},{"baseExpression":{"id":11256,"name":"colors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11207,"src":"3326:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$11_memory_ptr","typeString":"string memory[11] memory"}},"id":11259,"indexExpression":{"expression":{"id":11257,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3333:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3338:9:35","memberName":"colorWave","nodeType":"MemberAccess","referencedDeclaration":10926,"src":"3333:14:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3326:22:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3350:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"2262675f636f6c6f72223a22","id":11261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3372:14:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f806a09d4a1ccb4e46e8fd74be7f9b0549effba401ea932f7b868240eb3070c2","typeString":"literal_string \"\"bg_color\":\"\""},"value":"\"bg_color\":\""},{"baseExpression":{"id":11262,"name":"colors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11207,"src":"3388:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$11_memory_ptr","typeString":"string memory[11] memory"}},"id":11265,"indexExpression":{"expression":{"id":11263,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3395:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3400:7:35","memberName":"colorBg","nodeType":"MemberAccess","referencedDeclaration":10928,"src":"3395:12:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3388:20:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":11266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3410:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22726172697479223a22","id":11267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3432:12:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e8cf5591ba7964310ad210c0b5767d50f9e0c700ea8242a7f55b454d8cb6f26","typeString":"literal_string \"\"rarity\":\"\""},"value":"\"rarity\":\""},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":11268,"name":"rarity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11199,"src":"3446:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3453:8:35","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"3446:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":11270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3446:17:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":11271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3465:3:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d2c","id":11272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3482:4:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},"value":"},"},{"hexValue":"2261747472696275746573223a5b7b2274726169745f74797065223a2242617373222c2276616c7565223a22","id":11273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3500:65:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_31f766c5adaa10488a3acabf69e03da535d9c7e4c1350df0420550d687fdfa8d","typeString":"literal_string \"\"attributes\":[{\"trait_type\":\"Bass\",\"value\":\"\""},"value":"\"attributes\":[{\"trait_type\":\"Bass\",\"value\":\""},{"baseExpression":{"id":11274,"name":"bassLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11182,"src":"3567:12:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11277,"indexExpression":{"expression":{"id":11275,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3580:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3585:4:35","memberName":"bass","nodeType":"MemberAccess","referencedDeclaration":10918,"src":"3580:9:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3567:23:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":11278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3592:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a224472756d73222c2276616c7565223a22","id":11279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3615:33:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_16825d4aad7afd6ac42756792947eae767f33e773d0b9cd0ba665e457301f33b","typeString":"literal_string \"{\"trait_type\":\"Drums\",\"value\":\"\""},"value":"{\"trait_type\":\"Drums\",\"value\":\""},{"baseExpression":{"id":11280,"name":"drumLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"3650:12:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11283,"indexExpression":{"expression":{"id":11281,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3663:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3668:5:35","memberName":"drums","nodeType":"MemberAccess","referencedDeclaration":10920,"src":"3663:10:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3650:24:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":11284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3676:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a224d656c6f6479222c2276616c7565223a22","id":11285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3699:34:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1f59c0f7ae4546a963c64b9b25aaadb786b8f5d03fd027e788584ec78166cff","typeString":"literal_string \"{\"trait_type\":\"Melody\",\"value\":\"\""},"value":"{\"trait_type\":\"Melody\",\"value\":\""},{"baseExpression":{"id":11286,"name":"melodyLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11190,"src":"3735:14:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11289,"indexExpression":{"expression":{"id":11287,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3750:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3755:6:35","memberName":"melody","nodeType":"MemberAccess","referencedDeclaration":10922,"src":"3750:11:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3735:27:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":11290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3764:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a224658222c2276616c7565223a22","id":11291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3787:30:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a95582332356cb4e0c3d135f71e4f72afc837c390e2b9d4d752305807cef73b","typeString":"literal_string \"{\"trait_type\":\"FX\",\"value\":\"\""},"value":"{\"trait_type\":\"FX\",\"value\":\""},{"baseExpression":{"id":11292,"name":"fxLoopsArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11194,"src":"3819:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string memory[5] memory"}},"id":11295,"indexExpression":{"expression":{"id":11293,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3830:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3835:2:35","memberName":"fx","nodeType":"MemberAccess","referencedDeclaration":10924,"src":"3830:7:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3819:19:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":11296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3840:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a225761766520436f6c6f72222c2276616c7565223a22","id":11297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3863:38:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f452ab81633e3ffe4f20693b7e32dcea9f926fc6b396f266ae565091d4fad840","typeString":"literal_string \"{\"trait_type\":\"Wave Color\",\"value\":\"\""},"value":"{\"trait_type\":\"Wave Color\",\"value\":\""},{"baseExpression":{"id":11298,"name":"colors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11207,"src":"3903:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$11_memory_ptr","typeString":"string memory[11] memory"}},"id":11301,"indexExpression":{"expression":{"id":11299,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"3910:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3915:9:35","memberName":"colorWave","nodeType":"MemberAccess","referencedDeclaration":10926,"src":"3910:14:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3903:22:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":11302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3927:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a224261636b67726f756e6420436f6c6f72222c2276616c7565223a22","id":11303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3950:44:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7b253700cd7bf66c21a4b48ea438fbc5de3a071dd0beabc0c847792b92df209","typeString":"literal_string \"{\"trait_type\":\"Background Color\",\"value\":\"\""},"value":"{\"trait_type\":\"Background Color\",\"value\":\""},{"baseExpression":{"id":11304,"name":"colors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11207,"src":"3996:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$11_memory_ptr","typeString":"string memory[11] memory"}},"id":11307,"indexExpression":{"expression":{"id":11305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"4003:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData memory"}},"id":11306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4008:7:35","memberName":"colorBg","nodeType":"MemberAccess","referencedDeclaration":10928,"src":"4003:12:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3996:20:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c","id":11308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4018:5:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},"value":"\"},"},{"hexValue":"7b2274726169745f74797065223a225261726974792053636f7265222c2276616c7565223a22","id":11309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4041:40:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f1301f932dedab6c4bb3c0c0f58413f7477d71b828a91acce6afd804736a54e","typeString":"literal_string \"{\"trait_type\":\"Rarity Score\",\"value\":\"\""},"value":"{\"trait_type\":\"Rarity Score\",\"value\":\""},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":11310,"name":"rarity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11199,"src":"4083:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4090:8:35","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"4083:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":11312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:17:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d5d7d","id":11313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4102:21:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5bba0ae94dd88587a882c16bb746e9ca4527b97407fa5d4bdac27455db72fa6","typeString":"literal_string \"\"}]}\""},"value":"\"}]}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2c74c61321159a2475211de32b290cc35dbdf5250ad5a2b384574916271a4461","typeString":"literal_string \"{\"name\":\"ApeBeatsGenesis #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_fdb7f3407af5203b9b3b05ca14eb69773b0b486f8f17f37dc78421a91fb84ca2","typeString":"literal_string \"\"description\":\"Unique audio-visual NFT\",\""},{"typeIdentifier":"t_stringliteral_813a444dcf0b75d812ca8afb53e513b340ca828208f41bc16bdcde529c0ea551","typeString":"literal_string \"\"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_49dcfc21b17d9aca2267968e398a8388fccd277d1ec088d688dc2ade4c56ee7c","typeString":"literal_string \"\"animation_url\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_313a8f53520c08701d47b23048c48a0838641327255d7034790ac1cae9c4fdc6","typeString":"literal_string \"\"onchain_data\":{\""},{"typeIdentifier":"t_stringliteral_b6c033857b7f01d4ac4c7f3512e6cc2d68550a2bd07976f5693f02e5d31139af","typeString":"literal_string \"\"bass\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_5abd106637a8730b4e2450870b908fb2d6849bad9f9b7ca349993f0d749aded5","typeString":"literal_string \"\"drums\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_1d847e98efc522c300673164ca2cd363ebc4d990fe32cda701a1da5e6d83f4b6","typeString":"literal_string \"\"melody\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_056d74a77c48f2b54477b4d8ce8dab5193b3e1d87e4746014908b12ff97da7a3","typeString":"literal_string \"\"fx\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_8c05b69f6469abb65288cd0d850334b9e10d4e9db42c2788edf5770e70a0d1d6","typeString":"literal_string \"\"wave_color\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_f806a09d4a1ccb4e46e8fd74be7f9b0549effba401ea932f7b868240eb3070c2","typeString":"literal_string \"\"bg_color\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_1e8cf5591ba7964310ad210c0b5767d50f9e0c700ea8242a7f55b454d8cb6f26","typeString":"literal_string \"\"rarity\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},{"typeIdentifier":"t_stringliteral_31f766c5adaa10488a3acabf69e03da535d9c7e4c1350df0420550d687fdfa8d","typeString":"literal_string \"\"attributes\":[{\"trait_type\":\"Bass\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_16825d4aad7afd6ac42756792947eae767f33e773d0b9cd0ba665e457301f33b","typeString":"literal_string \"{\"trait_type\":\"Drums\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_b1f59c0f7ae4546a963c64b9b25aaadb786b8f5d03fd027e788584ec78166cff","typeString":"literal_string \"{\"trait_type\":\"Melody\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_9a95582332356cb4e0c3d135f71e4f72afc837c390e2b9d4d752305807cef73b","typeString":"literal_string \"{\"trait_type\":\"FX\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_f452ab81633e3ffe4f20693b7e32dcea9f926fc6b396f266ae565091d4fad840","typeString":"literal_string \"{\"trait_type\":\"Wave Color\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_f7b253700cd7bf66c21a4b48ea438fbc5de3a071dd0beabc0c847792b92df209","typeString":"literal_string \"{\"trait_type\":\"Background Color\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7f42fdd49259e0595590a474a25222fd39a13615f6ea5ab69ecfc85ad8702f","typeString":"literal_string \"\"},\""},{"typeIdentifier":"t_stringliteral_5f1301f932dedab6c4bb3c0c0f58413f7477d71b828a91acce6afd804736a54e","typeString":"literal_string \"{\"trait_type\":\"Rarity Score\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f5bba0ae94dd88587a882c16bb746e9ca4527b97407fa5d4bdac27455db72fa6","typeString":"literal_string \"\"}]}\""}],"expression":{"id":11216,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2782:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":11217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2786:12:35","memberName":"encodePacked","nodeType":"MemberAccess","src":"2782:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2782:1351:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":11214,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"2768:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$3439_$","typeString":"type(library Base64)"}},"id":11215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2775:6:35","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":3369,"src":"2768:13:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":11315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:1366:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2747:1387:35"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":11321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4175:31:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"id":11322,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11213,"src":"4208:4:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":11319,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4158:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":11320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4162:12:35","memberName":"encodePacked","nodeType":"MemberAccess","src":"4158:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4158:55:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":11318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4151:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":11317,"name":"string","nodeType":"ElementaryTypeName","src":"4151:6:35","typeDescriptions":{}}},"id":11324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4151:63:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":11211,"id":11325,"nodeType":"Return","src":"4144:70:35"}]},"functionSelector":"ac577140","id":11327,"implemented":true,"kind":"function","modifiers":[],"name":"getRevealedURI","nameLocation":"2395:14:35","nodeType":"FunctionDefinition","parameters":{"id":11208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11178,"mutability":"mutable","name":"tokenId","nameLocation":"2427:7:35","nodeType":"VariableDeclaration","scope":11327,"src":"2419:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11182,"mutability":"mutable","name":"bassLoopsArg","nameLocation":"2453:12:35","nodeType":"VariableDeclaration","scope":11327,"src":"2436:29:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string[5]"},"typeName":{"baseType":{"id":11179,"name":"string","nodeType":"ElementaryTypeName","src":"2436:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11181,"length":{"hexValue":"35","id":11180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"2436:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"internal"},{"constant":false,"id":11186,"mutability":"mutable","name":"drumLoopsArg","nameLocation":"2484:12:35","nodeType":"VariableDeclaration","scope":11327,"src":"2467:29:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string[5]"},"typeName":{"baseType":{"id":11183,"name":"string","nodeType":"ElementaryTypeName","src":"2467:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11185,"length":{"hexValue":"35","id":11184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2474:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"2467:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"internal"},{"constant":false,"id":11190,"mutability":"mutable","name":"melodyLoopsArg","nameLocation":"2523:14:35","nodeType":"VariableDeclaration","scope":11327,"src":"2506:31:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string[5]"},"typeName":{"baseType":{"id":11187,"name":"string","nodeType":"ElementaryTypeName","src":"2506:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11189,"length":{"hexValue":"35","id":11188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2513:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"2506:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"internal"},{"constant":false,"id":11194,"mutability":"mutable","name":"fxLoopsArg","nameLocation":"2556:10:35","nodeType":"VariableDeclaration","scope":11327,"src":"2539:27:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string[5]"},"typeName":{"baseType":{"id":11191,"name":"string","nodeType":"ElementaryTypeName","src":"2539:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11193,"length":{"hexValue":"35","id":11192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2546:1:35","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"2539:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"internal"},{"constant":false,"id":11197,"mutability":"mutable","name":"data","nameLocation":"2584:4:35","nodeType":"VariableDeclaration","scope":11327,"src":"2568:20:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_memory_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData"},"typeName":{"id":11196,"nodeType":"UserDefinedTypeName","pathNode":{"id":11195,"name":"WaveData","nameLocations":["2568:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":10929,"src":"2568:8:35"},"referencedDeclaration":10929,"src":"2568:8:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_storage_ptr","typeString":"struct ApeBeatsMetadataLib.WaveData"}},"visibility":"internal"},{"constant":false,"id":11199,"mutability":"mutable","name":"rarity","nameLocation":"2606:6:35","nodeType":"VariableDeclaration","scope":11327,"src":"2598:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2598:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11201,"mutability":"mutable","name":"mixedAudioURI","nameLocation":"2628:13:35","nodeType":"VariableDeclaration","scope":11327,"src":"2614:27:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11200,"name":"string","nodeType":"ElementaryTypeName","src":"2614:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11203,"mutability":"mutable","name":"waveformURI","nameLocation":"2657:11:35","nodeType":"VariableDeclaration","scope":11327,"src":"2643:25:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11202,"name":"string","nodeType":"ElementaryTypeName","src":"2643:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11207,"mutability":"mutable","name":"colors","nameLocation":"2688:6:35","nodeType":"VariableDeclaration","scope":11327,"src":"2670:24:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$11_memory_ptr","typeString":"string[11]"},"typeName":{"baseType":{"id":11204,"name":"string","nodeType":"ElementaryTypeName","src":"2670:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11206,"length":{"hexValue":"3131","id":11205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2677:2:35","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"nodeType":"ArrayTypeName","src":"2670:10:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$11_storage_ptr","typeString":"string[11]"}},"visibility":"internal"}],"src":"2409:291:35"},"returnParameters":{"id":11211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11327,"src":"2722:13:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11209,"name":"string","nodeType":"ElementaryTypeName","src":"2722:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2721:15:35"},"scope":11403,"src":"2386:1835:35","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":11401,"nodeType":"Block","src":"4389:624:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11339,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11333,"src":"4407:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4429:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4421:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11340,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:35","typeDescriptions":{}}},"id":11343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4407:24:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":11345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4433:22:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":11338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4399:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:57:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11347,"nodeType":"ExpressionStatement","src":"4399:57:35"},{"condition":{"id":11349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4470:9:35","subExpression":{"id":11348,"name":"revealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"4471:8:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11353,"nodeType":"IfStatement","src":"4466:67:35","trueBody":{"id":11352,"nodeType":"Block","src":"4481:52:35","statements":[{"expression":{"id":11350,"name":"prerevealNoiseBase64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11331,"src":"4502:20:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":11337,"id":11351,"nodeType":"Return","src":"4495:27:35"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":11357,"name":"mixedAudioURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10972,"src":"4556:14:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11359,"indexExpression":{"id":11358,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11329,"src":"4571:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4556:23:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":11356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4550:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11355,"name":"bytes","nodeType":"ElementaryTypeName","src":"4550:5:35","typeDescriptions":{}}},"id":11360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":11361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4581:6:35","memberName":"length","nodeType":"MemberAccess","src":"4550:37:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4590:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4550:41:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417564696f20555249206e6f7420736574","id":11364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4593:19:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4e040e40b7c3ec7bd3472d615428174b7a7e5115527d25d6b3684a4f7701f0","typeString":"literal_string \"Audio URI not set\""},"value":"Audio URI not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4e040e40b7c3ec7bd3472d615428174b7a7e5115527d25d6b3684a4f7701f0","typeString":"literal_string \"Audio URI not set\""}],"id":11354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4542:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4542:71:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11366,"nodeType":"ExpressionStatement","src":"4542:71:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":11370,"name":"waveformURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10976,"src":"4637:12:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11372,"indexExpression":{"id":11371,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11329,"src":"4650:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4637:21:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":11369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4631:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11368,"name":"bytes","nodeType":"ElementaryTypeName","src":"4631:5:35","typeDescriptions":{}}},"id":11373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:28:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":11374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4660:6:35","memberName":"length","nodeType":"MemberAccess","src":"4631:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4669:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4631:39:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57617665666f726d20555249206e6f7420736574","id":11377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:22:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_097735e5ac0ea0073d447e64f35d0b5e9d84f9a4eacf69f2a0defafbca50435d","typeString":"literal_string \"Waveform URI not set\""},"value":"Waveform URI not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_097735e5ac0ea0073d447e64f35d0b5e9d84f9a4eacf69f2a0defafbca50435d","typeString":"literal_string \"Waveform URI not set\""}],"id":11367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4623:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4623:72:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11379,"nodeType":"ExpressionStatement","src":"4623:72:35"},{"expression":{"arguments":[{"id":11381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11329,"src":"4740:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11382,"name":"bassLoops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"4761:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},{"id":11383,"name":"drumLoops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10937,"src":"4784:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},{"id":11384,"name":"melodyLoops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10941,"src":"4807:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},{"id":11385,"name":"fxLoops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"4832:7:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},{"baseExpression":{"id":11386,"name":"waveData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10968,"src":"4853:8:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WaveData_$10929_storage_$","typeString":"mapping(uint256 => struct ApeBeatsMetadataLib.WaveData storage ref)"}},"id":11388,"indexExpression":{"id":11387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11329,"src":"4862:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4853:17:35","typeDescriptions":{"typeIdentifier":"t_struct$_WaveData_$10929_storage","typeString":"struct ApeBeatsMetadataLib.WaveData storage ref"}},{"baseExpression":{"id":11389,"name":"rarityScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10980,"src":"4884:11:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11391,"indexExpression":{"id":11390,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11329,"src":"4896:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4884:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":11392,"name":"mixedAudioURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10972,"src":"4918:14:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11394,"indexExpression":{"id":11393,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11329,"src":"4933:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4918:23:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"baseExpression":{"id":11395,"name":"waveformURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10976,"src":"4955:12:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":11397,"indexExpression":{"id":11396,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11329,"src":"4968:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4955:21:35","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":11398,"name":"COLORS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10961,"src":"4990:6:35","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$11_storage","typeString":"string storage ref[11] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"},{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"},{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"},{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"},{"typeIdentifier":"t_struct$_WaveData_$10929_storage","typeString":"struct ApeBeatsMetadataLib.WaveData storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_array$_t_string_storage_$11_storage","typeString":"string storage ref[11] storage ref"}],"id":11380,"name":"getRevealedURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11327,"src":"4712:14:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_array$_t_string_memory_ptr_$5_memory_ptr_$_t_array$_t_string_memory_ptr_$5_memory_ptr_$_t_array$_t_string_memory_ptr_$5_memory_ptr_$_t_array$_t_string_memory_ptr_$5_memory_ptr_$_t_struct$_WaveData_$10929_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$11_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,string memory[5] memory,string memory[5] memory,string memory[5] memory,string memory[5] memory,struct ApeBeatsMetadataLib.WaveData memory,uint256,string memory,string memory,string memory[11] memory) pure returns (string memory)"}},"id":11399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4712:294:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":11337,"id":11400,"nodeType":"Return","src":"4705:301:35"}]},"functionSelector":"09aafb61","id":11402,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenURI","nameLocation":"4236:11:35","nodeType":"FunctionDefinition","parameters":{"id":11334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11329,"mutability":"mutable","name":"tokenId","nameLocation":"4265:7:35","nodeType":"VariableDeclaration","scope":11402,"src":"4257:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11328,"name":"uint256","nodeType":"ElementaryTypeName","src":"4257:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11331,"mutability":"mutable","name":"prerevealNoiseBase64","nameLocation":"4296:20:35","nodeType":"VariableDeclaration","scope":11402,"src":"4282:34:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11330,"name":"string","nodeType":"ElementaryTypeName","src":"4282:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11333,"mutability":"mutable","name":"tokenOwner","nameLocation":"4334:10:35","nodeType":"VariableDeclaration","scope":11402,"src":"4326:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11332,"name":"address","nodeType":"ElementaryTypeName","src":"4326:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4247:103:35"},"returnParameters":{"id":11337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11402,"src":"4374:13:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11335,"name":"string","nodeType":"ElementaryTypeName","src":"4374:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4373:15:35"},"scope":11403,"src":"4227:786:35","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11404,"src":"215:4800:35","usedErrors":[2154,2159],"usedEvents":[2165,10986]}],"src":"32:4984:35"},"id":35},"contracts/ApeBeatsRoyalties.sol":{"ast":{"absolutePath":"contracts/ApeBeatsRoyalties.sol","exportedSymbols":{"ApeBeatsRoyalties":[11902],"Context":[3469],"Math":[7884],"Ownable":[2288],"ReentrancyGuard":[3612],"SafeCast":[9649],"SignedMath":[9793],"Strings":[5138]},"id":11903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11405,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:36"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":11406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11903,"sourceUnit":2289,"src":"58:52:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":11407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11903,"sourceUnit":3613,"src":"111:59:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":11408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11903,"sourceUnit":5139,"src":"171:51:36","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11409,"name":"Ownable","nameLocations":["254:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"254:7:36"},"id":11410,"nodeType":"InheritanceSpecifier","src":"254:7:36"},{"baseName":{"id":11411,"name":"ReentrancyGuard","nameLocations":["263:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":3612,"src":"263:15:36"},"id":11412,"nodeType":"InheritanceSpecifier","src":"263:15:36"}],"canonicalName":"ApeBeatsRoyalties","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":11902,"linearizedBaseContracts":[11902,3612,2288,3469],"name":"ApeBeatsRoyalties","nameLocation":"233:17:36","nodeType":"ContractDefinition","nodes":[{"global":false,"id":11415,"libraryName":{"id":11413,"name":"Strings","nameLocations":["291:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"291:7:36"},"nodeType":"UsingForDirective","src":"285:26:36","typeName":{"id":11414,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"cada1c00","id":11418,"mutability":"constant","name":"ROYALTY_WINDOW","nameLocation":"341:14:36","nodeType":"VariableDeclaration","scope":11902,"src":"317:50:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11416,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":11417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"358:9:36","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":11420,"mutability":"mutable","name":"treasury","nameLocation":"389:8:36","nodeType":"VariableDeclaration","scope":11902,"src":"374:23:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11419,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4d853ee5","id":11422,"mutability":"mutable","name":"founder","nameLocation":"418:7:36","nodeType":"VariableDeclaration","scope":11902,"src":"403:22:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11421,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"a2309ff8","id":11424,"mutability":"mutable","name":"totalMinted","nameLocation":"446:11:36","nodeType":"VariableDeclaration","scope":11902,"src":"431:26:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11423,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d37b1f46","id":11426,"mutability":"mutable","name":"poolRoyalties","nameLocation":"478:13:36","nodeType":"VariableDeclaration","scope":11902,"src":"463:28:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11425,"name":"uint256","nodeType":"ElementaryTypeName","src":"463:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"ApeBeatsRoyalties.TransferRecord","id":11431,"members":[{"constant":false,"id":11428,"mutability":"mutable","name":"tokenId","nameLocation":"538:7:36","nodeType":"VariableDeclaration","scope":11431,"src":"530:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11427,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11430,"mutability":"mutable","name":"timestamp","nameLocation":"563:9:36","nodeType":"VariableDeclaration","scope":11431,"src":"555:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11429,"name":"uint256","nodeType":"ElementaryTypeName","src":"555:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TransferRecord","nameLocation":"505:14:36","nodeType":"StructDefinition","scope":11902,"src":"498:81:36","visibility":"public"},{"constant":false,"functionSelector":"9d75170a","id":11435,"mutability":"mutable","name":"recentTransfers","nameLocation":"608:15:36","nodeType":"VariableDeclaration","scope":11902,"src":"584:39:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord[]"},"typeName":{"baseType":{"id":11433,"nodeType":"UserDefinedTypeName","pathNode":{"id":11432,"name":"TransferRecord","nameLocations":["584:14:36"],"nodeType":"IdentifierPath","referencedDeclaration":11431,"src":"584:14:36"},"referencedDeclaration":11431,"src":"584:14:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_storage_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord"}},"id":11434,"nodeType":"ArrayTypeName","src":"584:16:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord[]"}},"visibility":"public"},{"constant":false,"functionSelector":"53234fb4","id":11437,"mutability":"mutable","name":"transferIndex","nameLocation":"644:13:36","nodeType":"VariableDeclaration","scope":11902,"src":"629:28:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11436,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1ebdeeab","id":11441,"mutability":"mutable","name":"royaltyBalancesPerToken","nameLocation":"699:23:36","nodeType":"VariableDeclaration","scope":11902,"src":"664:58:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":11440,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11438,"name":"uint256","nodeType":"ElementaryTypeName","src":"672:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"664:27:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11439,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"33f6df8f","id":11445,"mutability":"mutable","name":"royaltyBalances","nameLocation":"763:15:36","nodeType":"VariableDeclaration","scope":11902,"src":"728:50:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11444,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11442,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"728:27:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11443,"name":"uint256","nodeType":"ElementaryTypeName","src":"747:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"e7d0fd18","id":11449,"mutability":"mutable","name":"originalMinters","nameLocation":"819:15:36","nodeType":"VariableDeclaration","scope":11902,"src":"784:50:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":11448,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11446,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"784:27:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11447,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"3a602b4d","id":11453,"mutability":"mutable","name":"mintedPerWallet","nameLocation":"875:15:36","nodeType":"VariableDeclaration","scope":11902,"src":"840:50:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11452,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11450,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"840:27:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11451,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e8f58c2c4663d8d9bab1fcd91c3bef339c90e81754e2d0ec7e888c5c0b56b08d","id":11459,"name":"RoyaltiesReceived","nameLocation":"903:17:36","nodeType":"EventDefinition","parameters":{"id":11458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11455,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"937:7:36","nodeType":"VariableDeclaration","scope":11459,"src":"921:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11454,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11457,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"954:6:36","nodeType":"VariableDeclaration","scope":11459,"src":"946:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11456,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"920:41:36"},"src":"897:65:36"},{"anonymous":false,"eventSelector":"1d5b077db78404787d2283eb338d87091c7bea1551c6a3b35853970955fe4e80","id":11463,"name":"RoyaltiesPooled","nameLocation":"973:15:36","nodeType":"EventDefinition","parameters":{"id":11462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11461,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"997:6:36","nodeType":"VariableDeclaration","scope":11463,"src":"989:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11460,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:16:36"},"src":"967:38:36"},{"anonymous":false,"eventSelector":"8fbbda19f4a70036f6f585dc4160142a8fa2a20ffb9393d23274f78de4e39888","id":11469,"name":"RoyaltiesClaimed","nameLocation":"1016:16:36","nodeType":"EventDefinition","parameters":{"id":11468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11465,"indexed":true,"mutability":"mutable","name":"claimant","nameLocation":"1049:8:36","nodeType":"VariableDeclaration","scope":11469,"src":"1033:24:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11464,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11467,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1067:6:36","nodeType":"VariableDeclaration","scope":11469,"src":"1059:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1032:42:36"},"src":"1010:65:36"},{"body":{"id":11498,"nodeType":"Block","src":"1150:142:36","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11481,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11471,"src":"1168:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1181:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11482,"name":"address","nodeType":"ElementaryTypeName","src":"1181:7:36","typeDescriptions":{}}},"id":11485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1181:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1168:23:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726561737572792063616e6e6f74206265207a65726f2061646472657373","id":11487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1193:33:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512","typeString":"literal_string \"Treasury cannot be zero address\""},"value":"Treasury cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a7c596a53f829071389d1138ce3da139fa1a179915eb325e778f49ae1f84512","typeString":"literal_string \"Treasury cannot be zero address\""}],"id":11480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1160:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1160:67:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11489,"nodeType":"ExpressionStatement","src":"1160:67:36"},{"expression":{"id":11492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11490,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11420,"src":"1237:8:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11491,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11471,"src":"1248:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1237:20:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11493,"nodeType":"ExpressionStatement","src":"1237:20:36"},{"expression":{"id":11496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11494,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11422,"src":"1267:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11495,"name":"_founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11473,"src":"1277:8:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1267:18:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11497,"nodeType":"ExpressionStatement","src":"1267:18:36"}]},"id":11499,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":11476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1138:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1142:6:36","memberName":"sender","nodeType":"MemberAccess","src":"1138:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":11478,"kind":"baseConstructorSpecifier","modifierName":{"id":11475,"name":"Ownable","nameLocations":["1130:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"1130:7:36"},"nodeType":"ModifierInvocation","src":"1130:19:36"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11471,"mutability":"mutable","name":"_treasury","nameLocation":"1101:9:36","nodeType":"VariableDeclaration","scope":11499,"src":"1093:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11470,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11473,"mutability":"mutable","name":"_founder","nameLocation":"1120:8:36","nodeType":"VariableDeclaration","scope":11499,"src":"1112:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11472,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1092:37:36"},"returnParameters":{"id":11479,"nodeType":"ParameterList","parameters":[],"src":"1150:0:36"},"scope":11902,"src":"1081:211:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11579,"nodeType":"Block","src":"1325:757:36","statements":[{"assignments":[11503],"declarations":[{"constant":false,"id":11503,"mutability":"mutable","name":"amount","nameLocation":"1343:6:36","nodeType":"VariableDeclaration","scope":11579,"src":"1335:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11506,"initialValue":{"expression":{"id":11504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1352:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1356:5:36","memberName":"value","nodeType":"MemberAccess","src":"1352:9:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1335:26:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11507,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"1375:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1391:6:36","memberName":"length","nodeType":"MemberAccess","src":"1375:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1400:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1375:26:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11570,"nodeType":"IfStatement","src":"1371:634:36","trueBody":{"id":11569,"nodeType":"Block","src":"1403:602:36","statements":[{"assignments":[11513],"declarations":[{"constant":false,"id":11513,"mutability":"mutable","name":"lastTransfer","nameLocation":"1439:12:36","nodeType":"VariableDeclaration","scope":11569,"src":"1417:34:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_memory_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord"},"typeName":{"id":11512,"nodeType":"UserDefinedTypeName","pathNode":{"id":11511,"name":"TransferRecord","nameLocations":["1417:14:36"],"nodeType":"IdentifierPath","referencedDeclaration":11431,"src":"1417:14:36"},"referencedDeclaration":11431,"src":"1417:14:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_storage_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord"}},"visibility":"internal"}],"id":11520,"initialValue":{"baseExpression":{"id":11514,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"1454:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11519,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11515,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"1470:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1486:6:36","memberName":"length","nodeType":"MemberAccess","src":"1470:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":11517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1495:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1470:26:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1454:43:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1417:80:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11521,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1515:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1521:9:36","memberName":"timestamp","nodeType":"MemberAccess","src":"1515:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11523,"name":"lastTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11513,"src":"1534:12:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_memory_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord memory"}},"id":11524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1547:9:36","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":11430,"src":"1534:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11525,"name":"ROYALTY_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11418,"src":"1559:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1534:39:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1515:58:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11568,"nodeType":"IfStatement","src":"1511:484:36","trueBody":{"id":11567,"nodeType":"Block","src":"1575:420:36","statements":[{"assignments":[11529],"declarations":[{"constant":false,"id":11529,"mutability":"mutable","name":"tokenId","nameLocation":"1601:7:36","nodeType":"VariableDeclaration","scope":11567,"src":"1593:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11532,"initialValue":{"expression":{"id":11530,"name":"lastTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11513,"src":"1611:12:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_memory_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord memory"}},"id":11531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1624:7:36","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":11428,"src":"1611:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1593:38:36"},{"expression":{"id":11537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11533,"name":"royaltyBalancesPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11441,"src":"1649:23:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11535,"indexExpression":{"id":11534,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11529,"src":"1673:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1649:32:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11536,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11503,"src":"1685:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1649:42:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11538,"nodeType":"ExpressionStatement","src":"1649:42:36"},{"assignments":[11540],"declarations":[{"constant":false,"id":11540,"mutability":"mutable","name":"originalMinter","nameLocation":"1717:14:36","nodeType":"VariableDeclaration","scope":11567,"src":"1709:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11539,"name":"address","nodeType":"ElementaryTypeName","src":"1709:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":11544,"initialValue":{"baseExpression":{"id":11541,"name":"originalMinters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11449,"src":"1734:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":11543,"indexExpression":{"id":11542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11529,"src":"1750:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1734:24:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1709:49:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11546,"name":"originalMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11540,"src":"1784:14:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1810:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1802:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11547,"name":"address","nodeType":"ElementaryTypeName","src":"1802:7:36","typeDescriptions":{}}},"id":11550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1784:28:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f726967696e616c206d696e746572","id":11552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1814:25:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fe72be570860b5c94d2bd4a9b70a78fd5307834dc1872524c531ff33dc92176","typeString":"literal_string \"Invalid original minter\""},"value":"Invalid original minter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0fe72be570860b5c94d2bd4a9b70a78fd5307834dc1872524c531ff33dc92176","typeString":"literal_string \"Invalid original minter\""}],"id":11545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1776:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:64:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11554,"nodeType":"ExpressionStatement","src":"1776:64:36"},{"expression":{"id":11559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11555,"name":"royaltyBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11445,"src":"1858:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11557,"indexExpression":{"id":11556,"name":"originalMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11540,"src":"1874:14:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1858:31:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11558,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11503,"src":"1893:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1858:41:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11560,"nodeType":"ExpressionStatement","src":"1858:41:36"},{"eventCall":{"arguments":[{"id":11562,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11529,"src":"1940:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11563,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11503,"src":"1949:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11561,"name":"RoyaltiesReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11459,"src":"1922:17:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":11564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11565,"nodeType":"EmitStatement","src":"1917:39:36"},{"functionReturnParameters":11501,"id":11566,"nodeType":"Return","src":"1974:7:36"}]}}]}},{"expression":{"id":11573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11571,"name":"poolRoyalties","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11426,"src":"2014:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11572,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11503,"src":"2031:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2014:23:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11574,"nodeType":"ExpressionStatement","src":"2014:23:36"},{"eventCall":{"arguments":[{"id":11576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11503,"src":"2068:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11575,"name":"RoyaltiesPooled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11463,"src":"2052:15:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":11577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2052:23:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11578,"nodeType":"EmitStatement","src":"2047:28:36"}]},"id":11580,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11500,"nodeType":"ParameterList","parameters":[],"src":"1305:2:36"},"returnParameters":{"id":11501,"nodeType":"ParameterList","parameters":[],"src":"1325:0:36"},"scope":11902,"src":"1298:784:36","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":11627,"nodeType":"Block","src":"2136:318:36","statements":[{"assignments":[11586],"declarations":[{"constant":false,"id":11586,"mutability":"mutable","name":"amount","nameLocation":"2154:6:36","nodeType":"VariableDeclaration","scope":11627,"src":"2146:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2146:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11591,"initialValue":{"baseExpression":{"id":11587,"name":"royaltyBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11445,"src":"2163:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11590,"indexExpression":{"expression":{"id":11588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2179:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2183:6:36","memberName":"sender","nodeType":"MemberAccess","src":"2179:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2163:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2146:44:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11593,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11586,"src":"2208:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2217:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2208:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20726f79616c7469657320746f20636c61696d","id":11596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2220:23:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e66280a3db0ead30a8f0bc4dcfa4b9643c0ecd9a64e3b51a48e6bb0490a82c","typeString":"literal_string \"No royalties to claim\""},"value":"No royalties to claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5e66280a3db0ead30a8f0bc4dcfa4b9643c0ecd9a64e3b51a48e6bb0490a82c","typeString":"literal_string \"No royalties to claim\""}],"id":11592,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2200:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:44:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11598,"nodeType":"ExpressionStatement","src":"2200:44:36"},{"expression":{"id":11604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11599,"name":"royaltyBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11445,"src":"2254:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11602,"indexExpression":{"expression":{"id":11600,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2270:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2274:6:36","memberName":"sender","nodeType":"MemberAccess","src":"2270:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2254:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":11603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2284:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2254:31:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11605,"nodeType":"ExpressionStatement","src":"2254:31:36"},{"assignments":[11607,null],"declarations":[{"constant":false,"id":11607,"mutability":"mutable","name":"sent","nameLocation":"2301:4:36","nodeType":"VariableDeclaration","scope":11627,"src":"2296:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11606,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11615,"initialValue":{"arguments":[{"hexValue":"","id":11613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":11608,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2311:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2315:6:36","memberName":"sender","nodeType":"MemberAccess","src":"2311:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2322:4:36","memberName":"call","nodeType":"MemberAccess","src":"2311:15:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11586,"src":"2334:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2311:30:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2311:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2295:50:36"},{"expression":{"arguments":[{"id":11617,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11607,"src":"2363:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e6420726f79616c74696573","id":11618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2369:26:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_8141f18633ca03a1fdc9802ea81067bd4501f2f1abafd2a5c68a536e0fbf3df4","typeString":"literal_string \"Failed to send royalties\""},"value":"Failed to send royalties"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8141f18633ca03a1fdc9802ea81067bd4501f2f1abafd2a5c68a536e0fbf3df4","typeString":"literal_string \"Failed to send royalties\""}],"id":11616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2355:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11620,"nodeType":"ExpressionStatement","src":"2355:41:36"},{"eventCall":{"arguments":[{"expression":{"id":11622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2428:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2432:6:36","memberName":"sender","nodeType":"MemberAccess","src":"2428:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11586,"src":"2440:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11621,"name":"RoyaltiesClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11469,"src":"2411:16:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:36:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11626,"nodeType":"EmitStatement","src":"2406:41:36"}]},"functionSelector":"069b7820","id":11628,"implemented":true,"kind":"function","modifiers":[{"id":11583,"kind":"modifierInvocation","modifierName":{"id":11582,"name":"nonReentrant","nameLocations":["2123:12:36"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"2123:12:36"},"nodeType":"ModifierInvocation","src":"2123:12:36"}],"name":"claimRoyalties","nameLocation":"2097:14:36","nodeType":"FunctionDefinition","parameters":{"id":11581,"nodeType":"ParameterList","parameters":[],"src":"2111:2:36"},"returnParameters":{"id":11584,"nodeType":"ParameterList","parameters":[],"src":"2136:0:36"},"scope":11902,"src":"2088:366:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11770,"nodeType":"Block","src":"2512:1169:36","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11634,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11424,"src":"2530:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2530:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e73206d696e74656420796574","id":11637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2547:22:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5efb1b0c2ba5a48f7aebb1cf72a572176e629cab7d74af8b96d72e0516bceca","typeString":"literal_string \"No tokens minted yet\""},"value":"No tokens minted yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5efb1b0c2ba5a48f7aebb1cf72a572176e629cab7d74af8b96d72e0516bceca","typeString":"literal_string \"No tokens minted yet\""}],"id":11633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2522:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2522:48:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11639,"nodeType":"ExpressionStatement","src":"2522:48:36"},{"assignments":[11641],"declarations":[{"constant":false,"id":11641,"mutability":"mutable","name":"poolAmount","nameLocation":"2588:10:36","nodeType":"VariableDeclaration","scope":11770,"src":"2580:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2580:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11643,"initialValue":{"id":11642,"name":"poolRoyalties","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11426,"src":"2601:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2580:34:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11645,"name":"poolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11641,"src":"2632:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2645:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2632:14:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20706f6f6c20726f79616c7469657320746f20636c61696d","id":11648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2648:28:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_0827f36ce427eba71ac55e285c308fe1da11dc18c13e041167731668e50c2dff","typeString":"literal_string \"No pool royalties to claim\""},"value":"No pool royalties to claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0827f36ce427eba71ac55e285c308fe1da11dc18c13e041167731668e50c2dff","typeString":"literal_string \"No pool royalties to claim\""}],"id":11644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2624:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2624:53:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11650,"nodeType":"ExpressionStatement","src":"2624:53:36"},{"assignments":[11652],"declarations":[{"constant":false,"id":11652,"mutability":"mutable","name":"founderShare","nameLocation":"2696:12:36","nodeType":"VariableDeclaration","scope":11770,"src":"2688:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11651,"name":"uint256","nodeType":"ElementaryTypeName","src":"2688:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11658,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11653,"name":"poolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11641,"src":"2711:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3235","id":11654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2724:2:36","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"2711:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":11656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2729:3:36","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2711:21:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2688:44:36"},{"assignments":[11660],"declarations":[{"constant":false,"id":11660,"mutability":"mutable","name":"treasuryShare","nameLocation":"2750:13:36","nodeType":"VariableDeclaration","scope":11770,"src":"2742:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2742:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11666,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11661,"name":"poolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11641,"src":"2766:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3235","id":11662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2779:2:36","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"2766:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":11664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2784:3:36","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2766:21:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2742:45:36"},{"assignments":[11668],"declarations":[{"constant":false,"id":11668,"mutability":"mutable","name":"mintersShare","nameLocation":"2805:12:36","nodeType":"VariableDeclaration","scope":11770,"src":"2797:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2797:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11674,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11669,"name":"poolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11641,"src":"2820:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3530","id":11670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2833:2:36","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"2820:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":11672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:3:36","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2820:21:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2797:44:36"},{"expression":{"id":11677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11675,"name":"poolRoyalties","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11426,"src":"2852:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":11676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2852:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11678,"nodeType":"ExpressionStatement","src":"2852:17:36"},{"assignments":[11680,null],"declarations":[{"constant":false,"id":11680,"mutability":"mutable","name":"sentFounder","nameLocation":"2886:11:36","nodeType":"VariableDeclaration","scope":11770,"src":"2881:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11679,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11687,"initialValue":{"arguments":[{"hexValue":"","id":11685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2937:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":11681,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11422,"src":"2903:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2911:4:36","memberName":"call","nodeType":"MemberAccess","src":"2903:12:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11683,"name":"founderShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11652,"src":"2923:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2903:33:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2903:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2880:60:36"},{"expression":{"arguments":[{"id":11689,"name":"sentFounder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11680,"src":"2958:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e6420666f756e646572207368617265","id":11690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2971:30:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec67e3fadd9d26e4567923932d1ffe51bf1757c5fce4af36734261ce43d31c6c","typeString":"literal_string \"Failed to send founder share\""},"value":"Failed to send founder share"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec67e3fadd9d26e4567923932d1ffe51bf1757c5fce4af36734261ce43d31c6c","typeString":"literal_string \"Failed to send founder share\""}],"id":11688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2950:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:52:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11692,"nodeType":"ExpressionStatement","src":"2950:52:36"},{"assignments":[11694,null],"declarations":[{"constant":false,"id":11694,"mutability":"mutable","name":"sentTreasury","nameLocation":"3018:12:36","nodeType":"VariableDeclaration","scope":11770,"src":"3013:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11693,"name":"bool","nodeType":"ElementaryTypeName","src":"3013:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11701,"initialValue":{"arguments":[{"hexValue":"","id":11699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3072:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":11695,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11420,"src":"3036:8:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3045:4:36","memberName":"call","nodeType":"MemberAccess","src":"3036:13:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11697,"name":"treasuryShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11660,"src":"3057:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3036:35:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3036:39:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3012:63:36"},{"expression":{"arguments":[{"id":11703,"name":"sentTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11694,"src":"3093:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64207472656173757279207368617265","id":11704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3107:31:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf113d3075dfd53ec665ad148ecdde0a04adc78e33c2eda54e0fdefc09ac96fa","typeString":"literal_string \"Failed to send treasury share\""},"value":"Failed to send treasury share"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf113d3075dfd53ec665ad148ecdde0a04adc78e33c2eda54e0fdefc09ac96fa","typeString":"literal_string \"Failed to send treasury share\""}],"id":11702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3085:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3085:54:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11706,"nodeType":"ExpressionStatement","src":"3085:54:36"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3154:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3158:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3154:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":11709,"name":"founder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11422,"src":"3168:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3154:21:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3179:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3183:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3179:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":11713,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11420,"src":"3193:8:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3179:22:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3154:47:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11718,"nodeType":"IfStatement","src":"3150:84:36","trueBody":{"id":11717,"nodeType":"Block","src":"3203:31:36","statements":[{"functionReturnParameters":11632,"id":11716,"nodeType":"Return","src":"3217:7:36"}]}},{"assignments":[11720],"declarations":[{"constant":false,"id":11720,"mutability":"mutable","name":"senderMinted","nameLocation":"3251:12:36","nodeType":"VariableDeclaration","scope":11770,"src":"3243:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11719,"name":"uint256","nodeType":"ElementaryTypeName","src":"3243:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11725,"initialValue":{"baseExpression":{"id":11721,"name":"mintedPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11453,"src":"3266:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11724,"indexExpression":{"expression":{"id":11722,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3282:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3286:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3282:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3266:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3243:50:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11727,"name":"senderMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11720,"src":"3311:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3311:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e73206d696e74656420627920636c61696d616e74","id":11730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3329:30:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_d434da09a4d830f6333d668316af2bf768749817f055c6eee332d79eae3a2d0f","typeString":"literal_string \"No tokens minted by claimant\""},"value":"No tokens minted by claimant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d434da09a4d830f6333d668316af2bf768749817f055c6eee332d79eae3a2d0f","typeString":"literal_string \"No tokens minted by claimant\""}],"id":11726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3303:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:57:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11732,"nodeType":"ExpressionStatement","src":"3303:57:36"},{"assignments":[11734],"declarations":[{"constant":false,"id":11734,"mutability":"mutable","name":"senderShare","nameLocation":"3378:11:36","nodeType":"VariableDeclaration","scope":11770,"src":"3370:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11733,"name":"uint256","nodeType":"ElementaryTypeName","src":"3370:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11741,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11735,"name":"mintersShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11668,"src":"3393:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11736,"name":"senderMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11720,"src":"3408:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3393:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3392:29:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":11739,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11424,"src":"3424:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3392:43:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3370:65:36"},{"expression":{"id":11747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11742,"name":"royaltyBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11445,"src":"3445:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11745,"indexExpression":{"expression":{"id":11743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3461:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3465:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3461:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3445:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11746,"name":"senderShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11734,"src":"3476:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3445:42:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11748,"nodeType":"ExpressionStatement","src":"3445:42:36"},{"assignments":[11750,null],"declarations":[{"constant":false,"id":11750,"mutability":"mutable","name":"sentMinter","nameLocation":"3503:10:36","nodeType":"VariableDeclaration","scope":11770,"src":"3498:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11749,"name":"bool","nodeType":"ElementaryTypeName","src":"3498:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11758,"initialValue":{"arguments":[{"hexValue":"","id":11756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3555:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":11751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3519:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3523:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3519:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3530:4:36","memberName":"call","nodeType":"MemberAccess","src":"3519:15:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11754,"name":"senderShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11734,"src":"3542:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3519:35:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3519:39:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3497:61:36"},{"expression":{"arguments":[{"id":11760,"name":"sentMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11750,"src":"3576:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64206d696e746572207368617265","id":11761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3588:29:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_12ceb2fe1de82b32a601252c64b4841a8862c74b1ce4d482d4fe86c29d316223","typeString":"literal_string \"Failed to send minter share\""},"value":"Failed to send minter share"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12ceb2fe1de82b32a601252c64b4841a8862c74b1ce4d482d4fe86c29d316223","typeString":"literal_string \"Failed to send minter share\""}],"id":11759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3568:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3568:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11763,"nodeType":"ExpressionStatement","src":"3568:50:36"},{"eventCall":{"arguments":[{"expression":{"id":11765,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3650:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3654:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3650:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11767,"name":"senderShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11734,"src":"3662:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11764,"name":"RoyaltiesClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11469,"src":"3633:16:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3633:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11769,"nodeType":"EmitStatement","src":"3628:46:36"}]},"functionSelector":"d67f8d0b","id":11771,"implemented":true,"kind":"function","modifiers":[{"id":11631,"kind":"modifierInvocation","modifierName":{"id":11630,"name":"nonReentrant","nameLocations":["2499:12:36"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"2499:12:36"},"nodeType":"ModifierInvocation","src":"2499:12:36"}],"name":"claimPoolRoyalties","nameLocation":"2469:18:36","nodeType":"FunctionDefinition","parameters":{"id":11629,"nodeType":"ParameterList","parameters":[],"src":"2487:2:36"},"returnParameters":{"id":11632,"nodeType":"ParameterList","parameters":[],"src":"2512:0:36"},"scope":11902,"src":"2460:1221:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11834,"nodeType":"Block","src":"3747:414:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":11782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11773,"src":"3793:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11783,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3802:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3808:9:36","memberName":"timestamp","nodeType":"MemberAccess","src":"3802:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11781,"name":"TransferRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11431,"src":"3778:14:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TransferRecord_$11431_storage_ptr_$","typeString":"type(struct ApeBeatsRoyalties.TransferRecord storage pointer)"}},"id":11785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3778:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_memory_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TransferRecord_$11431_memory_ptr","typeString":"struct ApeBeatsRoyalties.TransferRecord memory"}],"expression":{"id":11778,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"3757:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3773:4:36","memberName":"push","nodeType":"MemberAccess","src":"3757:20:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage_ptr_$_t_struct$_TransferRecord_$11431_storage_$returns$__$attached_to$_t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage_ptr_$","typeString":"function (struct ApeBeatsRoyalties.TransferRecord storage ref[] storage pointer,struct ApeBeatsRoyalties.TransferRecord storage ref)"}},"id":11786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:62:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11787,"nodeType":"ExpressionStatement","src":"3757:62:36"},{"expression":{"id":11789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3829:15:36","subExpression":{"id":11788,"name":"transferIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11437,"src":"3829:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11790,"nodeType":"ExpressionStatement","src":"3829:15:36"},{"body":{"id":11832,"nodeType":"Block","src":"3994:161:36","statements":[{"expression":{"id":11825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11813,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"4008:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11818,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11814,"name":"transferIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11437,"src":"4024:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":11815,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"4040:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:6:36","memberName":"length","nodeType":"MemberAccess","src":"4040:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4024:38:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4008:55:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":11819,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"4066:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11824,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11820,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"4082:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4098:6:36","memberName":"length","nodeType":"MemberAccess","src":"4082:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":11822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4107:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4082:26:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4066:43:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref"}},"src":"4008:101:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref"}},"id":11826,"nodeType":"ExpressionStatement","src":"4008:101:36"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":11827,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"4123:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4139:3:36","memberName":"pop","nodeType":"MemberAccess","src":"4123:19:36","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage_ptr_$","typeString":"function (struct ApeBeatsRoyalties.TransferRecord storage ref[] storage pointer)"}},"id":11830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4123:21:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11831,"nodeType":"ExpressionStatement","src":"4123:21:36"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11791,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"3861:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3877:6:36","memberName":"length","nodeType":"MemberAccess","src":"3861:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"313030","id":11793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3886:3:36","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3861:28:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11795,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"3894:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3910:6:36","memberName":"length","nodeType":"MemberAccess","src":"3894:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3919:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3894:26:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11799,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3924:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3930:9:36","memberName":"timestamp","nodeType":"MemberAccess","src":"3924:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":11801,"name":"recentTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11435,"src":"3942:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransferRecord_$11431_storage_$dyn_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref[] storage ref"}},"id":11803,"indexExpression":{"hexValue":"30","id":11802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3958:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3942:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_TransferRecord_$11431_storage","typeString":"struct ApeBeatsRoyalties.TransferRecord storage ref"}},"id":11804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3961:9:36","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":11430,"src":"3942:28:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":11805,"name":"ROYALTY_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11418,"src":"3973:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":11806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3990:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3973:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3942:49:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3924:67:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3894:97:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":11811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3893:99:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3861:131:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11833,"nodeType":"WhileStatement","src":"3854:301:36"}]},"functionSelector":"3a8de572","id":11835,"implemented":true,"kind":"function","modifiers":[{"id":11776,"kind":"modifierInvocation","modifierName":{"id":11775,"name":"onlyOwner","nameLocations":["3737:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"3737:9:36"},"nodeType":"ModifierInvocation","src":"3737:9:36"}],"name":"recordTransfer","nameLocation":"3696:14:36","nodeType":"FunctionDefinition","parameters":{"id":11774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11773,"mutability":"mutable","name":"tokenId","nameLocation":"3719:7:36","nodeType":"VariableDeclaration","scope":11835,"src":"3711:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3711:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3710:17:36"},"returnParameters":{"id":11777,"nodeType":"ParameterList","parameters":[],"src":"3747:0:36"},"scope":11902,"src":"3687:474:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11862,"nodeType":"Block","src":"4266:136:36","statements":[{"expression":{"id":11850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11846,"name":"originalMinters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11449,"src":"4276:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":11848,"indexExpression":{"id":11847,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11837,"src":"4292:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4276:24:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11849,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11839,"src":"4303:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4276:33:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11851,"nodeType":"ExpressionStatement","src":"4276:33:36"},{"expression":{"id":11856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11852,"name":"mintedPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11453,"src":"4319:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11854,"indexExpression":{"id":11853,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11839,"src":"4335:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4319:23:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11855,"name":"amountMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11841,"src":"4346:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4319:39:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11857,"nodeType":"ExpressionStatement","src":"4319:39:36"},{"expression":{"id":11860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11858,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11424,"src":"4368:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11859,"name":"amountMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11841,"src":"4383:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4368:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11861,"nodeType":"ExpressionStatement","src":"4368:27:36"}]},"functionSelector":"1efee976","id":11863,"implemented":true,"kind":"function","modifiers":[{"id":11844,"kind":"modifierInvocation","modifierName":{"id":11843,"name":"onlyOwner","nameLocations":["4256:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"4256:9:36"},"nodeType":"ModifierInvocation","src":"4256:9:36"}],"name":"setOriginalMinter","nameLocation":"4176:17:36","nodeType":"FunctionDefinition","parameters":{"id":11842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11837,"mutability":"mutable","name":"tokenId","nameLocation":"4202:7:36","nodeType":"VariableDeclaration","scope":11863,"src":"4194:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11836,"name":"uint256","nodeType":"ElementaryTypeName","src":"4194:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11839,"mutability":"mutable","name":"minter","nameLocation":"4219:6:36","nodeType":"VariableDeclaration","scope":11863,"src":"4211:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11838,"name":"address","nodeType":"ElementaryTypeName","src":"4211:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11841,"mutability":"mutable","name":"amountMinted","nameLocation":"4235:12:36","nodeType":"VariableDeclaration","scope":11863,"src":"4227:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11840,"name":"uint256","nodeType":"ElementaryTypeName","src":"4227:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4193:55:36"},"returnParameters":{"id":11845,"nodeType":"ParameterList","parameters":[],"src":"4266:0:36"},"scope":11902,"src":"4167:235:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11880,"nodeType":"Block","src":"4505:65:36","statements":[{"expression":{"arguments":[{"id":11875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11865,"src":"4533:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11876,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11867,"src":"4542:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11877,"name":"amountMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11869,"src":"4550:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11874,"name":"setOriginalMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11863,"src":"4515:17:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":11878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:48:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11879,"nodeType":"ExpressionStatement","src":"4515:48:36"}]},"functionSelector":"88b48eea","id":11881,"implemented":true,"kind":"function","modifiers":[{"id":11872,"kind":"modifierInvocation","modifierName":{"id":11871,"name":"onlyOwner","nameLocations":["4495:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":2199,"src":"4495:9:36"},"nodeType":"ModifierInvocation","src":"4495:9:36"}],"name":"mintAndRecord","nameLocation":"4417:13:36","nodeType":"FunctionDefinition","parameters":{"id":11870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11865,"mutability":"mutable","name":"tokenId","nameLocation":"4439:7:36","nodeType":"VariableDeclaration","scope":11881,"src":"4431:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11864,"name":"uint256","nodeType":"ElementaryTypeName","src":"4431:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11867,"mutability":"mutable","name":"minter","nameLocation":"4456:6:36","nodeType":"VariableDeclaration","scope":11881,"src":"4448:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11866,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11869,"mutability":"mutable","name":"amountMinted","nameLocation":"4472:12:36","nodeType":"VariableDeclaration","scope":11881,"src":"4464:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11868,"name":"uint256","nodeType":"ElementaryTypeName","src":"4464:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4430:55:36"},"returnParameters":{"id":11873,"nodeType":"ParameterList","parameters":[],"src":"4505:0:36"},"scope":11902,"src":"4408:162:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11900,"nodeType":"Block","src":"4649:71:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":11894,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11883,"src":"4702:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4694:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":11892,"name":"uint160","nodeType":"ElementaryTypeName","src":"4694:7:36","typeDescriptions":{}}},"id":11895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4694:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":11891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11890,"name":"uint256","nodeType":"ElementaryTypeName","src":"4686:7:36","typeDescriptions":{}}},"id":11896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:22:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3230","id":11897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:36","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"expression":{"id":11888,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"4666:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5138_$","typeString":"type(library Strings)"}},"id":11889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4674:11:36","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"4666:19:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":11898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4666:47:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":11887,"id":11899,"nodeType":"Return","src":"4659:54:36"}]},"id":11901,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"4585:11:36","nodeType":"FunctionDefinition","parameters":{"id":11884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11883,"mutability":"mutable","name":"addr","nameLocation":"4605:4:36","nodeType":"VariableDeclaration","scope":11901,"src":"4597:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11882,"name":"address","nodeType":"ElementaryTypeName","src":"4597:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4596:14:36"},"returnParameters":{"id":11887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11901,"src":"4634:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11885,"name":"string","nodeType":"ElementaryTypeName","src":"4634:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4633:15:36"},"scope":11902,"src":"4576:144:36","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":11903,"src":"224:4498:36","usedErrors":[2154,2159,3557],"usedEvents":[2165,11459,11463,11469]}],"src":"32:4691:36"},"id":36},"contracts/LocalProxy.sol":{"ast":{"absolutePath":"contracts/LocalProxy.sol","exportedSymbols":{"ERC1967Proxy":[2504],"ERC1967Utils":[2798],"LocalProxy":[11918],"Proxy":[2834]},"id":11919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11904,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:37"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","id":11905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11919,"sourceUnit":2505,"src":"57:64:37","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11906,"name":"ERC1967Proxy","nameLocations":["146:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":2504,"src":"146:12:37"},"id":11907,"nodeType":"InheritanceSpecifier","src":"146:12:37"}],"canonicalName":"LocalProxy","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":11918,"linearizedBaseContracts":[11918,2504,2834],"name":"LocalProxy","nameLocation":"132:10:37","nodeType":"ContractDefinition","nodes":[{"body":{"id":11916,"nodeType":"Block","src":"218:2:37","statements":[]},"id":11917,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":11912,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11909,"src":"206:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":11913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"214:2:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":11914,"kind":"baseConstructorSpecifier","modifierName":{"id":11911,"name":"ERC1967Proxy","nameLocations":["193:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":2504,"src":"193:12:37"},"nodeType":"ModifierInvocation","src":"193:24:37"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11909,"mutability":"mutable","name":"_logic","nameLocation":"185:6:37","nodeType":"VariableDeclaration","scope":11917,"src":"177:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11908,"name":"address","nodeType":"ElementaryTypeName","src":"177:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"176:16:37"},"returnParameters":{"id":11915,"nodeType":"ParameterList","parameters":[],"src":"218:0:37"},"scope":11918,"src":"165:55:37","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":11919,"src":"123:99:37","usedErrors":[2524,2537,3094,3482],"usedEvents":[2296]}],"src":"32:191:37"},"id":37}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x315bcaebd3738cfe34ddd3525c8d3f1694afaabe0fc9f3857727497b19fb9473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58701c5c131b64e5a48e712c2b89b83a97ee5a2e720650f3941edbf1b90fe75\",\"dweb:/ipfs/QmW3bmSiiMqcTZLBRHFr2ztf9mriMuHrkqWbAv9WQhxFZ8\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol":{"ERC721RoyaltyUpgradeable":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-721 with the ERC-2981 NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol\":\"ERC721RoyaltyUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x315bcaebd3738cfe34ddd3525c8d3f1694afaabe0fc9f3857727497b19fb9473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58701c5c131b64e5a48e712c2b89b83a97ee5a2e720650f3941edbf1b90fe75\",\"dweb:/ipfs/QmW3bmSiiMqcTZLBRHFr2ztf9mriMuHrkqWbAv9WQhxFZ8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol\":{\"keccak256\":\"0xec1f7702e8329825b0b978aba95f01f5cb9bc734e056b3b0e5afd5a12fd479e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3873e423c3b062346f3a99e1e4026b7d7e480ae06858d5c4a040fefaeb73193\",\"dweb:/ipfs/QmNbKGspYZy8Xya9LJJP3z2gsAygHHzeLSu5pWe6G2QCG4\"]},\"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol\":{\"keccak256\":\"0xb5cd97fce008dbf4d908641008cf18ca4b26f5afe5d7a6fec2f79c03e6b1e99e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1af2e4cfae4d9bae3dc9b619572af646e7e6d26b4e2914a50486c9f63a8005b\",\"dweb:/ipfs/QmZmgcfzGkmcgjFd8UNqvhkc7bAkwcsrPiLGde5qZYCH5E\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol":{"ERC2981Upgradeable":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol\":\"ERC2981Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol\":{\"keccak256\":\"0xb5cd97fce008dbf4d908641008cf18ca4b26f5afe5d7a6fec2f79c03e6b1e99e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1af2e4cfae4d9bae3dc9b619572af646e7e6d26b4e2914a50486c9f63a8005b\",\"dweb:/ipfs/QmZmgcfzGkmcgjFd8UNqvhkc7bAkwcsrPiLGde5qZYCH5E\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":404,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":463,"id":null,"parameterSlots":1,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":490,"id":3301,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040526102d38038038061001481610194565b92833981019060408183031261018f5780516001600160a01b03811680820361018f5760208381015190936001600160401b03821161018f570184601f8201121561018f5780519061006d610068836101cf565b610194565b9582875285838301011161018f57849060005b83811061017b57505060009186010152813b15610163577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28351156101455750600080848461012c96519101845af4903d1561013c573d61011c610068826101cf565b908152600081943d92013e6101ea565b505b6040516085908161024e8239f35b606092506101ea565b9250505034610154575061012e565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b818101830151888201840152869201610080565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101b957604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116101b957601f01601f191660200190565b9061021157508051156101ff57602081519101fd5b60405163d6bda27560e01b8152600490fd5b81511580610244575b610222575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021a56fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e15604b573d90f35b3d90fdfea2646970667358221220d5689bb9bdf453c58b2985b84bdedcbe8410e4ee1473f34ac7359ac72b7aa41d64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2D3 DUP1 CODESIZE SUB DUP1 PUSH2 0x14 DUP2 PUSH2 0x194 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH2 0x18F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x18F JUMPI PUSH1 0x20 DUP4 DUP2 ADD MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18F JUMPI ADD DUP5 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x18F JUMPI DUP1 MLOAD SWAP1 PUSH2 0x6D PUSH2 0x68 DUP4 PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST SWAP6 DUP3 DUP8 MSTORE DUP6 DUP4 DUP4 ADD ADD GT PUSH2 0x18F JUMPI DUP5 SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x17B JUMPI POP POP PUSH1 0x0 SWAP2 DUP7 ADD ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x163 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP4 MLOAD ISZERO PUSH2 0x145 JUMPI POP PUSH1 0x0 DUP1 DUP5 DUP5 PUSH2 0x12C SWAP7 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x13C JUMPI RETURNDATASIZE PUSH2 0x11C PUSH2 0x68 DUP3 PUSH2 0x1CF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1EA JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x85 SWAP1 DUP2 PUSH2 0x24E DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1EA JUMP JUMPDEST SWAP3 POP POP POP CALLVALUE PUSH2 0x154 JUMPI POP PUSH2 0x12E JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP9 DUP3 ADD DUP5 ADD MSTORE DUP7 SWAP3 ADD PUSH2 0x80 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1B9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x211 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1FF JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x244 JUMPI JUMPDEST PUSH2 0x222 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x21A JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 PUSH9 0x9BB9BDF453C58B2985 0xB8 0x4B 0xDE 0xDC 0xBE DUP5 LT 0xE4 0xEE EQ PUSH20 0xF34AC7359AC72B7AA41D64736F6C634300081800 CALLER ","sourceMap":"600:1117:12:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:12;;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;600:1117:12;;;;;;;;-1:-1:-1;600:1117:12;;;;;1748:29:13;;:34;1744:119;;811:66;;;-1:-1:-1;;;;;;811:66:13;;;;;600:1117:12;;;2407:36:13;-1:-1:-1;;2407:36:13;600:1117:12;;2458:15:13;:11;;4065:25:20;-1:-1:-1;4065:25:20;;;4107:55;4065:25;;600:1117:12;;4065:25:20;;;;600:1117:12;;;;;;;;;:::i;:::-;;;;-1:-1:-1;600:1117:12;;;;;;4107:55:20;:::i;:::-;;2454:148:13;600:1117:12;;;;;;;;;;;;-1:-1:-1;4107:55:20;:::i;2454:148:13:-;6163:9;;;;;6159:70;;2454:148;;;6159:70;-1:-1:-1;;;6199:19:13;;;;;1744:119;600:1117:12;;;;1805:47:13;;;;;;;;;600:1117:12;1805:47:13;600:1117:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:1117:12;;;;;;;;;-1:-1:-1;;600:1117:12;;;-1:-1:-1;;;;;600:1117:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:12;;;;;;-1:-1:-1;;600:1117:12;;;;:::o;4437:582:20:-;;4609:8;;-1:-1:-1;600:1117:12;;5690:21:20;:17;;5815:105;;;;;;5686:301;600:1117:12;;-1:-1:-1;;;5957:19:20;;;;;4605:408;600:1117:12;;4857:22:20;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;600:1117:12;;-1:-1:-1;;;4933:24:20;;-1:-1:-1;;;;;600:1117:12;;;4933:24:20;;;600:1117:12;;;4933:24:20;4857:49;4883:18;;;:23;4857:49;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e15604b573d90f35b3d90fdfea2646970667358221220d5689bb9bdf453c58b2985b84bdedcbe8410e4ee1473f34ac7359ac72b7aa41d64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 PUSH9 0x9BB9BDF453C58B2985 0xB8 0x4B 0xDE 0xDC 0xBE DUP5 LT 0xE4 0xEE EQ PUSH20 0xF34AC7359AC72B7AA41D64736F6C634300081800 CALLER ","sourceMap":"600:1117:12:-:0;;;811:66:13;;-1:-1:-1;;;;;;;;;;;811:66:13;1019:819:14;-1:-1:-1;;1019:819:14;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122077169939aebac8c784f811c1524bd6428fcc8411db0df4cf2029043a7b2c8eb064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x169939AEBAC8C784F811C1524BD6428FCC8411DB0DF4CF20 0x29 DIV GASPRICE PUSH28 0x2C8EB064736F6C634300081800330000000000000000000000000000 ","sourceMap":"496:5741:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122077169939aebac8c784f811c1524bd6428fcc8411db0df4cf2029043a7b2c8eb064736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x169939AEBAC8C784F811C1524BD6428FCC8411DB0DF4CF20 0x29 DIV GASPRICE PUSH28 0x2C8EB064736F6C634300081800330000000000000000000000000000 ","sourceMap":"496:5741:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ecdf901afbdc72fc0e11c9f97f700647fd4534460b1a248b840e1ee0e8072e4d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDF SWAP1 BYTE 0xFB 0xDC PUSH19 0xFC0E11C9F97F700647FD4534460B1A248B840E 0x1E 0xE0 0xE8 SMOD 0x2E 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ecdf901afbdc72fc0e11c9f97f700647fd4534460b1a248b840e1ee0e8072e4d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDF SWAP1 BYTE 0xFB 0xDC PUSH19 0xFC0E11C9F97F700647FD4534460B1A248B840E 0x1E 0xE0 0xE8 SMOD 0x2E 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f96abf9e5e9b2637143cf955b96712d5b7b6b6db587460ddf4f03edc9cd0d45464736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH11 0xBF9E5E9B2637143CF955B9 PUSH8 0x12D5B7B6B6DB5874 PUSH1 0xDD DELEGATECALL CREATE RETURNDATACOPY 0xDC SWAP13 0xD0 0xD4 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"233:5762:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f96abf9e5e9b2637143cf955b96712d5b7b6b6db587460ddf4f03edc9cd0d45464736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH11 0xBF9E5E9B2637143CF955B9 PUSH8 0x12D5B7B6B6DB5874 PUSH1 0xDD DELEGATECALL CREATE RETURNDATACOPY 0xDC SWAP13 0xD0 0xD4 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"233:5762:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200668f11768341023d16478708aab13ebe06e165ed278d68666e2adb65eab6acf64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH9 0xF11768341023D16478 PUSH17 0x8AAB13EBE06E165ED278D68666E2ADB65E 0xAB PUSH11 0xCF64736F6C634300081800 CALLER ","sourceMap":"202:4980:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200668f11768341023d16478708aab13ebe06e165ed278d68666e2adb65eab6acf64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH9 0xF11768341023D16478 PUSH17 0x8AAB13EBE06E165ED278D68666E2ADB65E 0xAB PUSH11 0xCF64736F6C634300081800 CALLER ","sourceMap":"202:4980:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200546ae47f4604915a5beb301e8301274031c3d3d0e4f46fc246ad7e3459c475864736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV CHAINID 0xAE SELFBALANCE DELEGATECALL PUSH1 0x49 ISZERO 0xA5 0xBE 0xB3 ADD 0xE8 ADDRESS SLT PUSH21 0x31C3D3D0E4F46FC246AD7E3459C475864736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200546ae47f4604915a5beb301e8301274031c3d3d0e4f46fc246ad7e3459c475864736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV CHAINID 0xAE SELFBALANCE DELEGATECALL PUSH1 0x49 ISZERO 0xA5 0xBE 0xB3 ADD 0xE8 ADDRESS SLT PUSH21 0x31C3D3D0E4F46FC246AD7E3459C475864736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220349fad931e95b8b8d069aea6857f4fc049eea29c313ad774ba26f08f6d7aaa3964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xAD SWAP4 0x1E SWAP6 0xB8 0xB8 0xD0 PUSH10 0xAEA6857F4FC049EEA29C BALANCE GASPRICE 0xD7 PUSH21 0xBA26F08F6D7AAA3964736F6C634300081800330000 ","sourceMap":"1407:2774:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220349fad931e95b8b8d069aea6857f4fc049eea29c313ad774ba26f08f6d7aaa3964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xAD SWAP4 0x1E SWAP6 0xB8 0xB8 0xD0 PUSH10 0xAEA6857F4FC049EEA29C BALANCE GASPRICE 0xD7 PUSH21 0xBA26F08F6D7AAA3964736F6C634300081800330000 ","sourceMap":"1407:2774:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122024e80dcdc362ddcd65194544245f9c7b00963965c0112d45dd371ef6286c908064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xE8 0xD 0xCD 0xC3 PUSH3 0xDDCD65 NOT GASLIMIT PREVRANDAO 0x24 PUSH0 SWAP13 PUSH28 0x963965C0112D45DD371EF6286C908064736F6C6343000818003300 ","sourceMap":"221:811:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122024e80dcdc362ddcd65194544245f9c7b00963965c0112d45dd371ef6286c908064736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xE8 0xD 0xCD 0xC3 PUSH3 0xDDCD65 NOT GASLIMIT PREVRANDAO 0x24 PUSH0 SWAP13 PUSH28 0x963965C0112D45DD371EF6286C908064736F6C6343000818003300 ","sourceMap":"221:811:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122077271e63647bd220f8ede09d209a291a701de33db7f0ba16a3d88af9ff787b9164736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x271E63647BD220F8EDE09D209A291A701DE33DB7F0BA16A3 0xD8 DUP11 0xF9 SELFDESTRUCT PUSH25 0x7B9164736F6C63430008180033000000000000000000000000 ","sourceMap":"1353:22982:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122077271e63647bd220f8ede09d209a291a701de33db7f0ba16a3d88af9ff787b9164736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x271E63647BD220F8EDE09D209A291A701DE33DB7F0BA16A3 0xD8 DUP11 0xF9 SELFDESTRUCT PUSH25 0x7B9164736F6C63430008180033000000000000000000000000 ","sourceMap":"1353:22982:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:32:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:32:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:33:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:33:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/ApeBeatsGenesis.sol":{"ApeBeatsGenesis":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"FCFS_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FCFS_MAX_PER_WALLET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FCFS_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FOUNDER_MINT_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GTD_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GTD_MAX_PER_WALLET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GTD_MINT_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GTD_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PUBLIC_MAX_PER_WALLET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PUBLIC_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROYALTY_BASIS_POINTS","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOTAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimPoolRoyalties","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimRoyalties","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delegateRegistry","outputs":[{"internalType":"contract IDelegateRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fcfsMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fcfsMintStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"founder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"founderMintStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"founderMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gtdMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gtdMintStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_gtdMerkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"_fcfsMerkleRoot","type":"bytes32"},{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_metadataLib","type":"address"},{"internalType":"address payable","name":"_royaltiesContract","type":"address"},{"internalType":"address","name":"_delegateRegistry","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isFCFSMintActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isFounderMintActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isGTDMintActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPublicMintActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metadataLib","outputs":[{"internalType":"contract ApeBeatsMetadataLib","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"mintFCFS","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintFounder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"mintGTD","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintPublic","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"mintedPerWalletFCFS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"mintedPerWalletGTD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"mintedPerWalletPublic","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"prerevealNoiseBase64","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"publicMintStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"reveal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"royaltiesContract","outputs":[{"internalType":"contract ApeBeatsRoyalties","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"setMixedAudioURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_prerevealNoiseBase64","type":"string"}],"name":"setPrerevealNoiseBase64","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_revealed","type":"bool"}],"name":"setRevealed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"setWaveformURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startFCFSMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startPublicMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234620000bd577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c16620000ae57506001600160401b036002600160401b03198282160162000068575b6040516136609081620000c38239f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808062000058565b63f92ee8a960e01b8152600490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a71461260a57508063069b78201461259d57806306fdde03146124f3578063081812fc146124a9578063095ea7b3146123c05780630ea5891514610b4e5780630fb51ac41461236357806313bfffac1461233a57806318919d62146120bf57806323b872dd146120a757806324659318146120895780632a55205a14611fa15780632d63267814611b1b5780632d6b622414611f8657806334f8f26814611f6b5780633c404a9c14610fd55780633ccfd60b14611eaf5780633f2c0d6a14611c3657806340b5548014611c1357806342842e0e14611be55780634a7887c414611bc85780634d853ee514611b9f5780634e8117a914611b765780635270c75314611b595780635c121bc914611b20578063611f3f1014611b1b57806361d027b314611af25780636352211e14611ac15780636ac6319c14611aa557806370a0823114611a4f578063715018a6146119e457806374819ef7146119c857806376c25e6f1461199f57806376c64c621461191a5780637726c505146118ff5780637bb23e3a146118e15780637d330cdd1461186e5780637f0505f1146118355780638539cb821461181957806389d29c4c146110465780638cfec4c0146110285780638da5cb5b14610ff2578063902d55a514610fd55780639134d9c214610fb057806395d89b4114610ecf578063a22cb46514610e2d578063a2309ff814610e10578063a3eca3ed14610d78578063aa0f0d7f14610b92578063ab13c08914610b53578063b0660c7714610b4e578063b32395ca14610b15578063b4bbb18f14610910578063b88d4fde146108a4578063bfa4177714610886578063c2ca0ac514610812578063c87b56dd146106f7578063d0e8f26e146106d9578063d67f8d0b1461065b578063e0a80853146105d9578063e985e9c51461058a578063eafd48911461056c578063ef39154b1461054e578063efd0cbf91461031b5763f2fde38b146102ec57600080fd5b34610318576020366003190112610318576103156103086126d9565b610310612fbd565b612ebf565b80f35b80fd5b50602036600319011261031857600435610333612f33565b61033b612e39565b15610509576103586101a4610351838554612a08565b1115612a15565b600581116104cd573382526010602052610382600561037b836040862054612a08565b1115612a9b565b675fc1b971363200009080820291820481036104b9576103a482341015612a58565b3383526010602052604083206103bb828254612a08565b9055825b81811061040e575050818134116103e6575b600160008051602061358b8339815191525580f35b8080806103f66104079534612b86565b335af1610401612b93565b50612bc3565b38816103d1565b61042461041b8554612b77565b80865533613121565b600654845485916001600160a01b031690813b156104b557829160648392604051948593849263445a477560e11b84526004840152336024840152600160448401525af180156104aa57610492575b5090600191543360008051602061350b8339815191528780a3016103bf565b61049b90612721565b6104a6578338610473565b8380fd5b6040513d84823e3d90fd5b8280fd5b634e487b7160e01b83526011600452602483fd5b60405162461bcd60e51b8152602060048201526014602482015273115e18d959591cc81c1d589b1a58c81b1a5b5a5d60621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5075626c6963206d696e74207068617365206e6f7420616374697665000000006044820152606490fd5b50346103185780600319360112610318576020600154604051908152f35b50346103185780600319360112610318576020600b54604051908152f35b5034610318576040366003190112610318576105a46126d9565b6105b56105af6126ef565b916128e1565b9060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461031857602036600319011261031857600435801515809103610656578190610602612fbd565b6005546001600160a01b031690813b1561065257829160248392604051948593849263e0a8085360e01b845260048401525af180156104aa576106425750f35b61064b90612721565b6103185780f35b5050fd5b600080fd5b5034610318578060031936011261031857610674612f33565b60065481906001600160a01b0316803b156106d65781809160046040518094819363d67f8d0b60e01b83525af180156104aa576106c2575b50600160008051602061358b8339815191525580f35b6106cb90612721565b6103185780386106ac565b50fd5b50346103185780600319360112610318576020600a54604051908152f35b503461031857602080600319360112610802576005546004359083906001600160a01b0390811661072784612f63565b936040518095819482936309aafb6160e01b845260048401526060602484015261075360648401612954565b9116604483015203915afa928315610806578093610786575b50506107826040519282849384528301906126b4565b0390f35b909192503d8082843e610799818461276a565b8201918381840312610802578051906001600160401b0382116104b5570182601f82011215610802578051916107ce8361278b565b936107dc604051958661276a565b8385528584840101116103185750906107fa91848085019101612691565b90388061076c565b5080fd5b604051903d90823e3d90fd5b50346103185760203660031901126103185780600435610830612fbd565b6005546001600160a01b039190821661084882612f63565b90803b15610882578492836044926040519687958694632fedc38160e21b865260048601521660248401525af180156104aa576106425750f35b8480fd5b50346103185780600319360112610318576020600954604051908152f35b5034610318576080366003190112610318576108be6126d9565b6108c66126ef565b90604435606435926001600160401b0384116108825736602385011215610882576108fe6103159436906024816004013591016127a6565b9261090a838383612bff565b336133be565b50346103185760203660031901126103185760043561092d612f33565b6004546001600160a01b039081163303610ad857610949612ea8565b15610a9357600d54600461095d8483612a08565b11610a4e578261097d916109786101a4610351848954612a08565b612a08565b600d55825b8281106109b257836004600d54146109a957600160008051602061358b8339815191525580f35b42600a556103d1565b6109cc6109bf8554612b77565b8086558360045416613121565b83826006541681548460045416823b156104a6576064849283604051958694859363445a477560e11b855260048501526024840152600160448401525af180156104aa57610a3a575b5050600190826004541685549060008051602061350b8339815191528780a301610982565b610a4390612721565b6104a6578338610a15565b60405162461bcd60e51b815260206004820152601a60248201527f4578636565647320666f756e646572206d696e74206c696d69740000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f466f756e646572206d696e74207068617365206e6f74206163746976650000006044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527413db9b1e48199bdd5b99195c8818d85b881b5a5b9d605a1b6044820152606490fd5b5034610318576020366003190112610318576020906040906001600160a01b03610b3d6126d9565b168152600e83522054604051908152f35b612705565b5034610318578060031936011261031857610782604051610b7e81610b7781612954565b038261276a565b6040519182916020835260208301906126b4565b5034610318576020906020600319360112610318576001600160401b036004358181116104b557366023820112156104b55780600401359182116104b557602436602484840101116104a657610be6612fbd565b8215610d3357610bf760075461291a565b601f8111610cce575b508394601f8411600114610c4757505082938291610c339492610c39575b50508160011b916000199060031b1c19161790565b60075580f35b602492500101353880610c1e565b7fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889291601f1985169186915b838310610cb25750505094836001959610610c95575b505050811b0160075580f35b0160240135600019600384901b60f8161c19169055388080610c89565b908060018a978483969c89010135815501960198019190610c73565b60076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688601f850160051c81019160208610610d29575b601f0160051c01905b818110610d1d5750610c00565b60008155600101610d10565b9091508190610d07565b60405162461bcd60e51b815260206004820152601d60248201527f50726572657665616c205552492063616e6e6f7420626520656d7074790000006044820152606490fd5b5034610318578060031936011261031857610d91612fbd565b600a548015159081610de5575b5015610dab5742600b5580f35b60405162461bcd60e51b815260206004820152601260248201527111d511081b5a5b9d081b9bdd08195b99195960721b6044820152606490fd5b90506103848101809111610dfc5742101538610d9e565b634e487b7160e01b82526011600452602482fd5b503461031857806003193601126103185760209054604051908152f35b503461031857604036600319011261031857610e476126d9565b60243590811515809203610656576001600160a01b0316908115610eb657610e6e336128e1565b82600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b604051630b61174360e31b815260048101839052602490fd5b50346103185780600319360112610318576040516000805160206135eb8339815191528054826000610f008361291a565b9283835260209460019186600182169182600014610f8e575050600114610f44575b5050610f309250038361276a565b6107826040519282849384528301906126b4565b85925060005260008051602061354b833981519152906000915b858310610f76575050610f3093508201018580610f22565b80548389018501528794508693909201918101610f5e565b9250935050610f3094915060ff191682840152151560051b8201018580610f22565b50346103185780600319360112610318576020610fcb612ea8565b6040519015158152f35b503461031857806003193601126103185760206040516101a48152f35b503461031857806003193601126103185760008051602061356b833981519152546040516001600160a01b039091168152602090f35b50346103185780600319360112610318576020600c54604051908152f35b50346103185760c0366003190112610318576044356001600160a01b038116810361065657606435906001600160a01b038216820361065657608435916001600160a01b03831683036104a65760a4356001600160a01b0381168103610656576000805160206135cb83398151915254926001600160401b03841680159081611809575b60011490816117ff575b1590816117f6575b506117e45760016001600160401b03198516176000805160206135cb8339815191525560ff8460401c16156117b7575b60405161111881612734565b600f81526e417065426561747347656e6573697360881b60208201526040519061114182612734565b600382526241424760e81b60208301526111596134db565b6111616134db565b8051906001600160401b0382116117a35761118a60008051602061352b8339815191525461291a565b601f811161172d575b50602090601f831160011461169e576111c392918a918361157a5750508160011b916000199060031b1c19161790565b60008051602061352b833981519152555b8051906001600160401b03821161168a576111fd6000805160206135eb8339815191525461291a565b601f8111611614575b50602090601f831160011461158557611236929189918361157a5750508160011b916000199060031b1c19161790565b6000805160206135eb833981519152555b61124f6134db565b6112576134db565b61126033612ebf565b6112686134db565b6112706134db565b600160008051602061358b8339815191525561128a6134db565b6001600160a01b03811615611535576001600160a01b038316156114e5576001600160a01b0385161561148e576001600160a01b038216156114385760048035600155602435600255600380546001600160a01b03199081166001600160a01b0394851617909155815481163317909155600580548216948316949094179093556006805480851687841690811790925560088054909516939092169290921790925590841690811792831561141f5760405193604085018581106001600160401b038211176114095760409081529085526101a46020909501949094526001600160a01b03908116911617606960a21b177fdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b005542600955901c60ff16156113af5780f35b68ff0000000000000000196000805160206135cb83398151915254166000805160206135cb833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b634e487b7160e01b600052604160045260246000fd5b604051635b6cc80560e11b815260048101869052602490fd5b60405162461bcd60e51b815260206004820152602860248201527f44656c65676174652072656769737472792063616e6e6f74206265207a65726f604482015267206164647265737360c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602960248201527f526f79616c7469657320636f6e74726163742063616e6e6f74206265207a65726044820152686f206164647265737360b81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d657461646174614c69622063616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606490fd5b015190503880610c1e565b6000805160206135eb833981519152895288929160008051602061354b833981519152915b601f19841685106115f9576001945083601f198116106115e0575b505050811b016000805160206135eb83398151915255611247565b015160001960f88460031b161c191690553880806115c5565b818101518355602094850194600190930192909101906115aa565b6000805160206135eb833981519152600052601f830160051c60008051602061354b8339815191520160208410611675575b601f820160051c60008051602061354b8339815191520181106116695750611206565b60008155600101611646565b5060008051602061354b833981519152611646565b634e487b7160e01b88526041600452602488fd5b60008051602061352b8339815191528a5289929160008051602061360b833981519152915b601f1984168510611712576001945083601f198116106116f9575b505050811b0160008051602061352b833981519152556111d4565b015160001960f88460031b161c191690553880806116de565b818101518355602094850194600190930192909101906116c3565b60008051602061352b833981519152600052601f830160051c60008051602061360b833981519152016020841061178e575b601f820160051c60008051602061360b8339815191520181106117825750611193565b6000815560010161175f565b5060008051602061360b83398151915261175f565b634e487b7160e01b89526041600452602489fd5b68ffffffffffffffffff19841668010000000000000001176000805160206135cb8339815191525561110c565b60405163f92ee8a960e01b8152600490fd5b905015386110dc565b303b1591506110d4565b604086901c60ff161591506110ca565b5034610318578060031936011261031857602060405160018152f35b5034610318576020366003190112610318576020906040906001600160a01b0361185d6126d9565b168152600f83522054604051908152f35b5034610318578061187e366127dd565b90611887612fbd565b6005546001600160a01b031691823b156118dc576118cb92849283604051809681958294637d330cdd60e01b845260048401526040602484015260448301906126b4565b03925af180156104aa576106425750f35b505050fd5b50346103185780600319360112610318576020600254604051908152f35b50346103185780600319360112610318576020610fcb612e7d565b5034610318578060031936011261031857611933612fbd565b600b548015159081611988575b501561194d5742600c5580f35b60405162461bcd60e51b81526020600482015260136024820152721190d194c81b5a5b9d081b9bdd08195b991959606a1b6044820152606490fd5b90506107088101809111610dfc5742101538611940565b50346103185780600319360112610318576006546040516001600160a01b039091168152602090f35b5034610318578060031936011261031857602060405160058152f35b50346103185780600319360112610318576119fd612fbd565b60008051602061356b83398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461031857602036600319011261031857611a696126d9565b906001600160a01b03821615611a8d576020611a84836128a8565b54604051908152f35b602490604051906322718ad960e21b82526004820152fd5b50346103185780600319360112610318576020604051602a8152f35b5034610318576020366003190112610318576020611ae0600435612f63565b6040516001600160a01b039091168152f35b50346103185780600319360112610318576003546040516001600160a01b039091168152602090f35b612885565b5034610318576020366003190112610318576020906040906001600160a01b03611b486126d9565b168152601083522054604051908152f35b503461031857806003193601126103185760206040516103848152f35b50346103185780600319360112610318576005546040516001600160a01b039091168152602090f35b50346103185780600319360112610318576004546040516001600160a01b039091168152602090f35b503461031857806003193601126103185760206040516107088152f35b503461031857610315611bf736612850565b9060405192611c058461274f565b85845261090a838383612bff565b50346103185780600319360112610318576020604051673a4965bf58a400008152f35b50604036600319011261031857611c4b6126d9565b60249081356001600160401b0381116104a657611c6c903690600401612820565b90611c75612f33565b611c7d612e7d565b15611e6b57845460018101809111611e1f576101a4611c9d911115612a15565b611cbb673a4965bf58a4000093611cb685341015612a58565b612ff6565b9060018060a01b039283831692838852600e6020526040882054611e325791611d1e91611d19611d239460405160208101916001600160601b03199060601b16825260148152611d0a81612734565b51902092600154923691612ade565b6130cd565b612b34565b8452600e6020526040842080549060018201809211611e1f579085929155611d57611d4e8354612b77565b80845533613121565b600654168154813b156104b557829160648392604051948593849263445a477560e11b84526004840152338a840152600160448401525af180156104aa57611e0b575b50543360008051602061350b8339815191528580a33411611dcb5750600160008051602061358b8339815191525580f35b673a4965bf58a3ffff19340190348211611df9575081808080611df394335af1610401612b93565b386106ac565b634e487b7160e01b8352601160045282fd5b611e1490612721565b6104b5578238611d9a565b634e487b7160e01b865260116004528486fd5b60405162461bcd60e51b81526020600482015260128189015271105b1c9958591e481b5a5b9d19590811d51160721b6044820152606490fd5b60405162461bcd60e51b8152602060048201526019818601527f475444206d696e74207068617365206e6f7420616374697665000000000000006044820152606490fd5b5034610318578060031936011261031857611ec8612fbd565b478015611f2f5760035482918291829182916001600160a01b03165af1611eed612b93565b5015611ef65780f35b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b50346103185780600319360112610318576020610fcb612e51565b50346103185780600319360112610318576020610fcb612e39565b50346103185760403660031901126103185760043581527fdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b0160205260409020546001600160a01b03808216916024359160a09190911c908315612050575b506001600160601b03169081810291818304149015171561203a57604080516001600160a01b03939093168352612710909104602083015290f35b634e487b7160e01b600052601160045260246000fd5b7fdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b0054908116935060a01c90506001600160601b03611fff565b50346103185780600319360112610318576020600d54604051908152f35b5034610318576103156120b936612850565b91612bff565b506060366003190112610318576004356120d76126ef565b90604480356001600160401b038111610882576120f8903690600401612820565b90612101612f33565b612109612e51565b156122f55761211f6101a4610351868954612a08565b600484116122bb57675fc1b971363200009484860295860485036122a757906121b5611d1e612156899594611cb68a341015612a58565b9260018060a01b0394611d1986861695868952600f602052612181600461037b8d60408d2054612a08565b60405160208101916001600160601b03199060601b168252601481526121a681612734565b51902092600254923691612ade565b8252600f602052604082206121cb858254612a08565b9055815b84811061220c578286818134116121f557600160008051602061358b8339815191525580f35b8080806103f66122059534612b86565b81816103d1565b6122226122198454612b77565b80855533613121565b81600654168354813b1561088257849160648392604051948593849263445a477560e11b8452600484015233602484015260018b8401525af190811561229c578491612288575b5090600191543360008051602061350b8339815191528680a3016121cf565b61229190612721565b6104b5578238612269565b6040513d86823e3d90fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b8152602060048201526012602482015271115e18d959591cc81190d194c81b1a5b5a5d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f46434653206d696e74207068617365206e6f74206163746976650000000000006044820152606490fd5b50346103185780600319360112610318576008546040516001600160a01b039091168152602090f35b50346103185780612373366127dd565b9061237c612fbd565b6005546001600160a01b031691823b156118dc576118cb928492836040518096819582946303ed46b160e21b845260048401526040602484015260448301906126b4565b5034610318576040366003190112610318576123da6126d9565b6024356123e681612f63565b33151580612496575b80612476575b61245e576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a46000526000805160206135ab8339815191526020526040600020906001600160601b0360a01b82541617905580f35b60405163a9fbf51f60e01b8152336004820152602490fd5b50612480816128e1565b3360005260205260ff60406000205416156123f5565b506001600160a01b0381163314156123ef565b5034610318576020366003190112610318576020906004356124ca81612f63565b5081526000805160206135ab8339815191528252604060018060a01b0391205416604051908152f35b503461031857806003193601126103185760405160008051602061352b83398151915280548260006125248361291a565b9283835260209460019186600182169182600014610f8e575050600114612553575050610f309250038361276a565b85925060005260008051602061360b833981519152906000915b858310612585575050610f3093508201018580610f22565b8054838901850152879450869390920191810161256d565b50346103185780600319360112610318576125b6612f33565b60065481906001600160a01b0316803b156106d65781906004604051809481936234dbc160e51b83525af180156104aa576126015750600160008051602061358b8339815191525580f35b611df390612721565b9050346108025760203660031901126108025760043563ffffffff60e01b81168091036104b557602092506380ac58cd60e01b8114908115612680575b8115612655575b5015158152f35b63152a902d60e11b81149150811561266f575b503861264e565b6301ffc9a760e01b14905038612668565b635b5e139f60e01b81149150612647565b60005b8381106126a45750506000910152565b8181015183820152602001612694565b906020916126cd81518092818552858086019101612691565b601f01601f1916010190565b600435906001600160a01b038216820361065657565b602435906001600160a01b038216820361065657565b3461065657600036600319011261065657602060405160048152f35b6001600160401b03811161140957604052565b604081019081106001600160401b0382111761140957604052565b602081019081106001600160401b0382111761140957604052565b90601f801991011681019081106001600160401b0382111761140957604052565b6001600160401b03811161140957601f01601f191660200190565b9291926127b28261278b565b916127c0604051938461276a565b829481845281830111610656578281602093846000960137010152565b9060406003198301126106565760043591602435906001600160401b03821161065657806023830112156106565781602461281d936004013591016127a6565b90565b9181601f84011215610656578235916001600160401b038311610656576020808501948460051b01011161065657565b6060906003190112610656576001600160a01b0390600435828116810361065657916024359081168103610656579060443590565b34610656576000366003190112610656576020604051675fc1b971363200008152f35b6001600160a01b031660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793036020526040902090565b6001600160a01b031660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020526040902090565b90600182811c9216801561294a575b602083101461293457565b634e487b7160e01b600052602260045260246000fd5b91607f1691612929565b600754600092916129648261291a565b808252916020906001908181169081156129e35750600114612987575b50505050565b9293945060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688926000935b8585106129d0575050506020925001019038808080612981565b80548585018401529382019381016129b6565b92505050602093945060ff929192191683830152151560051b01019038808080612981565b9190820180921161203a57565b15612a1c57565b60405162461bcd60e51b81526020600482015260146024820152734578636565647320746f74616c20737570706c7960601b6044820152606490fd5b15612a5f57565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b15612aa257565b60405162461bcd60e51b8152602060048201526014602482015273115e18d959591cc81dd85b1b195d081b1a5b5a5d60621b6044820152606490fd5b9092916001600160401b038411611409578360051b6020926020604051612b078285018261276a565b809781520191810192831161065657905b828210612b255750505050565b81358152908301908301612b18565b15612b3b57565b60405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21026b2b935b63290383937b7b360611b6044820152606490fd5b600019811461203a5760010190565b9190820391821161203a57565b3d15612bbe573d90612ba48261278b565b91612bb2604051938461276a565b82523d6000602084013e565b606090565b15612bca57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b90916001600160a01b03808416928315612e20576000938385527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930294856020526040968488832054169633151580612d84575b50612c648815159283612d45576128a8565b8054600101905586835260205287822080546001600160a01b031916841790558751928690887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8580a480612d3d575b612ceb575b50501692838303612cca5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b8360065416803b156108025782602481848094631d46f2b960e11b83528a60048401525af1908115612d325750612d23575b80612cb9565b612d2c90612721565b38612d1d565b8751903d90823e3d90fd5b506001612cb4565b60008981526000805160206135ab8339815191526020526040902080546001600160a01b0319169055612d778a6128a8565b80546000190190556128a8565b80612dd1575b15612d955738612c52565b888789612db2576024915190637e27328960e01b82526004820152fd5b905163177e802f60e01b81523360048201526024810191909152604490fd5b503388148015612e04575b80612d8a57508683526000805160206135ab83398151915260205233868a8520541614612d8a565b50612e0e886128e1565b33845260205260ff8984205416612ddc565b604051633250574960e11b815260006004820152602490fd5b600c54151580612e465790565b506101a46000541090565b600b548015159081612e67575b5080612e465790565b9050610708810180911161203a57421038612e5e565b600a548015159081612e92575080612e465790565b9050610384810180911161203a57421038612e5e565b600954151580612eb55790565b506004600d541090565b6001600160a01b03908116908115612f1a5760008051602061356b83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b60008051602061358b8339815191526002815414612f515760029055565b604051633ee5aeb560e01b8152600490fd5b60008181527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b0316908115612fa5575090565b60249060405190637e27328960e01b82526004820152fd5b60008051602061356b833981519152546001600160a01b03163303612fde57565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b03818116908161300e575050503390565b6020906008541691604460405180948193634e1cade160e11b835233600484015260248301525afa9081156130c157600091613086575b501561304e5790565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69642064656c656761746560801b6044820152606490fd5b6020813d6020116130b9575b8161309f6020938361276a565b810103126108025751908115158203610318575038613045565b3d9150613092565b6040513d6000823e3d90fd5b9091906000915b815183101561311a576020808460051b8401015191600083821060001461310a575060005252600160406000205b9201916130d4565b9060409260019483525220613102565b9150501490565b604080519261312f8461274f565b60008085526001600160a01b03948486169485156133a6578383527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079302602097818952808786205416908115159283613367575b61318b856128a8565b600181540190558787528a52878620896001600160601b0360a01b82541617905586898951937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8980a4828061335f575b61330d575b50506132f5573b6131f5575b505050505050565b856132329185969798955180938192630a85bd0160e11b9788845233600485015287602485015260448401526080606484015260848301906126b4565b0381858a5af1908290826132b1575b505061327957505050613252612b93565b8051939084613273578251633250574960e11b815260048101859052602490fd5b84925001fd5b9194506001600160e01b03199091160361329a5750503880808080806131ed565b602492505190633250574960e11b82526004820152fd5b909192508781813d83116132ee575b6132ca818361276a565b810103126108025751906001600160e01b0319821682036103185750903880613241565b503d6132c0565b84516339e3563760e11b815260048101849052602490fd5b60065416803b1561335b5781602481888094631d46f2b960e11b83528b60048401525af1801561335157613342575b806131e1565b61334b90612721565b3861333c565b87513d87823e3d90fd5b8580fd5b5060016131dc565b60008881526000805160206135ab8339815191526020526040902080546001600160a01b0319169055613399836128a8565b8054600019019055613182565b8451633250574960e11b815260048101849052602490fd5b9293823b6133ce575b5050505050565b6134129060018060a01b038094169560405194859481630a85bd0160e11b9889885216600487015216602485015260448401526080606484015260848301906126b4565b03906020816000938185885af190829082613492575b50506134605782613437612b93565b805191908261345957604051633250574960e11b815260048101839052602490fd5b6020915001fd5b6001600160e01b0319160361347a575038808080806133c7565b60249060405190633250574960e11b82526004820152fd5b909192506020813d6020116134d3575b816134af6020938361276a565b810103126108025751906001600160e01b0319821682036103185750903880613428565b3d91506134a2565b60ff6000805160206135cb8339815191525460401c16156134f857565b604051631afcd79f60e31b8152600490fdfe30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300f4bad0a69248f59680a4f2b3000328cec71a413447c96781cfe5996daa8c456e9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079304f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930137c58c799b6609234b945e882912ee9ad34948a1dfaa20a97485e1a7752bbf81a26469706673582212200591bb335a061e208a8785a9e2abb13b01fb591a12492f59a82376c677dac61064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xBD JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND PUSH3 0xAE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 DUP3 AND ADD PUSH3 0x68 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3660 SWAP1 DUP2 PUSH3 0xC3 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP1 PUSH3 0x58 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x260A JUMPI POP DUP1 PUSH4 0x69B7820 EQ PUSH2 0x259D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24F3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x24A9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23C0 JUMPI DUP1 PUSH4 0xEA58915 EQ PUSH2 0xB4E JUMPI DUP1 PUSH4 0xFB51AC4 EQ PUSH2 0x2363 JUMPI DUP1 PUSH4 0x13BFFFAC EQ PUSH2 0x233A JUMPI DUP1 PUSH4 0x18919D62 EQ PUSH2 0x20BF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20A7 JUMPI DUP1 PUSH4 0x24659318 EQ PUSH2 0x2089 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x1FA1 JUMPI DUP1 PUSH4 0x2D632678 EQ PUSH2 0x1B1B JUMPI DUP1 PUSH4 0x2D6B6224 EQ PUSH2 0x1F86 JUMPI DUP1 PUSH4 0x34F8F268 EQ PUSH2 0x1F6B JUMPI DUP1 PUSH4 0x3C404A9C EQ PUSH2 0xFD5 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1EAF JUMPI DUP1 PUSH4 0x3F2C0D6A EQ PUSH2 0x1C36 JUMPI DUP1 PUSH4 0x40B55480 EQ PUSH2 0x1C13 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BE5 JUMPI DUP1 PUSH4 0x4A7887C4 EQ PUSH2 0x1BC8 JUMPI DUP1 PUSH4 0x4D853EE5 EQ PUSH2 0x1B9F JUMPI DUP1 PUSH4 0x4E8117A9 EQ PUSH2 0x1B76 JUMPI DUP1 PUSH4 0x5270C753 EQ PUSH2 0x1B59 JUMPI DUP1 PUSH4 0x5C121BC9 EQ PUSH2 0x1B20 JUMPI DUP1 PUSH4 0x611F3F10 EQ PUSH2 0x1B1B JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1AF2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1AC1 JUMPI DUP1 PUSH4 0x6AC6319C EQ PUSH2 0x1AA5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E4 JUMPI DUP1 PUSH4 0x74819EF7 EQ PUSH2 0x19C8 JUMPI DUP1 PUSH4 0x76C25E6F EQ PUSH2 0x199F JUMPI DUP1 PUSH4 0x76C64C62 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x7726C505 EQ PUSH2 0x18FF JUMPI DUP1 PUSH4 0x7BB23E3A EQ PUSH2 0x18E1 JUMPI DUP1 PUSH4 0x7D330CDD EQ PUSH2 0x186E JUMPI DUP1 PUSH4 0x7F0505F1 EQ PUSH2 0x1835 JUMPI DUP1 PUSH4 0x8539CB82 EQ PUSH2 0x1819 JUMPI DUP1 PUSH4 0x89D29C4C EQ PUSH2 0x1046 JUMPI DUP1 PUSH4 0x8CFEC4C0 EQ PUSH2 0x1028 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF2 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0xFD5 JUMPI DUP1 PUSH4 0x9134D9C2 EQ PUSH2 0xFB0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xECF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xE2D JUMPI DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0xE10 JUMPI DUP1 PUSH4 0xA3ECA3ED EQ PUSH2 0xD78 JUMPI DUP1 PUSH4 0xAA0F0D7F EQ PUSH2 0xB92 JUMPI DUP1 PUSH4 0xAB13C089 EQ PUSH2 0xB53 JUMPI DUP1 PUSH4 0xB0660C77 EQ PUSH2 0xB4E JUMPI DUP1 PUSH4 0xB32395CA EQ PUSH2 0xB15 JUMPI DUP1 PUSH4 0xB4BBB18F EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0xBFA41777 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xC2CA0AC5 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xD0E8F26E EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xD67F8D0B EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xE0A80853 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xEAFD4891 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xEF39154B EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xEFD0CBF9 EQ PUSH2 0x31B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x315 PUSH2 0x308 PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x310 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x2EBF JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x333 PUSH2 0x2F33 JUMP JUMPDEST PUSH2 0x33B PUSH2 0x2E39 JUMP JUMPDEST ISZERO PUSH2 0x509 JUMPI PUSH2 0x358 PUSH2 0x1A4 PUSH2 0x351 DUP4 DUP6 SLOAD PUSH2 0x2A08 JUMP JUMPDEST GT ISZERO PUSH2 0x2A15 JUMP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0x4CD JUMPI CALLER DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x382 PUSH1 0x5 PUSH2 0x37B DUP4 PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0x2A08 JUMP JUMPDEST GT ISZERO PUSH2 0x2A9B JUMP JUMPDEST PUSH8 0x5FC1B97136320000 SWAP1 DUP1 DUP3 MUL SWAP2 DUP3 DIV DUP2 SUB PUSH2 0x4B9 JUMPI PUSH2 0x3A4 DUP3 CALLVALUE LT ISZERO PUSH2 0x2A58 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x3BB DUP3 DUP3 SLOAD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SSTORE DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x40E JUMPI POP POP DUP2 DUP2 CALLVALUE GT PUSH2 0x3E6 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3F6 PUSH2 0x407 SWAP6 CALLVALUE PUSH2 0x2B86 JUMP JUMPDEST CALLER GAS CALL PUSH2 0x401 PUSH2 0x2B93 JUMP JUMPDEST POP PUSH2 0x2BC3 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x41B DUP6 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP7 SSTORE CALLER PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP5 SLOAD DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x4B5 JUMPI DUP3 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x492 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP2 SLOAD CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 DUP1 LOG3 ADD PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x49B SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4A6 JUMPI DUP4 CODESIZE PUSH2 0x473 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x115E18D959591CC81C1D589B1A58C81B1A5B5A5D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74207068617365206E6F742061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x5A4 PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x5B5 PUSH2 0x5AF PUSH2 0x26EF JUMP JUMPDEST SWAP2 PUSH2 0x28E1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x656 JUMPI DUP2 SWAP1 PUSH2 0x602 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x652 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xE0A80853 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x642 JUMPI POP RETURN JUMPDEST PUSH2 0x64B SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x318 JUMPI DUP1 RETURN JUMPDEST POP POP REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x674 PUSH2 0x2F33 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6D6 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xD67F8D0B PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x6C2 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH2 0x6CB SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x318 JUMPI DUP1 CODESIZE PUSH2 0x6AC JUMP JUMPDEST POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x802 JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x727 DUP5 PUSH2 0x2F63 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x9AAFB61 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH2 0x753 PUSH1 0x64 DUP5 ADD PUSH2 0x2954 JUMP JUMPDEST SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x806 JUMPI DUP1 SWAP4 PUSH2 0x786 JUMPI JUMPDEST POP POP PUSH2 0x782 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x799 DUP2 DUP5 PUSH2 0x276A JUMP JUMPDEST DUP3 ADD SWAP2 DUP4 DUP2 DUP5 SUB SLT PUSH2 0x802 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4B5 JUMPI ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x802 JUMPI DUP1 MLOAD SWAP2 PUSH2 0x7CE DUP4 PUSH2 0x278B JUMP JUMPDEST SWAP4 PUSH2 0x7DC PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x276A JUMP JUMPDEST DUP4 DUP6 MSTORE DUP6 DUP5 DUP5 ADD ADD GT PUSH2 0x318 JUMPI POP SWAP1 PUSH2 0x7FA SWAP2 DUP5 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2691 JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x76C JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI DUP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x830 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND PUSH2 0x848 DUP3 PUSH2 0x2F63 JUMP JUMPDEST SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x882 JUMPI DUP5 SWAP3 DUP4 PUSH1 0x44 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x2FEDC381 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE AND PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x642 JUMPI POP RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x8BE PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x8C6 PUSH2 0x26EF JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x882 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x882 JUMPI PUSH2 0x8FE PUSH2 0x315 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x27A6 JUMP JUMPDEST SWAP3 PUSH2 0x90A DUP4 DUP4 DUP4 PUSH2 0x2BFF JUMP JUMPDEST CALLER PUSH2 0x33BE JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x92D PUSH2 0x2F33 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0xAD8 JUMPI PUSH2 0x949 PUSH2 0x2EA8 JUMP JUMPDEST ISZERO PUSH2 0xA93 JUMPI PUSH1 0xD SLOAD PUSH1 0x4 PUSH2 0x95D DUP5 DUP4 PUSH2 0x2A08 JUMP JUMPDEST GT PUSH2 0xA4E JUMPI DUP3 PUSH2 0x97D SWAP2 PUSH2 0x978 PUSH2 0x1A4 PUSH2 0x351 DUP5 DUP10 SLOAD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0xD SSTORE DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x9B2 JUMPI DUP4 PUSH1 0x4 PUSH1 0xD SLOAD EQ PUSH2 0x9A9 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST TIMESTAMP PUSH1 0xA SSTORE PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x9CC PUSH2 0x9BF DUP6 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP7 SSTORE DUP4 PUSH1 0x4 SLOAD AND PUSH2 0x3121 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x6 SLOAD AND DUP2 SLOAD DUP5 PUSH1 0x4 SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x64 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0xA3A JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP1 DUP3 PUSH1 0x4 SLOAD AND DUP6 SLOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 DUP1 LOG3 ADD PUSH2 0x982 JUMP JUMPDEST PUSH2 0xA43 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4A6 JUMPI DUP4 CODESIZE PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320666F756E646572206D696E74206C696D6974000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E646572206D696E74207068617365206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E48199BDD5B99195C8818D85B881B5A5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB3D PUSH2 0x26D9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x2705 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x782 PUSH1 0x40 MLOAD PUSH2 0xB7E DUP2 PUSH2 0xB77 DUP2 PUSH2 0x2954 JUMP JUMPDEST SUB DUP3 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x4B5 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x4B5 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x4B5 JUMPI PUSH1 0x24 CALLDATASIZE PUSH1 0x24 DUP5 DUP5 ADD ADD GT PUSH2 0x4A6 JUMPI PUSH2 0xBE6 PUSH2 0x2FBD JUMP JUMPDEST DUP3 ISZERO PUSH2 0xD33 JUMPI PUSH2 0xBF7 PUSH1 0x7 SLOAD PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCCE JUMPI JUMPDEST POP DUP4 SWAP5 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xC47 JUMPI POP POP DUP3 SWAP4 DUP3 SWAP2 PUSH2 0xC33 SWAP5 SWAP3 PUSH2 0xC39 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP ADD ADD CALLDATALOAD CODESIZE DUP1 PUSH2 0xC1E JUMP JUMPDEST PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP3 SWAP2 PUSH1 0x1F NOT DUP6 AND SWAP2 DUP7 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xCB2 JUMPI POP POP POP SWAP5 DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0xC95 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST ADD PUSH1 0x24 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xC89 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP11 SWAP8 DUP5 DUP4 SWAP7 SWAP13 DUP10 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP7 ADD SWAP9 ADD SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xD29 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xD1D JUMPI POP PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD10 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726572657665616C205552492063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0xD91 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0xA SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xDE5 JUMPI JUMPDEST POP ISZERO PUSH2 0xDAB JUMPI TIMESTAMP PUSH1 0xB SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11D511081B5A5B9D081B9BDD08195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x384 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xDFC JUMPI TIMESTAMP LT ISZERO CODESIZE PUSH2 0xD9E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0xE47 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x656 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xE6E CALLER PUSH2 0x28E1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0xF00 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xF8E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xF44 JUMPI JUMPDEST POP POP PUSH2 0xF30 SWAP3 POP SUB DUP4 PUSH2 0x276A JUMP JUMPDEST PUSH2 0x782 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0xF76 JUMPI POP POP PUSH2 0xF30 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0xF22 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0xF5E JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0xF30 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0xF22 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x1A4 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x4A6 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1809 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x17FF JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x17F6 JUMPI JUMPDEST POP PUSH2 0x17E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP6 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO PUSH2 0x17B7 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1118 DUP2 PUSH2 0x2734 JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH15 0x417065426561747347656E65736973 PUSH1 0x88 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1141 DUP3 PUSH2 0x2734 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x414247 PUSH1 0xE8 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1159 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1161 PUSH2 0x34DB JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17A3 JUMPI PUSH2 0x118A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x172D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x169E JUMPI PUSH2 0x11C3 SWAP3 SWAP2 DUP11 SWAP2 DUP4 PUSH2 0x157A JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x168A JUMPI PUSH2 0x11FD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1614 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1585 JUMPI PUSH2 0x1236 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x157A JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0x124F PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1257 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1260 CALLER PUSH2 0x2EBF JUMP JUMPDEST PUSH2 0x1268 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1270 PUSH2 0x34DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x128A PUSH2 0x34DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1535 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x148E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1438 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE DUP2 SLOAD DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 DUP6 AND DUP8 DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE SWAP1 DUP5 AND SWAP1 DUP2 OR SWAP3 DUP4 ISZERO PUSH2 0x141F JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x40 DUP6 ADD DUP6 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE SWAP1 DUP6 MSTORE PUSH2 0x1A4 PUSH1 0x20 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND OR PUSH1 0x69 PUSH1 0xA2 SHL OR PUSH32 0xDAEDC9AB023613A7CAF35E703657E986CCFAD7E3EB0AF93A2853F8D65DD86B00 SSTORE TIMESTAMP PUSH1 0x9 SSTORE SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0x13AF JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C65676174652072656769737472792063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C7469657320636F6E74726163742063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D657461646174614C69622063616E6E6F74206265207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792063616E6E6F74206265207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 MSTORE DUP9 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x15F9 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x15E0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1247 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15C5 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0x1675 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x1669 JUMPI POP PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1646 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1646 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 MSTORE DUP10 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1712 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x16F9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x11D4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x16DE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0x178E JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x1782 JUMPI POP PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x175F JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x175F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP5 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x10DC JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 DUP7 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x10CA JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x185D PUSH2 0x26D9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH2 0x187E CALLDATASIZE PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x1887 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18CB SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x7D330CDD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x642 JUMPI POP RETURN JUMPDEST POP POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2E7D JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1933 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0xB SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1988 JUMPI JUMPDEST POP ISZERO PUSH2 0x194D JUMPI TIMESTAMP PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1190D194C81B5A5B9D081B9BDD08195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x708 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xDFC JUMPI TIMESTAMP LT ISZERO CODESIZE PUSH2 0x1940 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x19FD PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1A69 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1A8D JUMPI PUSH1 0x20 PUSH2 0x1A84 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0x1AE0 PUSH1 0x4 CALLDATALOAD PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x2885 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B48 PUSH2 0x26D9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x384 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x708 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH2 0x315 PUSH2 0x1BF7 CALLDATASIZE PUSH2 0x2850 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1C05 DUP5 PUSH2 0x274F JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x90A DUP4 DUP4 DUP4 PUSH2 0x2BFF JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x3A4965BF58A40000 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1C4B PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4A6 JUMPI PUSH2 0x1C6C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2820 JUMP JUMPDEST SWAP1 PUSH2 0x1C75 PUSH2 0x2F33 JUMP JUMPDEST PUSH2 0x1C7D PUSH2 0x2E7D JUMP JUMPDEST ISZERO PUSH2 0x1E6B JUMPI DUP5 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1E1F JUMPI PUSH2 0x1A4 PUSH2 0x1C9D SWAP2 GT ISZERO PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0x1CBB PUSH8 0x3A4965BF58A40000 SWAP4 PUSH2 0x1CB6 DUP6 CALLVALUE LT ISZERO PUSH2 0x2A58 JUMP JUMPDEST PUSH2 0x2FF6 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP4 AND SWAP3 DUP4 DUP9 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH2 0x1E32 JUMPI SWAP2 PUSH2 0x1D1E SWAP2 PUSH2 0x1D19 PUSH2 0x1D23 SWAP5 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x1D0A DUP2 PUSH2 0x2734 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x1 SLOAD SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x30CD JUMP JUMPDEST PUSH2 0x2B34 JUMP JUMPDEST DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1E1F JUMPI SWAP1 DUP6 SWAP3 SWAP2 SSTORE PUSH2 0x1D57 PUSH2 0x1D4E DUP4 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP5 SSTORE CALLER PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x6 SLOAD AND DUP2 SLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0x4B5 JUMPI DUP3 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE CALLER DUP11 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x1E0B JUMPI JUMPDEST POP SLOAD CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP1 LOG3 CALLVALUE GT PUSH2 0x1DCB JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH8 0x3A4965BF58A3FFFF NOT CALLVALUE ADD SWAP1 CALLVALUE DUP3 GT PUSH2 0x1DF9 JUMPI POP DUP2 DUP1 DUP1 DUP1 PUSH2 0x1DF3 SWAP5 CALLER GAS CALL PUSH2 0x401 PUSH2 0x2B93 JUMP JUMPDEST CODESIZE PUSH2 0x6AC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP3 REVERT JUMPDEST PUSH2 0x1E14 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4B5 JUMPI DUP3 CODESIZE PUSH2 0x1D9A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP5 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 DUP2 DUP10 ADD MSTORE PUSH18 0x105B1C9958591E481B5A5B9D19590811D511 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 DUP2 DUP7 ADD MSTORE PUSH32 0x475444206D696E74207068617365206E6F742061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1EC8 PUSH2 0x2FBD JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x1F2F JUMPI PUSH1 0x3 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x1EED PUSH2 0x2B93 JUMP JUMPDEST POP ISZERO PUSH2 0x1EF6 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2E51 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2E39 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH32 0xDAEDC9AB023613A7CAF35E703657E986CCFAD7E3EB0AF93A2853F8D65DD86B01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHR SWAP1 DUP4 ISZERO PUSH2 0x2050 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x203A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH2 0x2710 SWAP1 SWAP2 DIV PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xDAEDC9AB023613A7CAF35E703657E986CCFAD7E3EB0AF93A2853F8D65DD86B00 SLOAD SWAP1 DUP2 AND SWAP4 POP PUSH1 0xA0 SHR SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x1FFF JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH2 0x315 PUSH2 0x20B9 CALLDATASIZE PUSH2 0x2850 JUMP JUMPDEST SWAP2 PUSH2 0x2BFF JUMP JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x20D7 PUSH2 0x26EF JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x882 JUMPI PUSH2 0x20F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2820 JUMP JUMPDEST SWAP1 PUSH2 0x2101 PUSH2 0x2F33 JUMP JUMPDEST PUSH2 0x2109 PUSH2 0x2E51 JUMP JUMPDEST ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x211F PUSH2 0x1A4 PUSH2 0x351 DUP7 DUP10 SLOAD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x4 DUP5 GT PUSH2 0x22BB JUMPI PUSH8 0x5FC1B97136320000 SWAP5 DUP5 DUP7 MUL SWAP6 DUP7 DIV DUP6 SUB PUSH2 0x22A7 JUMPI SWAP1 PUSH2 0x21B5 PUSH2 0x1D1E PUSH2 0x2156 DUP10 SWAP6 SWAP5 PUSH2 0x1CB6 DUP11 CALLVALUE LT ISZERO PUSH2 0x2A58 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x1D19 DUP7 DUP7 AND SWAP6 DUP7 DUP10 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x2181 PUSH1 0x4 PUSH2 0x37B DUP14 PUSH1 0x40 DUP14 KECCAK256 SLOAD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x21A6 DUP2 PUSH2 0x2734 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x2 SLOAD SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2ADE JUMP JUMPDEST DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x21CB DUP6 DUP3 SLOAD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SSTORE DUP2 JUMPDEST DUP5 DUP2 LT PUSH2 0x220C JUMPI DUP3 DUP7 DUP2 DUP2 CALLVALUE GT PUSH2 0x21F5 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3F6 PUSH2 0x2205 SWAP6 CALLVALUE PUSH2 0x2B86 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x2222 PUSH2 0x2219 DUP5 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP6 SSTORE CALLER PUSH2 0x3121 JUMP JUMPDEST DUP2 PUSH1 0x6 SLOAD AND DUP4 SLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0x882 JUMPI DUP5 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 DUP12 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x229C JUMPI DUP5 SWAP2 PUSH2 0x2288 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP2 SLOAD CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 DUP1 LOG3 ADD PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x2291 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4B5 JUMPI DUP3 CODESIZE PUSH2 0x2269 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115E18D959591CC81190D194C81B1A5B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46434653206D696E74207068617365206E6F7420616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH2 0x2373 CALLDATASIZE PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x237C PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18CB SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x3ED46B1 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x23DA PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x23E6 DUP2 PUSH2 0x2F63 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x2496 JUMPI JUMPDEST DUP1 PUSH2 0x2476 JUMPI JUMPDEST PUSH2 0x245E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH2 0x2480 DUP2 PUSH2 0x28E1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x23F5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x23EF JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x24CA DUP2 PUSH2 0x2F63 JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x2524 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xF8E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2553 JUMPI POP POP PUSH2 0xF30 SWAP3 POP SUB DUP4 PUSH2 0x276A JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2585 JUMPI POP POP PUSH2 0xF30 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0xF22 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x256D JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x25B6 PUSH2 0x2F33 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6D6 JUMPI DUP2 SWAP1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH3 0x34DBC1 PUSH1 0xE5 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x2601 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH2 0x1DF3 SWAP1 PUSH2 0x2721 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x802 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x802 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x4B5 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2680 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2655 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x266F JUMPI JUMPDEST POP CODESIZE PUSH2 0x264E JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x2668 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x26A4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2694 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x26CD DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x656 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x656 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1409 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x27B2 DUP3 PUSH2 0x278B JUMP JUMPDEST SWAP2 PUSH2 0x27C0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x276A JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x656 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x656 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x656 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x656 JUMPI DUP2 PUSH1 0x24 PUSH2 0x281D SWAP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x27A6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x656 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x656 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x656 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x656 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x656 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x656 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x5FC1B97136320000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079303 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079305 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x294A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2934 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x2964 DUP3 PUSH2 0x291A JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x29E3 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2987 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x29D0 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2981 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2981 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x203A JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2A1C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4578636565647320746F74616C20737570706C79 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A5F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AA2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x115E18D959591CC81DD85B1B195D081B1A5B5A5D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x1409 JUMPI DUP4 PUSH1 0x5 SHL PUSH1 0x20 SWAP3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2B07 DUP3 DUP6 ADD DUP3 PUSH2 0x276A JUMP JUMPDEST DUP1 SWAP8 DUP2 MSTORE ADD SWAP2 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x656 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2B25 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2B18 JUMP JUMPDEST ISZERO PUSH2 0x2B3B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B21026B2B935B63290383937B7B3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x203A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x203A JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2BBE JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2BA4 DUP3 PUSH2 0x278B JUMP JUMPDEST SWAP2 PUSH2 0x2BB2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x276A JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2BCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2E20 JUMPI PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 SWAP5 DUP6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP4 KECCAK256 SLOAD AND SWAP7 CALLER ISZERO ISZERO DUP1 PUSH2 0x2D84 JUMPI JUMPDEST POP PUSH2 0x2C64 DUP9 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x2D45 JUMPI PUSH2 0x28A8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE PUSH1 0x20 MSTORE DUP8 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE DUP8 MLOAD SWAP3 DUP7 SWAP1 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP1 LOG4 DUP1 PUSH2 0x2D3D JUMPI JUMPDEST PUSH2 0x2CEB JUMPI JUMPDEST POP POP AND SWAP3 DUP4 DUP4 SUB PUSH2 0x2CCA JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 PUSH1 0x6 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x802 JUMPI DUP3 PUSH1 0x24 DUP2 DUP5 DUP1 SWAP5 PUSH4 0x1D46F2B9 PUSH1 0xE1 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2D32 JUMPI POP PUSH2 0x2D23 JUMPI JUMPDEST DUP1 PUSH2 0x2CB9 JUMP JUMPDEST PUSH2 0x2D2C SWAP1 PUSH2 0x2721 JUMP JUMPDEST CODESIZE PUSH2 0x2D1D JUMP JUMPDEST DUP8 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x2CB4 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x2D77 DUP11 PUSH2 0x28A8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x28A8 JUMP JUMPDEST DUP1 PUSH2 0x2DD1 JUMPI JUMPDEST ISZERO PUSH2 0x2D95 JUMPI CODESIZE PUSH2 0x2C52 JUMP JUMPDEST DUP9 DUP8 DUP10 PUSH2 0x2DB2 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP CALLER DUP9 EQ DUP1 ISZERO PUSH2 0x2E04 JUMPI JUMPDEST DUP1 PUSH2 0x2D8A JUMPI POP DUP7 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE CALLER DUP7 DUP11 DUP6 KECCAK256 SLOAD AND EQ PUSH2 0x2D8A JUMP JUMPDEST POP PUSH2 0x2E0E DUP9 PUSH2 0x28E1 JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP10 DUP5 KECCAK256 SLOAD AND PUSH2 0x2DDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD ISZERO ISZERO DUP1 PUSH2 0x2E46 JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x1A4 PUSH1 0x0 SLOAD LT SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x2E67 JUMPI JUMPDEST POP DUP1 PUSH2 0x2E46 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x708 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x203A JUMPI TIMESTAMP LT CODESIZE PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0xA SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x2E92 JUMPI POP DUP1 PUSH2 0x2E46 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x384 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x203A JUMPI TIMESTAMP LT CODESIZE PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x9 SLOAD ISZERO ISZERO DUP1 PUSH2 0x2EB5 JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0xD SLOAD LT SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2F1A JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x2F51 JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2FA5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2FDE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP1 DUP2 PUSH2 0x300E JUMPI POP POP POP CALLER SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD AND SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4E1CADE1 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x30C1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3086 JUMPI JUMPDEST POP ISZERO PUSH2 0x304E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C69642064656C6567617465 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x30B9 JUMPI JUMPDEST DUP2 PUSH2 0x309F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x276A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x802 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x318 JUMPI POP CODESIZE PUSH2 0x3045 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3092 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x311A JUMPI PUSH1 0x20 DUP1 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD SWAP2 PUSH1 0x0 DUP4 DUP3 LT PUSH1 0x0 EQ PUSH2 0x310A JUMPI POP PUSH1 0x0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x30D4 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP3 PUSH1 0x1 SWAP5 DUP4 MSTORE MSTORE KECCAK256 PUSH2 0x3102 JUMP JUMPDEST SWAP2 POP POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH2 0x312F DUP5 PUSH2 0x274F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP5 DUP7 AND SWAP5 DUP6 ISZERO PUSH2 0x33A6 JUMPI DUP4 DUP4 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 SWAP8 DUP2 DUP10 MSTORE DUP1 DUP8 DUP7 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x3367 JUMPI JUMPDEST PUSH2 0x318B DUP6 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP8 DUP8 MSTORE DUP11 MSTORE DUP8 DUP7 KECCAK256 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 DUP10 DUP10 MLOAD SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 DUP1 LOG4 DUP3 DUP1 PUSH2 0x335F JUMPI JUMPDEST PUSH2 0x330D JUMPI JUMPDEST POP POP PUSH2 0x32F5 JUMPI EXTCODESIZE PUSH2 0x31F5 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x3232 SWAP2 DUP6 SWAP7 SWAP8 SWAP9 SWAP6 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP8 DUP9 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE DUP8 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB DUP2 DUP6 DUP11 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x32B1 JUMPI JUMPDEST POP POP PUSH2 0x3279 JUMPI POP POP POP PUSH2 0x3252 PUSH2 0x2B93 JUMP JUMPDEST DUP1 MLOAD SWAP4 SWAP1 DUP5 PUSH2 0x3273 JUMPI DUP3 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP3 POP ADD REVERT JUMPDEST SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x329A JUMPI POP POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x32EE JUMPI JUMPDEST PUSH2 0x32CA DUP2 DUP4 PUSH2 0x276A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x802 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x318 JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x3241 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x32C0 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x335B JUMPI DUP2 PUSH1 0x24 DUP2 DUP9 DUP1 SWAP5 PUSH4 0x1D46F2B9 PUSH1 0xE1 SHL DUP4 MSTORE DUP12 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x3351 JUMPI PUSH2 0x3342 JUMPI JUMPDEST DUP1 PUSH2 0x31E1 JUMP JUMPDEST PUSH2 0x334B SWAP1 PUSH2 0x2721 JUMP JUMPDEST CODESIZE PUSH2 0x333C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x3399 DUP4 PUSH2 0x28A8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x3182 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 DUP3 EXTCODESIZE PUSH2 0x33CE JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3412 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 DUP10 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB SWAP1 PUSH1 0x20 DUP2 PUSH1 0x0 SWAP4 DUP2 DUP6 DUP9 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x3492 JUMPI JUMPDEST POP POP PUSH2 0x3460 JUMPI DUP3 PUSH2 0x3437 PUSH2 0x2B93 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x3459 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x347A JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x33C7 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x34D3 JUMPI JUMPDEST DUP2 PUSH2 0x34AF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x276A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x802 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x318 JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x3428 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x34F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID ADDRESS CODESIZE TLOAD DUP5 JUMPDEST PREVRANDAO DUP11 CALLDATASIZE 0x25 PUSH27 0x6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE80BB2B638C 0xC2 SIGNEXTEND 0xC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079300F4BAD0A69248F59680A4F2B3000328CE 0xC7 BYTE COINBASE CALLVALUE SELFBALANCE 0xC9 PUSH8 0x81CFE5996DAA8C45 PUSH15 0x9016D09D72D40FDAE2FD8CEAC6B623 0x4C PUSH24 0x6214FD39C1CD1E609A0528C1993009B779B17422D0DF922 0x23 ADD DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F0080BB2B638C 0xC2 SIGNEXTEND 0xC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079304F0C57E16840DF040F15088DC2F81FE39 SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 DUP1 0xBB 0x2B PUSH4 0x8CC20BC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB007930137C58C799B6609234B945E882912EE9A 0xD3 BLOBHASH BASEFEE LOG1 0xDF 0xAA KECCAK256 0xA9 PUSH21 0x85E1A7752BBF81A26469706673582212200591BB33 GAS MOD 0x1E KECCAK256 DUP11 DUP8 DUP6 0xA9 0xE2 0xAB 0xB1 EXTCODESIZE ADD 0xFB MSIZE BYTE SLT BLOBHASH 0x2F MSIZE 0xA8 0x23 PUSH23 0xC677DAC61064736F6C6343000818003300000000000000 ","sourceMap":"829:11253:34:-:0;;;;;;;3147:66:1;829:11253:34;;;;;;;;;7894:76:1;;-1:-1:-1;;;;;;;;;;;;829:11253:34;;;7983:34:1;7979:146;;-1:-1:-1;829:11253:34;;;;;;;;;7979:146:1;-1:-1:-1;;;;;;829:11253:34;;;;;;;;;;;;;8085:29:1;;829:11253:34;;8085:29:1;7979:146;;;;;7894:76;-1:-1:-1;;;7936:23:1;;;;;829:11253:34;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":9945,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_36392":{"entryPoint":9967,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":10320,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":10272,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":10974,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":10150,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_uint256t_string":{"entryPoint":10205,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":9908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":10580,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":10123,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":10760,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":11142,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":9873,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_FCFS_PRICE":{"entryPoint":10373,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_FOUNDER_MINT_AMOUNT":{"entryPoint":9989,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10522,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":11155,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10090,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_36386":{"entryPoint":10017,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_51595":{"entryPoint":10036,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_51597":{"entryPoint":10063,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":1467,"parameterSlots":1,"returnSlots":0},"fun_checkInitializing":{"entryPoint":13531,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":13246,"id":3083,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":12221,"id":122,"parameterSlots":0,"returnSlots":0},"fun_getAccount":{"entryPoint":12278,"id":10599,"parameterSlots":1,"returnSlots":1},"fun_isFCFSMintActive":{"entryPoint":11857,"id":10655,"parameterSlots":0,"returnSlots":1},"fun_isFounderMintActive":{"entryPoint":11944,"id":10613,"parameterSlots":0,"returnSlots":1},"fun_isGTDMintActive":{"entryPoint":11901,"id":10634,"parameterSlots":0,"returnSlots":1},"fun_isPublicMintActive":{"entryPoint":11833,"id":10669,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":12083,"id":2065,"parameterSlots":0,"returnSlots":0},"fun_requireOwned":{"entryPoint":12131,"id":1541,"parameterSlots":1,"returnSlots":1},"fun_safeMint":{"entryPoint":12577,"id":1204,"parameterSlots":2,"returnSlots":0},"fun_transferFrom":{"entryPoint":11263,"id":852,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":11967,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verify":{"entryPoint":12493,"id":5207,"parameterSlots":3,"returnSlots":1},"increment_uint256":{"entryPoint":11127,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":10408,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_36418":{"entryPoint":10465,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":10907,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_565e":{"entryPoint":10773,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8d1b":{"entryPoint":10840,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_940e":{"entryPoint":11203,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cfff":{"entryPoint":11060,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a71461260a57508063069b78201461259d57806306fdde03146124f3578063081812fc146124a9578063095ea7b3146123c05780630ea5891514610b4e5780630fb51ac41461236357806313bfffac1461233a57806318919d62146120bf57806323b872dd146120a757806324659318146120895780632a55205a14611fa15780632d63267814611b1b5780632d6b622414611f8657806334f8f26814611f6b5780633c404a9c14610fd55780633ccfd60b14611eaf5780633f2c0d6a14611c3657806340b5548014611c1357806342842e0e14611be55780634a7887c414611bc85780634d853ee514611b9f5780634e8117a914611b765780635270c75314611b595780635c121bc914611b20578063611f3f1014611b1b57806361d027b314611af25780636352211e14611ac15780636ac6319c14611aa557806370a0823114611a4f578063715018a6146119e457806374819ef7146119c857806376c25e6f1461199f57806376c64c621461191a5780637726c505146118ff5780637bb23e3a146118e15780637d330cdd1461186e5780637f0505f1146118355780638539cb821461181957806389d29c4c146110465780638cfec4c0146110285780638da5cb5b14610ff2578063902d55a514610fd55780639134d9c214610fb057806395d89b4114610ecf578063a22cb46514610e2d578063a2309ff814610e10578063a3eca3ed14610d78578063aa0f0d7f14610b92578063ab13c08914610b53578063b0660c7714610b4e578063b32395ca14610b15578063b4bbb18f14610910578063b88d4fde146108a4578063bfa4177714610886578063c2ca0ac514610812578063c87b56dd146106f7578063d0e8f26e146106d9578063d67f8d0b1461065b578063e0a80853146105d9578063e985e9c51461058a578063eafd48911461056c578063ef39154b1461054e578063efd0cbf91461031b5763f2fde38b146102ec57600080fd5b34610318576020366003190112610318576103156103086126d9565b610310612fbd565b612ebf565b80f35b80fd5b50602036600319011261031857600435610333612f33565b61033b612e39565b15610509576103586101a4610351838554612a08565b1115612a15565b600581116104cd573382526010602052610382600561037b836040862054612a08565b1115612a9b565b675fc1b971363200009080820291820481036104b9576103a482341015612a58565b3383526010602052604083206103bb828254612a08565b9055825b81811061040e575050818134116103e6575b600160008051602061358b8339815191525580f35b8080806103f66104079534612b86565b335af1610401612b93565b50612bc3565b38816103d1565b61042461041b8554612b77565b80865533613121565b600654845485916001600160a01b031690813b156104b557829160648392604051948593849263445a477560e11b84526004840152336024840152600160448401525af180156104aa57610492575b5090600191543360008051602061350b8339815191528780a3016103bf565b61049b90612721565b6104a6578338610473565b8380fd5b6040513d84823e3d90fd5b8280fd5b634e487b7160e01b83526011600452602483fd5b60405162461bcd60e51b8152602060048201526014602482015273115e18d959591cc81c1d589b1a58c81b1a5b5a5d60621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f5075626c6963206d696e74207068617365206e6f7420616374697665000000006044820152606490fd5b50346103185780600319360112610318576020600154604051908152f35b50346103185780600319360112610318576020600b54604051908152f35b5034610318576040366003190112610318576105a46126d9565b6105b56105af6126ef565b916128e1565b9060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461031857602036600319011261031857600435801515809103610656578190610602612fbd565b6005546001600160a01b031690813b1561065257829160248392604051948593849263e0a8085360e01b845260048401525af180156104aa576106425750f35b61064b90612721565b6103185780f35b5050fd5b600080fd5b5034610318578060031936011261031857610674612f33565b60065481906001600160a01b0316803b156106d65781809160046040518094819363d67f8d0b60e01b83525af180156104aa576106c2575b50600160008051602061358b8339815191525580f35b6106cb90612721565b6103185780386106ac565b50fd5b50346103185780600319360112610318576020600a54604051908152f35b503461031857602080600319360112610802576005546004359083906001600160a01b0390811661072784612f63565b936040518095819482936309aafb6160e01b845260048401526060602484015261075360648401612954565b9116604483015203915afa928315610806578093610786575b50506107826040519282849384528301906126b4565b0390f35b909192503d8082843e610799818461276a565b8201918381840312610802578051906001600160401b0382116104b5570182601f82011215610802578051916107ce8361278b565b936107dc604051958661276a565b8385528584840101116103185750906107fa91848085019101612691565b90388061076c565b5080fd5b604051903d90823e3d90fd5b50346103185760203660031901126103185780600435610830612fbd565b6005546001600160a01b039190821661084882612f63565b90803b15610882578492836044926040519687958694632fedc38160e21b865260048601521660248401525af180156104aa576106425750f35b8480fd5b50346103185780600319360112610318576020600954604051908152f35b5034610318576080366003190112610318576108be6126d9565b6108c66126ef565b90604435606435926001600160401b0384116108825736602385011215610882576108fe6103159436906024816004013591016127a6565b9261090a838383612bff565b336133be565b50346103185760203660031901126103185760043561092d612f33565b6004546001600160a01b039081163303610ad857610949612ea8565b15610a9357600d54600461095d8483612a08565b11610a4e578261097d916109786101a4610351848954612a08565b612a08565b600d55825b8281106109b257836004600d54146109a957600160008051602061358b8339815191525580f35b42600a556103d1565b6109cc6109bf8554612b77565b8086558360045416613121565b83826006541681548460045416823b156104a6576064849283604051958694859363445a477560e11b855260048501526024840152600160448401525af180156104aa57610a3a575b5050600190826004541685549060008051602061350b8339815191528780a301610982565b610a4390612721565b6104a6578338610a15565b60405162461bcd60e51b815260206004820152601a60248201527f4578636565647320666f756e646572206d696e74206c696d69740000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f466f756e646572206d696e74207068617365206e6f74206163746976650000006044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527413db9b1e48199bdd5b99195c8818d85b881b5a5b9d605a1b6044820152606490fd5b5034610318576020366003190112610318576020906040906001600160a01b03610b3d6126d9565b168152600e83522054604051908152f35b612705565b5034610318578060031936011261031857610782604051610b7e81610b7781612954565b038261276a565b6040519182916020835260208301906126b4565b5034610318576020906020600319360112610318576001600160401b036004358181116104b557366023820112156104b55780600401359182116104b557602436602484840101116104a657610be6612fbd565b8215610d3357610bf760075461291a565b601f8111610cce575b508394601f8411600114610c4757505082938291610c339492610c39575b50508160011b916000199060031b1c19161790565b60075580f35b602492500101353880610c1e565b7fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889291601f1985169186915b838310610cb25750505094836001959610610c95575b505050811b0160075580f35b0160240135600019600384901b60f8161c19169055388080610c89565b908060018a978483969c89010135815501960198019190610c73565b60076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688601f850160051c81019160208610610d29575b601f0160051c01905b818110610d1d5750610c00565b60008155600101610d10565b9091508190610d07565b60405162461bcd60e51b815260206004820152601d60248201527f50726572657665616c205552492063616e6e6f7420626520656d7074790000006044820152606490fd5b5034610318578060031936011261031857610d91612fbd565b600a548015159081610de5575b5015610dab5742600b5580f35b60405162461bcd60e51b815260206004820152601260248201527111d511081b5a5b9d081b9bdd08195b99195960721b6044820152606490fd5b90506103848101809111610dfc5742101538610d9e565b634e487b7160e01b82526011600452602482fd5b503461031857806003193601126103185760209054604051908152f35b503461031857604036600319011261031857610e476126d9565b60243590811515809203610656576001600160a01b0316908115610eb657610e6e336128e1565b82600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b604051630b61174360e31b815260048101839052602490fd5b50346103185780600319360112610318576040516000805160206135eb8339815191528054826000610f008361291a565b9283835260209460019186600182169182600014610f8e575050600114610f44575b5050610f309250038361276a565b6107826040519282849384528301906126b4565b85925060005260008051602061354b833981519152906000915b858310610f76575050610f3093508201018580610f22565b80548389018501528794508693909201918101610f5e565b9250935050610f3094915060ff191682840152151560051b8201018580610f22565b50346103185780600319360112610318576020610fcb612ea8565b6040519015158152f35b503461031857806003193601126103185760206040516101a48152f35b503461031857806003193601126103185760008051602061356b833981519152546040516001600160a01b039091168152602090f35b50346103185780600319360112610318576020600c54604051908152f35b50346103185760c0366003190112610318576044356001600160a01b038116810361065657606435906001600160a01b038216820361065657608435916001600160a01b03831683036104a65760a4356001600160a01b0381168103610656576000805160206135cb83398151915254926001600160401b03841680159081611809575b60011490816117ff575b1590816117f6575b506117e45760016001600160401b03198516176000805160206135cb8339815191525560ff8460401c16156117b7575b60405161111881612734565b600f81526e417065426561747347656e6573697360881b60208201526040519061114182612734565b600382526241424760e81b60208301526111596134db565b6111616134db565b8051906001600160401b0382116117a35761118a60008051602061352b8339815191525461291a565b601f811161172d575b50602090601f831160011461169e576111c392918a918361157a5750508160011b916000199060031b1c19161790565b60008051602061352b833981519152555b8051906001600160401b03821161168a576111fd6000805160206135eb8339815191525461291a565b601f8111611614575b50602090601f831160011461158557611236929189918361157a5750508160011b916000199060031b1c19161790565b6000805160206135eb833981519152555b61124f6134db565b6112576134db565b61126033612ebf565b6112686134db565b6112706134db565b600160008051602061358b8339815191525561128a6134db565b6001600160a01b03811615611535576001600160a01b038316156114e5576001600160a01b0385161561148e576001600160a01b038216156114385760048035600155602435600255600380546001600160a01b03199081166001600160a01b0394851617909155815481163317909155600580548216948316949094179093556006805480851687841690811790925560088054909516939092169290921790925590841690811792831561141f5760405193604085018581106001600160401b038211176114095760409081529085526101a46020909501949094526001600160a01b03908116911617606960a21b177fdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b005542600955901c60ff16156113af5780f35b68ff0000000000000000196000805160206135cb83398151915254166000805160206135cb833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b634e487b7160e01b600052604160045260246000fd5b604051635b6cc80560e11b815260048101869052602490fd5b60405162461bcd60e51b815260206004820152602860248201527f44656c65676174652072656769737472792063616e6e6f74206265207a65726f604482015267206164647265737360c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602960248201527f526f79616c7469657320636f6e74726163742063616e6e6f74206265207a65726044820152686f206164647265737360b81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d657461646174614c69622063616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606490fd5b015190503880610c1e565b6000805160206135eb833981519152895288929160008051602061354b833981519152915b601f19841685106115f9576001945083601f198116106115e0575b505050811b016000805160206135eb83398151915255611247565b015160001960f88460031b161c191690553880806115c5565b818101518355602094850194600190930192909101906115aa565b6000805160206135eb833981519152600052601f830160051c60008051602061354b8339815191520160208410611675575b601f820160051c60008051602061354b8339815191520181106116695750611206565b60008155600101611646565b5060008051602061354b833981519152611646565b634e487b7160e01b88526041600452602488fd5b60008051602061352b8339815191528a5289929160008051602061360b833981519152915b601f1984168510611712576001945083601f198116106116f9575b505050811b0160008051602061352b833981519152556111d4565b015160001960f88460031b161c191690553880806116de565b818101518355602094850194600190930192909101906116c3565b60008051602061352b833981519152600052601f830160051c60008051602061360b833981519152016020841061178e575b601f820160051c60008051602061360b8339815191520181106117825750611193565b6000815560010161175f565b5060008051602061360b83398151915261175f565b634e487b7160e01b89526041600452602489fd5b68ffffffffffffffffff19841668010000000000000001176000805160206135cb8339815191525561110c565b60405163f92ee8a960e01b8152600490fd5b905015386110dc565b303b1591506110d4565b604086901c60ff161591506110ca565b5034610318578060031936011261031857602060405160018152f35b5034610318576020366003190112610318576020906040906001600160a01b0361185d6126d9565b168152600f83522054604051908152f35b5034610318578061187e366127dd565b90611887612fbd565b6005546001600160a01b031691823b156118dc576118cb92849283604051809681958294637d330cdd60e01b845260048401526040602484015260448301906126b4565b03925af180156104aa576106425750f35b505050fd5b50346103185780600319360112610318576020600254604051908152f35b50346103185780600319360112610318576020610fcb612e7d565b5034610318578060031936011261031857611933612fbd565b600b548015159081611988575b501561194d5742600c5580f35b60405162461bcd60e51b81526020600482015260136024820152721190d194c81b5a5b9d081b9bdd08195b991959606a1b6044820152606490fd5b90506107088101809111610dfc5742101538611940565b50346103185780600319360112610318576006546040516001600160a01b039091168152602090f35b5034610318578060031936011261031857602060405160058152f35b50346103185780600319360112610318576119fd612fbd565b60008051602061356b83398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461031857602036600319011261031857611a696126d9565b906001600160a01b03821615611a8d576020611a84836128a8565b54604051908152f35b602490604051906322718ad960e21b82526004820152fd5b50346103185780600319360112610318576020604051602a8152f35b5034610318576020366003190112610318576020611ae0600435612f63565b6040516001600160a01b039091168152f35b50346103185780600319360112610318576003546040516001600160a01b039091168152602090f35b612885565b5034610318576020366003190112610318576020906040906001600160a01b03611b486126d9565b168152601083522054604051908152f35b503461031857806003193601126103185760206040516103848152f35b50346103185780600319360112610318576005546040516001600160a01b039091168152602090f35b50346103185780600319360112610318576004546040516001600160a01b039091168152602090f35b503461031857806003193601126103185760206040516107088152f35b503461031857610315611bf736612850565b9060405192611c058461274f565b85845261090a838383612bff565b50346103185780600319360112610318576020604051673a4965bf58a400008152f35b50604036600319011261031857611c4b6126d9565b60249081356001600160401b0381116104a657611c6c903690600401612820565b90611c75612f33565b611c7d612e7d565b15611e6b57845460018101809111611e1f576101a4611c9d911115612a15565b611cbb673a4965bf58a4000093611cb685341015612a58565b612ff6565b9060018060a01b039283831692838852600e6020526040882054611e325791611d1e91611d19611d239460405160208101916001600160601b03199060601b16825260148152611d0a81612734565b51902092600154923691612ade565b6130cd565b612b34565b8452600e6020526040842080549060018201809211611e1f579085929155611d57611d4e8354612b77565b80845533613121565b600654168154813b156104b557829160648392604051948593849263445a477560e11b84526004840152338a840152600160448401525af180156104aa57611e0b575b50543360008051602061350b8339815191528580a33411611dcb5750600160008051602061358b8339815191525580f35b673a4965bf58a3ffff19340190348211611df9575081808080611df394335af1610401612b93565b386106ac565b634e487b7160e01b8352601160045282fd5b611e1490612721565b6104b5578238611d9a565b634e487b7160e01b865260116004528486fd5b60405162461bcd60e51b81526020600482015260128189015271105b1c9958591e481b5a5b9d19590811d51160721b6044820152606490fd5b60405162461bcd60e51b8152602060048201526019818601527f475444206d696e74207068617365206e6f7420616374697665000000000000006044820152606490fd5b5034610318578060031936011261031857611ec8612fbd565b478015611f2f5760035482918291829182916001600160a01b03165af1611eed612b93565b5015611ef65780f35b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b50346103185780600319360112610318576020610fcb612e51565b50346103185780600319360112610318576020610fcb612e39565b50346103185760403660031901126103185760043581527fdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b0160205260409020546001600160a01b03808216916024359160a09190911c908315612050575b506001600160601b03169081810291818304149015171561203a57604080516001600160a01b03939093168352612710909104602083015290f35b634e487b7160e01b600052601160045260246000fd5b7fdaedc9ab023613a7caf35e703657e986ccfad7e3eb0af93a2853f8d65dd86b0054908116935060a01c90506001600160601b03611fff565b50346103185780600319360112610318576020600d54604051908152f35b5034610318576103156120b936612850565b91612bff565b506060366003190112610318576004356120d76126ef565b90604480356001600160401b038111610882576120f8903690600401612820565b90612101612f33565b612109612e51565b156122f55761211f6101a4610351868954612a08565b600484116122bb57675fc1b971363200009484860295860485036122a757906121b5611d1e612156899594611cb68a341015612a58565b9260018060a01b0394611d1986861695868952600f602052612181600461037b8d60408d2054612a08565b60405160208101916001600160601b03199060601b168252601481526121a681612734565b51902092600254923691612ade565b8252600f602052604082206121cb858254612a08565b9055815b84811061220c578286818134116121f557600160008051602061358b8339815191525580f35b8080806103f66122059534612b86565b81816103d1565b6122226122198454612b77565b80855533613121565b81600654168354813b1561088257849160648392604051948593849263445a477560e11b8452600484015233602484015260018b8401525af190811561229c578491612288575b5090600191543360008051602061350b8339815191528680a3016121cf565b61229190612721565b6104b5578238612269565b6040513d86823e3d90fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b8152602060048201526012602482015271115e18d959591cc81190d194c81b1a5b5a5d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f46434653206d696e74207068617365206e6f74206163746976650000000000006044820152606490fd5b50346103185780600319360112610318576008546040516001600160a01b039091168152602090f35b50346103185780612373366127dd565b9061237c612fbd565b6005546001600160a01b031691823b156118dc576118cb928492836040518096819582946303ed46b160e21b845260048401526040602484015260448301906126b4565b5034610318576040366003190112610318576123da6126d9565b6024356123e681612f63565b33151580612496575b80612476575b61245e576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a46000526000805160206135ab8339815191526020526040600020906001600160601b0360a01b82541617905580f35b60405163a9fbf51f60e01b8152336004820152602490fd5b50612480816128e1565b3360005260205260ff60406000205416156123f5565b506001600160a01b0381163314156123ef565b5034610318576020366003190112610318576020906004356124ca81612f63565b5081526000805160206135ab8339815191528252604060018060a01b0391205416604051908152f35b503461031857806003193601126103185760405160008051602061352b83398151915280548260006125248361291a565b9283835260209460019186600182169182600014610f8e575050600114612553575050610f309250038361276a565b85925060005260008051602061360b833981519152906000915b858310612585575050610f3093508201018580610f22565b8054838901850152879450869390920191810161256d565b50346103185780600319360112610318576125b6612f33565b60065481906001600160a01b0316803b156106d65781906004604051809481936234dbc160e51b83525af180156104aa576126015750600160008051602061358b8339815191525580f35b611df390612721565b9050346108025760203660031901126108025760043563ffffffff60e01b81168091036104b557602092506380ac58cd60e01b8114908115612680575b8115612655575b5015158152f35b63152a902d60e11b81149150811561266f575b503861264e565b6301ffc9a760e01b14905038612668565b635b5e139f60e01b81149150612647565b60005b8381106126a45750506000910152565b8181015183820152602001612694565b906020916126cd81518092818552858086019101612691565b601f01601f1916010190565b600435906001600160a01b038216820361065657565b602435906001600160a01b038216820361065657565b3461065657600036600319011261065657602060405160048152f35b6001600160401b03811161140957604052565b604081019081106001600160401b0382111761140957604052565b602081019081106001600160401b0382111761140957604052565b90601f801991011681019081106001600160401b0382111761140957604052565b6001600160401b03811161140957601f01601f191660200190565b9291926127b28261278b565b916127c0604051938461276a565b829481845281830111610656578281602093846000960137010152565b9060406003198301126106565760043591602435906001600160401b03821161065657806023830112156106565781602461281d936004013591016127a6565b90565b9181601f84011215610656578235916001600160401b038311610656576020808501948460051b01011161065657565b6060906003190112610656576001600160a01b0390600435828116810361065657916024359081168103610656579060443590565b34610656576000366003190112610656576020604051675fc1b971363200008152f35b6001600160a01b031660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793036020526040902090565b6001600160a01b031660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020526040902090565b90600182811c9216801561294a575b602083101461293457565b634e487b7160e01b600052602260045260246000fd5b91607f1691612929565b600754600092916129648261291a565b808252916020906001908181169081156129e35750600114612987575b50505050565b9293945060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688926000935b8585106129d0575050506020925001019038808080612981565b80548585018401529382019381016129b6565b92505050602093945060ff929192191683830152151560051b01019038808080612981565b9190820180921161203a57565b15612a1c57565b60405162461bcd60e51b81526020600482015260146024820152734578636565647320746f74616c20737570706c7960601b6044820152606490fd5b15612a5f57565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b15612aa257565b60405162461bcd60e51b8152602060048201526014602482015273115e18d959591cc81dd85b1b195d081b1a5b5a5d60621b6044820152606490fd5b9092916001600160401b038411611409578360051b6020926020604051612b078285018261276a565b809781520191810192831161065657905b828210612b255750505050565b81358152908301908301612b18565b15612b3b57565b60405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21026b2b935b63290383937b7b360611b6044820152606490fd5b600019811461203a5760010190565b9190820391821161203a57565b3d15612bbe573d90612ba48261278b565b91612bb2604051938461276a565b82523d6000602084013e565b606090565b15612bca57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b90916001600160a01b03808416928315612e20576000938385527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930294856020526040968488832054169633151580612d84575b50612c648815159283612d45576128a8565b8054600101905586835260205287822080546001600160a01b031916841790558751928690887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8580a480612d3d575b612ceb575b50501692838303612cca5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b8360065416803b156108025782602481848094631d46f2b960e11b83528a60048401525af1908115612d325750612d23575b80612cb9565b612d2c90612721565b38612d1d565b8751903d90823e3d90fd5b506001612cb4565b60008981526000805160206135ab8339815191526020526040902080546001600160a01b0319169055612d778a6128a8565b80546000190190556128a8565b80612dd1575b15612d955738612c52565b888789612db2576024915190637e27328960e01b82526004820152fd5b905163177e802f60e01b81523360048201526024810191909152604490fd5b503388148015612e04575b80612d8a57508683526000805160206135ab83398151915260205233868a8520541614612d8a565b50612e0e886128e1565b33845260205260ff8984205416612ddc565b604051633250574960e11b815260006004820152602490fd5b600c54151580612e465790565b506101a46000541090565b600b548015159081612e67575b5080612e465790565b9050610708810180911161203a57421038612e5e565b600a548015159081612e92575080612e465790565b9050610384810180911161203a57421038612e5e565b600954151580612eb55790565b506004600d541090565b6001600160a01b03908116908115612f1a5760008051602061356b83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b60008051602061358b8339815191526002815414612f515760029055565b604051633ee5aeb560e01b8152600490fd5b60008181527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b0316908115612fa5575090565b60249060405190637e27328960e01b82526004820152fd5b60008051602061356b833981519152546001600160a01b03163303612fde57565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b03818116908161300e575050503390565b6020906008541691604460405180948193634e1cade160e11b835233600484015260248301525afa9081156130c157600091613086575b501561304e5790565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69642064656c656761746560801b6044820152606490fd5b6020813d6020116130b9575b8161309f6020938361276a565b810103126108025751908115158203610318575038613045565b3d9150613092565b6040513d6000823e3d90fd5b9091906000915b815183101561311a576020808460051b8401015191600083821060001461310a575060005252600160406000205b9201916130d4565b9060409260019483525220613102565b9150501490565b604080519261312f8461274f565b60008085526001600160a01b03948486169485156133a6578383527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079302602097818952808786205416908115159283613367575b61318b856128a8565b600181540190558787528a52878620896001600160601b0360a01b82541617905586898951937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8980a4828061335f575b61330d575b50506132f5573b6131f5575b505050505050565b856132329185969798955180938192630a85bd0160e11b9788845233600485015287602485015260448401526080606484015260848301906126b4565b0381858a5af1908290826132b1575b505061327957505050613252612b93565b8051939084613273578251633250574960e11b815260048101859052602490fd5b84925001fd5b9194506001600160e01b03199091160361329a5750503880808080806131ed565b602492505190633250574960e11b82526004820152fd5b909192508781813d83116132ee575b6132ca818361276a565b810103126108025751906001600160e01b0319821682036103185750903880613241565b503d6132c0565b84516339e3563760e11b815260048101849052602490fd5b60065416803b1561335b5781602481888094631d46f2b960e11b83528b60048401525af1801561335157613342575b806131e1565b61334b90612721565b3861333c565b87513d87823e3d90fd5b8580fd5b5060016131dc565b60008881526000805160206135ab8339815191526020526040902080546001600160a01b0319169055613399836128a8565b8054600019019055613182565b8451633250574960e11b815260048101849052602490fd5b9293823b6133ce575b5050505050565b6134129060018060a01b038094169560405194859481630a85bd0160e11b9889885216600487015216602485015260448401526080606484015260848301906126b4565b03906020816000938185885af190829082613492575b50506134605782613437612b93565b805191908261345957604051633250574960e11b815260048101839052602490fd5b6020915001fd5b6001600160e01b0319160361347a575038808080806133c7565b60249060405190633250574960e11b82526004820152fd5b909192506020813d6020116134d3575b816134af6020938361276a565b810103126108025751906001600160e01b0319821682036103185750903880613428565b3d91506134a2565b60ff6000805160206135cb8339815191525460401c16156134f857565b604051631afcd79f60e31b8152600490fdfe30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300f4bad0a69248f59680a4f2b3000328cec71a413447c96781cfe5996daa8c456e9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079304f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930137c58c799b6609234b945e882912ee9ad34948a1dfaa20a97485e1a7752bbf81a26469706673582212200591bb335a061e208a8785a9e2abb13b01fb591a12492f59a82376c677dac61064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x260A JUMPI POP DUP1 PUSH4 0x69B7820 EQ PUSH2 0x259D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24F3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x24A9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23C0 JUMPI DUP1 PUSH4 0xEA58915 EQ PUSH2 0xB4E JUMPI DUP1 PUSH4 0xFB51AC4 EQ PUSH2 0x2363 JUMPI DUP1 PUSH4 0x13BFFFAC EQ PUSH2 0x233A JUMPI DUP1 PUSH4 0x18919D62 EQ PUSH2 0x20BF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20A7 JUMPI DUP1 PUSH4 0x24659318 EQ PUSH2 0x2089 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x1FA1 JUMPI DUP1 PUSH4 0x2D632678 EQ PUSH2 0x1B1B JUMPI DUP1 PUSH4 0x2D6B6224 EQ PUSH2 0x1F86 JUMPI DUP1 PUSH4 0x34F8F268 EQ PUSH2 0x1F6B JUMPI DUP1 PUSH4 0x3C404A9C EQ PUSH2 0xFD5 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1EAF JUMPI DUP1 PUSH4 0x3F2C0D6A EQ PUSH2 0x1C36 JUMPI DUP1 PUSH4 0x40B55480 EQ PUSH2 0x1C13 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BE5 JUMPI DUP1 PUSH4 0x4A7887C4 EQ PUSH2 0x1BC8 JUMPI DUP1 PUSH4 0x4D853EE5 EQ PUSH2 0x1B9F JUMPI DUP1 PUSH4 0x4E8117A9 EQ PUSH2 0x1B76 JUMPI DUP1 PUSH4 0x5270C753 EQ PUSH2 0x1B59 JUMPI DUP1 PUSH4 0x5C121BC9 EQ PUSH2 0x1B20 JUMPI DUP1 PUSH4 0x611F3F10 EQ PUSH2 0x1B1B JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x1AF2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1AC1 JUMPI DUP1 PUSH4 0x6AC6319C EQ PUSH2 0x1AA5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E4 JUMPI DUP1 PUSH4 0x74819EF7 EQ PUSH2 0x19C8 JUMPI DUP1 PUSH4 0x76C25E6F EQ PUSH2 0x199F JUMPI DUP1 PUSH4 0x76C64C62 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x7726C505 EQ PUSH2 0x18FF JUMPI DUP1 PUSH4 0x7BB23E3A EQ PUSH2 0x18E1 JUMPI DUP1 PUSH4 0x7D330CDD EQ PUSH2 0x186E JUMPI DUP1 PUSH4 0x7F0505F1 EQ PUSH2 0x1835 JUMPI DUP1 PUSH4 0x8539CB82 EQ PUSH2 0x1819 JUMPI DUP1 PUSH4 0x89D29C4C EQ PUSH2 0x1046 JUMPI DUP1 PUSH4 0x8CFEC4C0 EQ PUSH2 0x1028 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF2 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0xFD5 JUMPI DUP1 PUSH4 0x9134D9C2 EQ PUSH2 0xFB0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xECF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xE2D JUMPI DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0xE10 JUMPI DUP1 PUSH4 0xA3ECA3ED EQ PUSH2 0xD78 JUMPI DUP1 PUSH4 0xAA0F0D7F EQ PUSH2 0xB92 JUMPI DUP1 PUSH4 0xAB13C089 EQ PUSH2 0xB53 JUMPI DUP1 PUSH4 0xB0660C77 EQ PUSH2 0xB4E JUMPI DUP1 PUSH4 0xB32395CA EQ PUSH2 0xB15 JUMPI DUP1 PUSH4 0xB4BBB18F EQ PUSH2 0x910 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0xBFA41777 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xC2CA0AC5 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xD0E8F26E EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xD67F8D0B EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xE0A80853 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xEAFD4891 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xEF39154B EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xEFD0CBF9 EQ PUSH2 0x31B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x315 PUSH2 0x308 PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x310 PUSH2 0x2FBD JUMP JUMPDEST PUSH2 0x2EBF JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x333 PUSH2 0x2F33 JUMP JUMPDEST PUSH2 0x33B PUSH2 0x2E39 JUMP JUMPDEST ISZERO PUSH2 0x509 JUMPI PUSH2 0x358 PUSH2 0x1A4 PUSH2 0x351 DUP4 DUP6 SLOAD PUSH2 0x2A08 JUMP JUMPDEST GT ISZERO PUSH2 0x2A15 JUMP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0x4CD JUMPI CALLER DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x382 PUSH1 0x5 PUSH2 0x37B DUP4 PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0x2A08 JUMP JUMPDEST GT ISZERO PUSH2 0x2A9B JUMP JUMPDEST PUSH8 0x5FC1B97136320000 SWAP1 DUP1 DUP3 MUL SWAP2 DUP3 DIV DUP2 SUB PUSH2 0x4B9 JUMPI PUSH2 0x3A4 DUP3 CALLVALUE LT ISZERO PUSH2 0x2A58 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x3BB DUP3 DUP3 SLOAD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SSTORE DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x40E JUMPI POP POP DUP2 DUP2 CALLVALUE GT PUSH2 0x3E6 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3F6 PUSH2 0x407 SWAP6 CALLVALUE PUSH2 0x2B86 JUMP JUMPDEST CALLER GAS CALL PUSH2 0x401 PUSH2 0x2B93 JUMP JUMPDEST POP PUSH2 0x2BC3 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x41B DUP6 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP7 SSTORE CALLER PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP5 SLOAD DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x4B5 JUMPI DUP3 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x492 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP2 SLOAD CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 DUP1 LOG3 ADD PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x49B SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4A6 JUMPI DUP4 CODESIZE PUSH2 0x473 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x115E18D959591CC81C1D589B1A58C81B1A5B5A5D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74207068617365206E6F742061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x5A4 PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x5B5 PUSH2 0x5AF PUSH2 0x26EF JUMP JUMPDEST SWAP2 PUSH2 0x28E1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x656 JUMPI DUP2 SWAP1 PUSH2 0x602 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x652 JUMPI DUP3 SWAP2 PUSH1 0x24 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0xE0A80853 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x642 JUMPI POP RETURN JUMPDEST PUSH2 0x64B SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x318 JUMPI DUP1 RETURN JUMPDEST POP POP REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x674 PUSH2 0x2F33 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6D6 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xD67F8D0B PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x6C2 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH2 0x6CB SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x318 JUMPI DUP1 CODESIZE PUSH2 0x6AC JUMP JUMPDEST POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x802 JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x727 DUP5 PUSH2 0x2F63 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x9AAFB61 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH2 0x753 PUSH1 0x64 DUP5 ADD PUSH2 0x2954 JUMP JUMPDEST SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x806 JUMPI DUP1 SWAP4 PUSH2 0x786 JUMPI JUMPDEST POP POP PUSH2 0x782 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP3 DUP5 RETURNDATACOPY PUSH2 0x799 DUP2 DUP5 PUSH2 0x276A JUMP JUMPDEST DUP3 ADD SWAP2 DUP4 DUP2 DUP5 SUB SLT PUSH2 0x802 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4B5 JUMPI ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x802 JUMPI DUP1 MLOAD SWAP2 PUSH2 0x7CE DUP4 PUSH2 0x278B JUMP JUMPDEST SWAP4 PUSH2 0x7DC PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x276A JUMP JUMPDEST DUP4 DUP6 MSTORE DUP6 DUP5 DUP5 ADD ADD GT PUSH2 0x318 JUMPI POP SWAP1 PUSH2 0x7FA SWAP2 DUP5 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2691 JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x76C JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI DUP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x830 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND PUSH2 0x848 DUP3 PUSH2 0x2F63 JUMP JUMPDEST SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x882 JUMPI DUP5 SWAP3 DUP4 PUSH1 0x44 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x2FEDC381 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE AND PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x642 JUMPI POP RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x8BE PUSH2 0x26D9 JUMP JUMPDEST PUSH2 0x8C6 PUSH2 0x26EF JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x882 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x882 JUMPI PUSH2 0x8FE PUSH2 0x315 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x27A6 JUMP JUMPDEST SWAP3 PUSH2 0x90A DUP4 DUP4 DUP4 PUSH2 0x2BFF JUMP JUMPDEST CALLER PUSH2 0x33BE JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x92D PUSH2 0x2F33 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0xAD8 JUMPI PUSH2 0x949 PUSH2 0x2EA8 JUMP JUMPDEST ISZERO PUSH2 0xA93 JUMPI PUSH1 0xD SLOAD PUSH1 0x4 PUSH2 0x95D DUP5 DUP4 PUSH2 0x2A08 JUMP JUMPDEST GT PUSH2 0xA4E JUMPI DUP3 PUSH2 0x97D SWAP2 PUSH2 0x978 PUSH2 0x1A4 PUSH2 0x351 DUP5 DUP10 SLOAD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0xD SSTORE DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x9B2 JUMPI DUP4 PUSH1 0x4 PUSH1 0xD SLOAD EQ PUSH2 0x9A9 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST TIMESTAMP PUSH1 0xA SSTORE PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x9CC PUSH2 0x9BF DUP6 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP7 SSTORE DUP4 PUSH1 0x4 SLOAD AND PUSH2 0x3121 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x6 SLOAD AND DUP2 SLOAD DUP5 PUSH1 0x4 SLOAD AND DUP3 EXTCODESIZE ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x64 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0xA3A JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP1 DUP3 PUSH1 0x4 SLOAD AND DUP6 SLOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 DUP1 LOG3 ADD PUSH2 0x982 JUMP JUMPDEST PUSH2 0xA43 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4A6 JUMPI DUP4 CODESIZE PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320666F756E646572206D696E74206C696D6974000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E646572206D696E74207068617365206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E48199BDD5B99195C8818D85B881B5A5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB3D PUSH2 0x26D9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x2705 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x782 PUSH1 0x40 MLOAD PUSH2 0xB7E DUP2 PUSH2 0xB77 DUP2 PUSH2 0x2954 JUMP JUMPDEST SUB DUP3 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x4B5 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x4B5 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x4B5 JUMPI PUSH1 0x24 CALLDATASIZE PUSH1 0x24 DUP5 DUP5 ADD ADD GT PUSH2 0x4A6 JUMPI PUSH2 0xBE6 PUSH2 0x2FBD JUMP JUMPDEST DUP3 ISZERO PUSH2 0xD33 JUMPI PUSH2 0xBF7 PUSH1 0x7 SLOAD PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCCE JUMPI JUMPDEST POP DUP4 SWAP5 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xC47 JUMPI POP POP DUP3 SWAP4 DUP3 SWAP2 PUSH2 0xC33 SWAP5 SWAP3 PUSH2 0xC39 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP ADD ADD CALLDATALOAD CODESIZE DUP1 PUSH2 0xC1E JUMP JUMPDEST PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP3 SWAP2 PUSH1 0x1F NOT DUP6 AND SWAP2 DUP7 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xCB2 JUMPI POP POP POP SWAP5 DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0xC95 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST ADD PUSH1 0x24 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xC89 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP11 SWAP8 DUP5 DUP4 SWAP7 SWAP13 DUP10 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP7 ADD SWAP9 ADD SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xD29 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xD1D JUMPI POP PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD10 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726572657665616C205552492063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0xD91 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0xA SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xDE5 JUMPI JUMPDEST POP ISZERO PUSH2 0xDAB JUMPI TIMESTAMP PUSH1 0xB SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11D511081B5A5B9D081B9BDD08195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x384 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xDFC JUMPI TIMESTAMP LT ISZERO CODESIZE PUSH2 0xD9E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0xE47 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x656 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xE6E CALLER PUSH2 0x28E1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0xF00 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xF8E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xF44 JUMPI JUMPDEST POP POP PUSH2 0xF30 SWAP3 POP SUB DUP4 PUSH2 0x276A JUMP JUMPDEST PUSH2 0x782 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0xF76 JUMPI POP POP PUSH2 0xF30 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0xF22 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0xF5E JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0xF30 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0xF22 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x1A4 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x4A6 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1809 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x17FF JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x17F6 JUMPI JUMPDEST POP PUSH2 0x17E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP6 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO PUSH2 0x17B7 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1118 DUP2 PUSH2 0x2734 JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH15 0x417065426561747347656E65736973 PUSH1 0x88 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1141 DUP3 PUSH2 0x2734 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x414247 PUSH1 0xE8 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1159 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1161 PUSH2 0x34DB JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17A3 JUMPI PUSH2 0x118A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x172D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x169E JUMPI PUSH2 0x11C3 SWAP3 SWAP2 DUP11 SWAP2 DUP4 PUSH2 0x157A JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x168A JUMPI PUSH2 0x11FD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1614 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1585 JUMPI PUSH2 0x1236 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x157A JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0x124F PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1257 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1260 CALLER PUSH2 0x2EBF JUMP JUMPDEST PUSH2 0x1268 PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x1270 PUSH2 0x34DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x128A PUSH2 0x34DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1535 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x148E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1438 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE DUP2 SLOAD DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 DUP6 AND DUP8 DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE SWAP1 DUP5 AND SWAP1 DUP2 OR SWAP3 DUP4 ISZERO PUSH2 0x141F JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x40 DUP6 ADD DUP6 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE SWAP1 DUP6 MSTORE PUSH2 0x1A4 PUSH1 0x20 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND OR PUSH1 0x69 PUSH1 0xA2 SHL OR PUSH32 0xDAEDC9AB023613A7CAF35E703657E986CCFAD7E3EB0AF93A2853F8D65DD86B00 SSTORE TIMESTAMP PUSH1 0x9 SSTORE SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0x13AF JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C65676174652072656769737472792063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C7469657320636F6E74726163742063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D657461646174614C69622063616E6E6F74206265207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792063616E6E6F74206265207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 MSTORE DUP9 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x15F9 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x15E0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1247 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15C5 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0x1675 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x1669 JUMPI POP PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1646 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x354B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1646 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 MSTORE DUP10 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1712 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x16F9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x11D4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x16DE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP5 LT PUSH2 0x178E JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x1782 JUMPI POP PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x175F JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x175F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP5 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x10DC JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 DUP7 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x10CA JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x185D PUSH2 0x26D9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH2 0x187E CALLDATASIZE PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x1887 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18CB SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x7D330CDD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x642 JUMPI POP RETURN JUMPDEST POP POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2E7D JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1933 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0xB SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1988 JUMPI JUMPDEST POP ISZERO PUSH2 0x194D JUMPI TIMESTAMP PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1190D194C81B5A5B9D081B9BDD08195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x708 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xDFC JUMPI TIMESTAMP LT ISZERO CODESIZE PUSH2 0x1940 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x19FD PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1A69 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1A8D JUMPI PUSH1 0x20 PUSH2 0x1A84 DUP4 PUSH2 0x28A8 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0x1AE0 PUSH1 0x4 CALLDATALOAD PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x2885 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B48 PUSH2 0x26D9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x384 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x708 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH2 0x315 PUSH2 0x1BF7 CALLDATASIZE PUSH2 0x2850 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1C05 DUP5 PUSH2 0x274F JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x90A DUP4 DUP4 DUP4 PUSH2 0x2BFF JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x3A4965BF58A40000 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1C4B PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4A6 JUMPI PUSH2 0x1C6C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2820 JUMP JUMPDEST SWAP1 PUSH2 0x1C75 PUSH2 0x2F33 JUMP JUMPDEST PUSH2 0x1C7D PUSH2 0x2E7D JUMP JUMPDEST ISZERO PUSH2 0x1E6B JUMPI DUP5 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1E1F JUMPI PUSH2 0x1A4 PUSH2 0x1C9D SWAP2 GT ISZERO PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0x1CBB PUSH8 0x3A4965BF58A40000 SWAP4 PUSH2 0x1CB6 DUP6 CALLVALUE LT ISZERO PUSH2 0x2A58 JUMP JUMPDEST PUSH2 0x2FF6 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP4 AND SWAP3 DUP4 DUP9 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH2 0x1E32 JUMPI SWAP2 PUSH2 0x1D1E SWAP2 PUSH2 0x1D19 PUSH2 0x1D23 SWAP5 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x1D0A DUP2 PUSH2 0x2734 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x1 SLOAD SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x30CD JUMP JUMPDEST PUSH2 0x2B34 JUMP JUMPDEST DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1E1F JUMPI SWAP1 DUP6 SWAP3 SWAP2 SSTORE PUSH2 0x1D57 PUSH2 0x1D4E DUP4 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP5 SSTORE CALLER PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x6 SLOAD AND DUP2 SLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0x4B5 JUMPI DUP3 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE CALLER DUP11 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x1E0B JUMPI JUMPDEST POP SLOAD CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP1 LOG3 CALLVALUE GT PUSH2 0x1DCB JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH8 0x3A4965BF58A3FFFF NOT CALLVALUE ADD SWAP1 CALLVALUE DUP3 GT PUSH2 0x1DF9 JUMPI POP DUP2 DUP1 DUP1 DUP1 PUSH2 0x1DF3 SWAP5 CALLER GAS CALL PUSH2 0x401 PUSH2 0x2B93 JUMP JUMPDEST CODESIZE PUSH2 0x6AC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP3 REVERT JUMPDEST PUSH2 0x1E14 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4B5 JUMPI DUP3 CODESIZE PUSH2 0x1D9A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP5 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 DUP2 DUP10 ADD MSTORE PUSH18 0x105B1C9958591E481B5A5B9D19590811D511 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 DUP2 DUP7 ADD MSTORE PUSH32 0x475444206D696E74207068617365206E6F742061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x1EC8 PUSH2 0x2FBD JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x1F2F JUMPI PUSH1 0x3 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x1EED PUSH2 0x2B93 JUMP JUMPDEST POP ISZERO PUSH2 0x1EF6 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2E51 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH2 0xFCB PUSH2 0x2E39 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH32 0xDAEDC9AB023613A7CAF35E703657E986CCFAD7E3EB0AF93A2853F8D65DD86B01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHR SWAP1 DUP4 ISZERO PUSH2 0x2050 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x203A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH2 0x2710 SWAP1 SWAP2 DIV PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xDAEDC9AB023613A7CAF35E703657E986CCFAD7E3EB0AF93A2853F8D65DD86B00 SLOAD SWAP1 DUP2 AND SWAP4 POP PUSH1 0xA0 SHR SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x1FFF JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH2 0x315 PUSH2 0x20B9 CALLDATASIZE PUSH2 0x2850 JUMP JUMPDEST SWAP2 PUSH2 0x2BFF JUMP JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x20D7 PUSH2 0x26EF JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x882 JUMPI PUSH2 0x20F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2820 JUMP JUMPDEST SWAP1 PUSH2 0x2101 PUSH2 0x2F33 JUMP JUMPDEST PUSH2 0x2109 PUSH2 0x2E51 JUMP JUMPDEST ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x211F PUSH2 0x1A4 PUSH2 0x351 DUP7 DUP10 SLOAD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x4 DUP5 GT PUSH2 0x22BB JUMPI PUSH8 0x5FC1B97136320000 SWAP5 DUP5 DUP7 MUL SWAP6 DUP7 DIV DUP6 SUB PUSH2 0x22A7 JUMPI SWAP1 PUSH2 0x21B5 PUSH2 0x1D1E PUSH2 0x2156 DUP10 SWAP6 SWAP5 PUSH2 0x1CB6 DUP11 CALLVALUE LT ISZERO PUSH2 0x2A58 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x1D19 DUP7 DUP7 AND SWAP6 DUP7 DUP10 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x2181 PUSH1 0x4 PUSH2 0x37B DUP14 PUSH1 0x40 DUP14 KECCAK256 SLOAD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH2 0x21A6 DUP2 PUSH2 0x2734 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x2 SLOAD SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2ADE JUMP JUMPDEST DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x21CB DUP6 DUP3 SLOAD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SSTORE DUP2 JUMPDEST DUP5 DUP2 LT PUSH2 0x220C JUMPI DUP3 DUP7 DUP2 DUP2 CALLVALUE GT PUSH2 0x21F5 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3F6 PUSH2 0x2205 SWAP6 CALLVALUE PUSH2 0x2B86 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x2222 PUSH2 0x2219 DUP5 SLOAD PUSH2 0x2B77 JUMP JUMPDEST DUP1 DUP6 SSTORE CALLER PUSH2 0x3121 JUMP JUMPDEST DUP2 PUSH1 0x6 SLOAD AND DUP4 SLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0x882 JUMPI DUP5 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x445A4775 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 DUP12 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x229C JUMPI DUP5 SWAP2 PUSH2 0x2288 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP2 SLOAD CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x350B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 DUP1 LOG3 ADD PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x2291 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x4B5 JUMPI DUP3 CODESIZE PUSH2 0x2269 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115E18D959591CC81190D194C81B1A5B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46434653206D696E74207068617365206E6F7420616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH2 0x2373 CALLDATASIZE PUSH2 0x27DD JUMP JUMPDEST SWAP1 PUSH2 0x237C PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x18DC JUMPI PUSH2 0x18CB SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x3ED46B1 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH2 0x23DA PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x23E6 DUP2 PUSH2 0x2F63 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x2496 JUMPI JUMPDEST DUP1 PUSH2 0x2476 JUMPI JUMPDEST PUSH2 0x245E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH2 0x2480 DUP2 PUSH2 0x28E1 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x23F5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x23EF JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x318 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x24CA DUP2 PUSH2 0x2F63 JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x352B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x2524 DUP4 PUSH2 0x291A JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xF8E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x2553 JUMPI POP POP PUSH2 0xF30 SWAP3 POP SUB DUP4 PUSH2 0x276A JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x360B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x2585 JUMPI POP POP PUSH2 0xF30 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0xF22 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x256D JUMP JUMPDEST POP CALLVALUE PUSH2 0x318 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x318 JUMPI PUSH2 0x25B6 PUSH2 0x2F33 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x6D6 JUMPI DUP2 SWAP1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH3 0x34DBC1 PUSH1 0xE5 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH2 0x2601 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH2 0x1DF3 SWAP1 PUSH2 0x2721 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x802 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x802 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x4B5 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2680 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2655 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x266F JUMPI JUMPDEST POP CODESIZE PUSH2 0x264E JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x2668 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x26A4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2694 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x26CD DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x656 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x656 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1409 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1409 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x27B2 DUP3 PUSH2 0x278B JUMP JUMPDEST SWAP2 PUSH2 0x27C0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x276A JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x656 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x656 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x656 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x656 JUMPI DUP2 PUSH1 0x24 PUSH2 0x281D SWAP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x27A6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x656 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x656 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x656 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x656 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x656 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x656 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x656 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x5FC1B97136320000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079303 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079305 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x294A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2934 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x2964 DUP3 PUSH2 0x291A JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x29E3 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2987 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x29D0 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2981 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2981 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x203A JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2A1C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4578636565647320746F74616C20737570706C79 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A5F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AA2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x115E18D959591CC81DD85B1B195D081B1A5B5A5D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x1409 JUMPI DUP4 PUSH1 0x5 SHL PUSH1 0x20 SWAP3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2B07 DUP3 DUP6 ADD DUP3 PUSH2 0x276A JUMP JUMPDEST DUP1 SWAP8 DUP2 MSTORE ADD SWAP2 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x656 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2B25 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2B18 JUMP JUMPDEST ISZERO PUSH2 0x2B3B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B21026B2B935B63290383937B7B3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x203A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x203A JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2BBE JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2BA4 DUP3 PUSH2 0x278B JUMP JUMPDEST SWAP2 PUSH2 0x2BB2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x276A JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2BCA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2E20 JUMPI PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 SWAP5 DUP6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP4 KECCAK256 SLOAD AND SWAP7 CALLER ISZERO ISZERO DUP1 PUSH2 0x2D84 JUMPI JUMPDEST POP PUSH2 0x2C64 DUP9 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x2D45 JUMPI PUSH2 0x28A8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE PUSH1 0x20 MSTORE DUP8 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE DUP8 MLOAD SWAP3 DUP7 SWAP1 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP1 LOG4 DUP1 PUSH2 0x2D3D JUMPI JUMPDEST PUSH2 0x2CEB JUMPI JUMPDEST POP POP AND SWAP3 DUP4 DUP4 SUB PUSH2 0x2CCA JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 PUSH1 0x6 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x802 JUMPI DUP3 PUSH1 0x24 DUP2 DUP5 DUP1 SWAP5 PUSH4 0x1D46F2B9 PUSH1 0xE1 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2D32 JUMPI POP PUSH2 0x2D23 JUMPI JUMPDEST DUP1 PUSH2 0x2CB9 JUMP JUMPDEST PUSH2 0x2D2C SWAP1 PUSH2 0x2721 JUMP JUMPDEST CODESIZE PUSH2 0x2D1D JUMP JUMPDEST DUP8 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x2CB4 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x2D77 DUP11 PUSH2 0x28A8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x28A8 JUMP JUMPDEST DUP1 PUSH2 0x2DD1 JUMPI JUMPDEST ISZERO PUSH2 0x2D95 JUMPI CODESIZE PUSH2 0x2C52 JUMP JUMPDEST DUP9 DUP8 DUP10 PUSH2 0x2DB2 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP CALLER DUP9 EQ DUP1 ISZERO PUSH2 0x2E04 JUMPI JUMPDEST DUP1 PUSH2 0x2D8A JUMPI POP DUP7 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE CALLER DUP7 DUP11 DUP6 KECCAK256 SLOAD AND EQ PUSH2 0x2D8A JUMP JUMPDEST POP PUSH2 0x2E0E DUP9 PUSH2 0x28E1 JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP10 DUP5 KECCAK256 SLOAD AND PUSH2 0x2DDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD ISZERO ISZERO DUP1 PUSH2 0x2E46 JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x1A4 PUSH1 0x0 SLOAD LT SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x2E67 JUMPI JUMPDEST POP DUP1 PUSH2 0x2E46 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x708 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x203A JUMPI TIMESTAMP LT CODESIZE PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0xA SLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x2E92 JUMPI POP DUP1 PUSH2 0x2E46 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x384 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x203A JUMPI TIMESTAMP LT CODESIZE PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x9 SLOAD ISZERO ISZERO DUP1 PUSH2 0x2EB5 JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0xD SLOAD LT SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2F1A JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x358B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x2F51 JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2FA5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x356B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2FDE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP1 DUP2 PUSH2 0x300E JUMPI POP POP POP CALLER SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD AND SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4E1CADE1 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x30C1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3086 JUMPI JUMPDEST POP ISZERO PUSH2 0x304E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C69642064656C6567617465 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x30B9 JUMPI JUMPDEST DUP2 PUSH2 0x309F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x276A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x802 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x318 JUMPI POP CODESIZE PUSH2 0x3045 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3092 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x311A JUMPI PUSH1 0x20 DUP1 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD SWAP2 PUSH1 0x0 DUP4 DUP3 LT PUSH1 0x0 EQ PUSH2 0x310A JUMPI POP PUSH1 0x0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x30D4 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP3 PUSH1 0x1 SWAP5 DUP4 MSTORE MSTORE KECCAK256 PUSH2 0x3102 JUMP JUMPDEST SWAP2 POP POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH2 0x312F DUP5 PUSH2 0x274F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP5 DUP7 AND SWAP5 DUP6 ISZERO PUSH2 0x33A6 JUMPI DUP4 DUP4 MSTORE PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079302 PUSH1 0x20 SWAP8 DUP2 DUP10 MSTORE DUP1 DUP8 DUP7 KECCAK256 SLOAD AND SWAP1 DUP2 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x3367 JUMPI JUMPDEST PUSH2 0x318B DUP6 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP8 DUP8 MSTORE DUP11 MSTORE DUP8 DUP7 KECCAK256 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 DUP10 DUP10 MLOAD SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 DUP1 LOG4 DUP3 DUP1 PUSH2 0x335F JUMPI JUMPDEST PUSH2 0x330D JUMPI JUMPDEST POP POP PUSH2 0x32F5 JUMPI EXTCODESIZE PUSH2 0x31F5 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x3232 SWAP2 DUP6 SWAP7 SWAP8 SWAP9 SWAP6 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP8 DUP9 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE DUP8 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB DUP2 DUP6 DUP11 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x32B1 JUMPI JUMPDEST POP POP PUSH2 0x3279 JUMPI POP POP POP PUSH2 0x3252 PUSH2 0x2B93 JUMP JUMPDEST DUP1 MLOAD SWAP4 SWAP1 DUP5 PUSH2 0x3273 JUMPI DUP3 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP3 POP ADD REVERT JUMPDEST SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x329A JUMPI POP POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x32EE JUMPI JUMPDEST PUSH2 0x32CA DUP2 DUP4 PUSH2 0x276A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x802 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x318 JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x3241 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x32C0 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x335B JUMPI DUP2 PUSH1 0x24 DUP2 DUP9 DUP1 SWAP5 PUSH4 0x1D46F2B9 PUSH1 0xE1 SHL DUP4 MSTORE DUP12 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x3351 JUMPI PUSH2 0x3342 JUMPI JUMPDEST DUP1 PUSH2 0x31E1 JUMP JUMPDEST PUSH2 0x334B SWAP1 PUSH2 0x2721 JUMP JUMPDEST CODESIZE PUSH2 0x333C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35AB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x3399 DUP4 PUSH2 0x28A8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x3182 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 DUP3 EXTCODESIZE PUSH2 0x33CE JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3412 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 DUP10 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x26B4 JUMP JUMPDEST SUB SWAP1 PUSH1 0x20 DUP2 PUSH1 0x0 SWAP4 DUP2 DUP6 DUP9 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x3492 JUMPI JUMPDEST POP POP PUSH2 0x3460 JUMPI DUP3 PUSH2 0x3437 PUSH2 0x2B93 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x3459 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x347A JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x33C7 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x34D3 JUMPI JUMPDEST DUP2 PUSH2 0x34AF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x276A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x802 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x318 JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x3428 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x34A2 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x35CB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x34F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID ADDRESS CODESIZE TLOAD DUP5 JUMPDEST PREVRANDAO DUP11 CALLDATASIZE 0x25 PUSH27 0x6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE80BB2B638C 0xC2 SIGNEXTEND 0xC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079300F4BAD0A69248F59680A4F2B3000328CE 0xC7 BYTE COINBASE CALLVALUE SELFBALANCE 0xC9 PUSH8 0x81CFE5996DAA8C45 PUSH15 0x9016D09D72D40FDAE2FD8CEAC6B623 0x4C PUSH24 0x6214FD39C1CD1E609A0528C1993009B779B17422D0DF922 0x23 ADD DUP12 ORIGIN 0xB4 0xD1 STATICCALL CHAINID 0xE0 PUSH18 0x723D6817E2486D003BECC55F0080BB2B638C 0xC2 SIGNEXTEND 0xC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB0079304F0C57E16840DF040F15088DC2F81FE39 SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 DUP1 0xBB 0x2B PUSH4 0x8CC20BC4 0xD0 0xA6 0xD PUSH7 0x940F3AB4A00C1D PUSH28 0x313497CA82FB0B4AB007930137C58C799B6609234B945E882912EE9A 0xD3 BLOBHASH BASEFEE LOG1 0xDF 0xAA KECCAK256 0xA9 PUSH21 0x85E1A7752BBF81A26469706673582212200591BB33 GAS MOD 0x1E KECCAK256 DUP11 DUP8 DUP6 0xA9 0xE2 0xAB 0xB1 EXTCODESIZE ADD 0xFB MSIZE BYTE SLT BLOBHASH 0x2F MSIZE 0xA8 0x23 PUSH23 0xC677DAC61064736F6C6343000818003300000000000000 ","sourceMap":"829:11253:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;2357:1:0;829:11253:34;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;829:11253:34;;;;;;-1:-1:-1;829:11253:34;;-1:-1:-1;;829:11253:34;;;;;;3361:103:6;;:::i;:::-;8082:20:34;;:::i;:::-;829:11253;;;8145:69;1058:3;8153:20;829:11253;;;8153:20;:::i;:::-;:36;;8145:69;:::i;:::-;1480:1;8232:31;;829:11253;;8328:10;829:11253;;8306:21;829:11253;;8298:100;1480:1;8306:42;829:11253;;;;;8306:42;:::i;:::-;:67;;8298:100;:::i;:::-;1258:9;829:11253;;;;;;;;;;;8408:67;8416:9;;:34;;8408:67;:::i;:::-;8328:10;829:11253;;8306:21;829:11253;;;;;8486:43;829:11253;;;8486:43;:::i;:::-;829:11253;;8544:13;8559:10;;;;;;8416:9;;;;;8799:33;8795:185;;8539:246;829:11253;-1:-1:-1;;;;;;;;;;;829:11253:34;;;8795:185;8416:9;;;8887:33;8939:30;8416:9;;8887:33;:::i;:::-;8328:10;8864:61;;;;:::i;:::-;;8939:30;:::i;:::-;8795:185;;;;8571:3;8639:11;8590:13;829:11253;;8590:13;:::i;:::-;829:11253;;;8328:10;8639:11;:::i;:::-;8665:17;829:11253;;;;;-1:-1:-1;;;;;829:11253:34;;8665:59;;;;;829:11253;;;;;;;;;;;;;;;8665:59;;829:11253;8665:59;;829:11253;8328:10;829:11253;;;;;;;;;8665:59;;;;;;;;8571:3;829:11253;;;;;8328:10;-1:-1:-1;;;;;;;;;;;8743:31:34;;;829:11253;8544:13;;8665:59;;;;:::i;:::-;829:11253;;8665:59;;;;829:11253;;;;8665:59;829:11253;;;;;;;;;8665:59;829:11253;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:28;829:11253;;;;;;;;;;;;;;;;;;;;;2082:28;829:11253;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;:::i;:::-;5126:27:2;829:11253:34;;:::i;:::-;5126:27:2;;:::i;:::-;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;;;;;;;2303:62:0;;;;:::i;:::-;11631:11:34;829:11253;-1:-1:-1;;;;;829:11253:34;;11631:34;;;;;829:11253;;;;;;;;;;;;;;;11631:34;;829:11253;11631:34;;829:11253;11631:34;;;;;;;;829:11253;;11631:34;;;;:::i;:::-;829:11253;;11631:34;829:11253;11631:34;829:11253;;;;;;;;;;;;;;;;;;;;3361:103:6;;:::i;:::-;11256:17:34;829:11253;;;-1:-1:-1;;;;;829:11253:34;11256:38;;;;;829:11253;;;;;;;;;;;;;11256:38;;;;;;;;;;829:11253;;1372:1;-1:-1:-1;;;;;;;;;;;829:11253:34;;;11256:38;;;;:::i;:::-;829:11253;;11256:38;;;;;829:11253;;;;;;;;;;;;;;;;2049:27;829:11253;;;;;;;;;;;;;;;;;;;;;10690:11;829:11253;;;;;;-1:-1:-1;;;;;829:11253:34;;;3373:22:2;829:11253:34;3373:22:2;:::i;:::-;829:11253:34;;;;;;;;;;;;10690:72;;829:11253;10690:72;;829:11253;;;;;;;;;;;:::i;:::-;;;;;;;10690:72;;;;;;;;;;;;;829:11253;;;;;;;;;;;;;;;;:::i;:::-;;;;10690:72;;;;;;;;;;;;;;:::i;:::-;;;829:11253;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10690:72;;;;;829:11253;;;;10690:72;829:11253;;;;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;2303:62:0;;:::i;:::-;12028:11:34;829:11253;-1:-1:-1;;;;;829:11253:34;;;;3373:22:2;829:11253:34;3373:22:2;:::i;:::-;12028:45:34;;;;;;829:11253;;;;;;;;;;;;;;;12028:45;;829:11253;12028:45;;829:11253;;;;;;12028:45;;;;;;;;829:11253;;12028:45;829:11253;;;;;;;;;;;;;;;;;2012:31;829:11253;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;6203:4:2;829:11253:34;;;;;;;;;;;:::i;:::-;6118:7:2;;;;;;:::i;:::-;966:10:5;6203:4:2;:::i;829:11253:34:-;;;;;;;-1:-1:-1;;829:11253:34;;;;;;3361:103:6;;:::i;:::-;829:11253:34;;-1:-1:-1;;;;;829:11253:34;;;4630:10;:21;829:11253;;4695:21;;:::i;:::-;829:11253;;;4768:13;829:11253;;4768:22;;;;:::i;:::-;:45;829:11253;;;4934:23;829:11253;4854:69;1058:3;4862:20;829:11253;;;4862:20;:::i;4854:69::-;4934:23;:::i;:::-;4768:13;829:11253;4972:13;4987:10;;;;;;829:11253;;4768:13;829:11253;5280:36;5276:97;;829:11253;-1:-1:-1;;;;;;;;;;;829:11253:34;;;5276:97;5347:15;5332:30;829:11253;5276:97;;4999:3;5064:11;5018:13;829:11253;;5018:13;:::i;:::-;829:11253;;;;;;;5064:11;:::i;:::-;829:11253;;5090:17;829:11253;;;;;;;;5090:56;;;;;829:11253;;;;;;;;;;;;;;5090:56;;829:11253;5090:56;;829:11253;;;;;;;;;;5090:56;;;;;;;;4999:3;829:11253;;;;;;;;;;5165:28;-1:-1:-1;;;;;;;;;;;5165:28:34;;;829:11253;4972:13;;5090:56;;;;:::i;:::-;829:11253;;5090:56;;;;829:11253;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;-1:-1:-1;;;;;829:11253:34;;:::i;:::-;;;;2399:53;829:11253;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;4132:39:34;;829:11253;;;4215:44;829:11253;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:44;829:11253;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:44;829:11253;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:44;829:11253;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:11253:34;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;10180:12:34;829:11253;10180:16;;;:66;;;;829:11253;;;;;10295:15;10279:31;829:11253;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;10180:66;829:11253;;2215:10;829:11253;;;;;;;10200:15;:46;;10180:66;;;829:11253;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;17114:22:2;;17110:91;;17210:27;966:10:5;17210:27:2;:::i;:::-;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;17273:41:2;829:11253:34;966:10:5;17273:41:2;;829:11253:34;;17110:91:2;829:11253:34;;-1:-1:-1;;;17159:31:2;;829:11253:34;17159:31:2;;829:11253:34;;;;;17159:31:2;829:11253:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1058:3;829:11253;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;2116:30;829:11253;;;;;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;-1:-1:-1;;;;;829:11253:34;;4724:16:1;;:34;;;;829:11253:34;;4788:16:1;:50;;;;829:11253:34;4853:13:1;:30;;;;829:11253:34;4849:91:1;;;829:11253:34;-1:-1:-1;;;;;829:11253:34;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;4301:16:1;4977:67;;829:11253:34;;;;;;:::i;:::-;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;829:11253:34;;;;6891:76:1;;:::i;:::-;;;:::i;:::-;829:11253:34;;;-1:-1:-1;;;;;829:11253:34;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;-1:-1:-1;;;;;829:11253:34;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;6891:76:1;;:::i;:::-;;;:::i;:::-;6959:1;3079:10:34;6959:1:1;:::i;:::-;6891:76;;:::i;:::-;;;:::i;:::-;829:11253:34;-1:-1:-1;;;;;;;;;;;829:11253:34;6891:76:1;;:::i;:::-;-1:-1:-1;;;;;829:11253:34;;3175:23;829:11253;;-1:-1:-1;;;;;829:11253:34;;3252:26;829:11253;;-1:-1:-1;;;;;829:11253:34;;3335:32;829:11253;;-1:-1:-1;;;;;829:11253:34;;3431:31;829:11253;;;;;;;;;3558:32;829:11253;;;;-1:-1:-1;;;;;;829:11253:34;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;3079:10;829:11253;;;;3660:47;829:11253;;;;;;;;;;;;;;3717:57;829:11253;;;;;;;;;;;;;;3784:55;829:11253;;;;;;;;;;;;;;;;;;;;;;;4928:22:4;;4924:108;;829:11253:34;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;1533:3;829:11253;5066:35:4;;;829:11253:34;;;;-1:-1:-1;;;;;829:11253:34;;;;;;-1:-1:-1;;;829:11253:34;1999:65:4;829:11253:34;3995:15;3976:34;829:11253;;;;;4301:16:1;5064:101;;829:11253:34;;5064:101:1;829:11253:34;;-1:-1:-1;;;;;;;;;;;829:11253:34;;-1:-1:-1;;;;;;;;;;;829:11253:34;5140:14:1;829:11253:34;;;;;;5140:14:1;829:11253:34;;;;;;;;;;;;;;4924:108:4;829:11253:34;;-1:-1:-1;;;4973:48:4;;829:11253:34;4973:48:4;;829:11253:34;;;;;4973:48:4;829:11253:34;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:11253:34;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;-1:-1:-1;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;829:11253:34;;;-1:-1:-1;;;829:11253:34;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;-1:-1:-1;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;829:11253:34;;;-1:-1:-1;;;829:11253:34;;;;;;;;4977:67:1;-1:-1:-1;;829:11253:34;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;4977:67:1;;4849:91;829:11253:34;;-1:-1:-1;;;4906:23:1;;829:11253:34;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;829:11253:34;;;;;;4301:16:1;;-1:-1:-1;4724:34:1;;829:11253:34;;;;;;;;;;;;;;;;1372:1;829:11253;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;-1:-1:-1;;;;;829:11253:34;;:::i;:::-;;;;2458:54;829:11253;;;;;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;;:::i;:::-;11767:11:34;829:11253;-1:-1:-1;;;;;829:11253:34;;11767:40;;;;;829:11253;;;;;;;;;;;;;;;;11767:40;;829:11253;11767:40;;829:11253;;;;;;;;;;;:::i;:::-;11767:40;;;;;;;;;;829:11253;;11767:40;829:11253;;;;;;;;;;;;;;;;;;1671:29;829:11253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2303:62:0;;:::i;:::-;10387:13:34;829:11253;10387:17;;;:69;;;;829:11253;;;;;10508:15;10490:33;829:11253;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;10387:69;829:11253;;2271:10;829:11253;;;;;;;10408:15;:48;;10387:69;;;829:11253;;;;;;;;;;;;;1852:42;829:11253;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;1480:1;829:11253;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;829:11253:34;;-1:-1:-1;;;;;;829:11253:34;;;;;;;-1:-1:-1;;;;;829:11253:34;3975:40:0;829:11253:34;;3975:40:0;829:11253:34;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;:::i;:::-;;-1:-1:-1;;;;;829:11253:34;;3126:19:2;3122:87;;829:11253:34;3225:18:2;;;:::i;:::-;829:11253:34;;;;;;;3122:87:2;829:11253:34;;;;3168:30:2;;;;;;829:11253:34;3168:30:2;;829:11253:34;3168:30:2;829:11253:34;;;;;;;;;;;;;;;;1162:2;829:11253;;;;;;;;;;-1:-1:-1;;829:11253:34;;;;;3373:22:2;829:11253:34;;3373:22:2;:::i;:::-;829:11253:34;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;1751:23;829:11253;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;-1:-1:-1;;;;;829:11253:34;;:::i;:::-;;;;2518:56;829:11253;;;;;;;;;;;;;;;;;;;;;;;;;;2215:10;829:11253;;;;;;;;;;;;;;;;1808:38;829:11253;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;2271:10;829:11253;;;;;;;;6203:4:2;829:11253:34;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6118:7:2;;;;;:::i;829:11253:34:-;;;;;;;;;;;;;;;;1206:9;829:11253;;;;-1:-1:-1;829:11253:34;;-1:-1:-1;;829:11253:34;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;:::i;:::-;3361:103:6;;;:::i;:::-;5588:17:34;;:::i;:::-;829:11253;;;;;5667:1;829:11253;;;;;;;1058:3;5645:64;5653:31;;;5645:64;:::i;:::-;5803:18;1206:9;5727;5719:55;5727:9;;:22;;5719:55;:::i;:::-;5803:18;:::i;:::-;829:11253;;;;;;;;;;;;;;5839:18;829:11253;;;;;;;;;5974:52;829:11253;;5966:85;829:11253;;;;5930:25;;829:11253;-1:-1:-1;;;;;829:11253:34;;;;;;;5930:25;;;;;;:::i;:::-;829:11253;5920:36;;829:11253;5667:1;829:11253;;;;;:::i;:::-;5974:52;:::i;:::-;5966:85;:::i;:::-;829:11253;;5839:18;829:11253;;;;;;;;5667:1;829:11253;;;;;;;;;;;;6149:11;6104:13;829:11253;;6104:13;:::i;:::-;829:11253;;;6137:10;6149:11;:::i;:::-;6171:17;829:11253;;;;6171:59;;;;;829:11253;;;;;;;;;;;;;;;6171:59;;829:11253;6171:59;;829:11253;6137:10;829:11253;;;;5667:1;829:11253;;;;6171:59;;;;;;;;829:11253;;;6137:10;-1:-1:-1;;;;;;;;;;;6245:31:34;;;5727:9;6291:21;6287:161;;829:11253;5667:1;-1:-1:-1;;;;;;;;;;;829:11253:34;;;6287:161;829:11253;;5727:9;829:11253;5727:9;;829:11253;;;;6137:10;;;;;6407:30;6137:10;;6344:49;;;;:::i;6407:30::-;6287:161;;;829:11253;-1:-1:-1;;;829:11253:34;;;;;;;6171:59;;;;:::i;:::-;829:11253;;6171:59;;;;829:11253;-1:-1:-1;;;829:11253:34;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;11374:21:34;11413:11;;829:11253;;11475:8;829:11253;;;;;;;;;-1:-1:-1;;;;;829:11253:34;11475:33;;;;:::i;:::-;;829:11253;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;3435:19:4;829:11253:34;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;3598:29:4;;3594:177;;829:11253:34;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;4269:5:4;829:11253:34;;;;;;;;;;;;;;;;;;;;;3594:177:4;1999:65;829:11253:34;;;;;-1:-1:-1;829:11253:34;;;-1:-1:-1;;;;;;3594:177:4;;829:11253:34;;;;;;;;;;;;;;2317:28;829:11253;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;829:11253:34;;-1:-1:-1;;829:11253:34;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;:::i;:::-;3361:103:6;;;:::i;:::-;6750:18:34;;:::i;:::-;829:11253;;;6809:69;1058:3;6817:20;829:11253;;;6817:20;:::i;6809:69::-;829:11253;6896:29;;829:11253;;1258:9;829:11253;;;;;;;;;;;6966:9;7245:86;7253:53;7052:18;6966:9;;;6958:65;6966:9;;:32;;6958:65;:::i;7052:18::-;829:11253;;;;;;;;;;;;;;;7088:19;829:11253;;7080:93;829:11253;7088:37;829:11253;;;;;7088:37;:::i;7080:93::-;829:11253;;;7209:25;;829:11253;-1:-1:-1;;;;;829:11253:34;;;;;;;7209:25;;;;;;:::i;:::-;829:11253;7199:36;;829:11253;7285:14;829:11253;;;;;:::i;7245:86::-;829:11253;;7088:19;829:11253;;;;;7342:38;829:11253;;;7342:38;:::i;:::-;829:11253;;7395:13;7410:10;;;;;;6966:9;;;;;7650:31;7646:181;;829:11253;-1:-1:-1;;;;;;;;;;;829:11253:34;;;7646:181;6966:9;;;7736:31;7786:30;6966:9;;7736:31;:::i;7786:30::-;7646:181;;;;7422:3;7490:11;7441:13;829:11253;;7441:13;:::i;:::-;829:11253;;;7478:10;7490:11;:::i;:::-;829:11253;7516:17;829:11253;;;;7516:59;;;;;829:11253;;;;;;;;;;;;;;;7516:59;;829:11253;7516:59;;829:11253;7478:10;829:11253;;;;;;;;;7516:59;;;;;;;;;;;7422:3;829:11253;;;;;7478:10;-1:-1:-1;;;;;;;;;;;7594:31:34;;;829:11253;7395:13;;7516:59;;;;:::i;:::-;829:11253;;7516:59;;;;;829:11253;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:41;829:11253;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;;:::i;:::-;11911:11:34;829:11253;-1:-1:-1;;;;;829:11253:34;;11911:42;;;;;829:11253;;;;;;;;;;;;;;;;11911:42;;829:11253;11911:42;;829:11253;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;829:11253:34;;;;;;:::i;:::-;;;16302:22:2;;;:::i;:::-;966:10:5;16452:18:2;;:35;;;829:11253:34;16452:69:2;;;829:11253:34;16448:142:2;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;16642:28:2;829:11253:34;;16642:28:2;829:11253:34;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;16448:142:2;829:11253:34;;-1:-1:-1;;;16548:27:2;;966:10:5;829:11253:34;16548:27:2;;829:11253:34;;;16548:27:2;16452:69;5126:27;;;;:::i;:::-;966:10:5;829:11253:34;;;;;;;;;;16491:30:2;16452:69;;:35;-1:-1:-1;;;;;;829:11253:34;;966:10:5;16474:13:2;;16452:35;;829:11253:34;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;4680:22:2;;;:::i;:::-;;829:11253:34;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;3361:103:6;;:::i;:::-;11147:17:34;829:11253;;;-1:-1:-1;;;;;829:11253:34;11147:34;;;;;829:11253;;;;;;;;;;;;11147:34;;;;;;;;;;829:11253;1372:1;-1:-1:-1;;;;;;;;;;;829:11253:34;;;11147:34;;;;:::i;829:11253::-;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2788:40:2;;;:104;;;;829:11253:34;2788:156:2;;;;829:11253:34;;;;;;;2788:156:2;-1:-1:-1;;;3068:41:4;;;-1:-1:-1;3068:81:4;;;;2788:156:2;;;;;3068:81:4;-1:-1:-1;;;1101:40:7;;-1:-1:-1;3068:81:4;;;2788:104:2;-1:-1:-1;;;2844:48:2;;;-1:-1:-1;2788:104:2;;829:11253:34;;;;;;;;-1:-1:-1;;829:11253:34;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;829:11253:34;;;;:::o;:::-;;;;-1:-1:-1;;;;;829:11253:34;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;829:11253:34;;;;;;:::o;:::-;;;;;;-1:-1:-1;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;:::o;:::-;-1:-1:-1;;;;;829:11253:34;;;;;;-1:-1:-1;;829:11253:34;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;829:11253:34;;;;;;:::o;:::-;;;-1:-1:-1;;829:11253:34;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;829:11253:34;;;;;;;1258:9;829:11253;;;;-1:-1:-1;;;;;829:11253:34;;;;;3225:11:2;829:11253:34;;;;;;:::o;:::-;-1:-1:-1;;;;;829:11253:34;;;;;17210:20:2;829:11253:34;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;1900:34;829:11253;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;1900:34;-1:-1:-1;829:11253:34;;;-1:-1:-1;829:11253:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;;-1:-1:-1;;829:11253:34;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;829:11253:34;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;829:11253:34;;;;;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;5204:578:2;;;-1:-1:-1;;;;;829:11253:34;;;;5298:16:2;;5294:87;;-1:-1:-1;829:11253:34;;;;6877:9:2;829:11253:34;;;;;;;;;;;;966:10:5;;10282:18:2;;10278:86;;;5204:578;10408:18;10736:15;10408:18;;;10404:258;;;;10736:15;:::i;:::-;829:11253:34;;10676:16:2;829:11253:34;;;;;;;;;;;;;-1:-1:-1;;;;;;829:11253:34;;;;;;;;;;10830:27:2;;829:11253:34;;10830:27:2;10950:38:34;;;5204:578:2;10946:110:34;;5204:578:2;829:11253:34;;;5671:21:2;;;;5667:109;;5204:578;;;;:::o;5667:109::-;829:11253:34;;;;5715:50:2;;;;;;;;;829:11253:34;;;;;;;;;5715:50:2;10946:110:34;829:11253;11004:17;829:11253;;11004:41;;;;;829:11253;;;;;;;;;11004:41;;;;;;829:11253;11004:41;;;;;;;;;;10946:110;;;;11004:41;;;;:::i;:::-;;;;;829:11253;;;;;;;;;;10950:38;;10676:16:2;10950:38:34;;10404:258:2;829:11253:34;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;-1:-1:-1;;;;;;829:11253:34;;;10615:17:2;;;:::i;:::-;829:11253:34;;-1:-1:-1;;829:11253:34;;;10736:15:2;:::i;10278:86::-;7651:127;;;10278:86;8328:39;8324:255;;10278:86;;;8324:255;8387:19;;;829:11253:34;;;;;8433:31:2;;;;;;;;;829:11253:34;8433:31:2;8383:186;829:11253:34;;-1:-1:-1;;;8510:44:2;;966:10:5;8510:44:2;;;829:11253:34;;;;;;;;;;8510:44:2;7651:127;966:10:5;;7689:16:2;;:52;;;;7651:127;7689:88;7651:127;7689:88;829:11253:34;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;966:10:5;829:11253:34;;;;;;7745:32:2;7651:127;;7689:52;5126:27;;;;:::i;:::-;966:10:5;829:11253:34;;;;;;;;;;7689:52:2;;5294:87;829:11253:34;;-1:-1:-1;;;5337:33:2;;5312:1;5337:33;;;829:11253:34;;;5337:33:2;9911:130:34;9985:15;829:11253;9985:19;;:49;;;9911:130;:::o;9985:49::-;829:11253;1058:3;-1:-1:-1;829:11253:34;10008:26;9911:130;:::o;9728:177::-;9800:13;829:11253;9800:17;;;:68;;;;9728:177;9800:98;;;;9728:177;:::o;9800:68::-;829:11253;;2271:10;829:11253;;;;;;;9821:15;:47;9800:68;;;9549:173;9620:12;829:11253;9620:16;;;:65;;;;:95;;;;9549:173;:::o;9620:65::-;829:11253;;2215:10;829:11253;;;;;;;9640:15;:45;9620:65;;;9402:141;9477:16;829:11253;9477:20;;:59;;;9402:141;:::o;9477:59::-;829:11253;1113:1;9501:13;829:11253;9501:35;9402:141;:::o;3405:215:0:-;-1:-1:-1;;;;;829:11253:34;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;829:11253:34;;-1:-1:-1;;;;;;829:11253:34;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;829:11253:34;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;829:11253:34;;;3534:31:0;3470:384:6;-1:-1:-1;;;;;;;;;;;1991:1:6;829:11253:34;;3670:20:6;3666:88;;1991:1;829:11253:34;;3470:384:6:o;3666:88::-;829:11253:34;;-1:-1:-1;;;3713:30:6;;;;;17556:241:2;-1:-1:-1;829:11253:34;;;6877:9:2;829:11253:34;;;;;;-1:-1:-1;;;;;829:11253:34;;17685:19:2;;17681:88;;17778:12;17556:241;:::o;17681:88::-;829:11253:34;;;;8433:31:2;;;;17727;;;;;829:11253:34;17727:31:2;2658:162:0;-1:-1:-1;;;;;;;;;;;829:11253:34;-1:-1:-1;;;;;829:11253:34;966:10:5;2717:23:0;2713:101;;2658:162::o;2713:101::-;829:11253:34;;-1:-1:-1;;;2763:40:0;;966:10:5;2763:40:0;;;829:11253:34;;;2763:40:0;9044:323:34;-1:-1:-1;;;;;829:11253:34;;;;;9122:212;;9350:10;;;;9044:323;:::o;9122:212::-;9184:55;829:11253;9184:16;829:11253;;;;;;;;;;;;;9184:55;;9221:10;9184:55;;;829:11253;;;;;9184:55;;;;;;;9143:1;9184:55;;;9122:212;829:11253;;;;9311:12;:::o;829:11253::-;;;-1:-1:-1;;;829:11253:34;;9184:55;;829:11253;;;;;;;;-1:-1:-1;;;829:11253:34;;;;;;;9184:55;;;;;;;;;;;;;;;:::i;:::-;;;829:11253;;;;;;;;;;;;;9184:55;;;;;;;-1:-1:-1;9184:55:34;;;829:11253;;;9143:1;829:11253;;;;;1902:154:29;;;2601:13;-1:-1:-1;2596:134:29;2634:3;829:11253:34;;2616:16:29;;;;;829:11253:34;;;;;;;;;605:59:28;-1:-1:-1;605:5:28;;;:59;:5;;;889:135;-1:-1:-1;889:135:28;;829:11253:34;889:135:28;-1:-1:-1;889:135:28;605:59;2634:3:29;829:11253:34;2601:13:29;;;605:59:28;889:135;;;829:11253:34;889:135:28;;;;;605:59;;2616:16:29;;;;2016:33;1902:154;:::o;11886:100:2:-;829:11253:34;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;829:11253:34;;;;;11275:16:2;;11271:87;;829:11253:34;;;6877:9:2;829:11253:34;;;;;;;;;;;10408:18:2;;;;10404:258;;;;11886:100;10736:15;;;:::i;:::-;10676:16;829:11253:34;;;;;;;;;;;;;;-1:-1:-1;;;;;829:11253:34;;;;;;;;;;;;10830:27:2;;;;;10950:38:34;;;;11886:100:2;10946:110:34;;11886:100:2;11433:96;;;;1173:14:19;1169:744;;11886:100:2;;;;;;;:::o;1169:744:19:-;829:11253:34;;;;;;;;;;;;;;;;1211:67:19;;;;966:10:5;1211:67:19;;;829:11253:34;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:19;;;;;;;;;;;;1169:744;-1:-1:-1;;1207:696:19;;1518:385;;;;;:::i;:::-;829:11253:34;;;;1568:18:19;;;829:11253:34;;-1:-1:-1;;;1672:39:19;;1211:67;1672:39;;829:11253:34;;;;;1672:39:19;1564:325;1758:113;;;;;1207:696;829:11253:34;;-1:-1:-1;;;;;;;829:11253:34;;;1325:51:19;1321:182;;1207:696;;1169:744;;;;;;;;1321:182;829:11253:34;;;;5337:33:2;;;;1445:39:19;;1211:67;1445:39;;829:11253:34;1445:39:19;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;829:11253:34;;;;;;-1:-1:-1;;;;;;829:11253:34;;;;;;1211:67:19;;;;;;;;;;;11433:96:2;829:11253:34;;-1:-1:-1;;;11487:31:2;;;;;829:11253:34;;;;;11487:31:2;10946:110:34;11004:17;829:11253;;11004:41;;;;;829:11253;;;;;;;;;11004:41;;;;;;829:11253;11004:41;;;;;;;;10946:110;;;;11004:41;;;;:::i;:::-;;;;;829:11253;;;;;;;;;11004:41;829:11253;;;10950:38;;10676:16:2;10950:38:34;;10404:258:2;829:11253:34;;;;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;;;;-1:-1:-1;;;;;;829:11253:34;;;10615:17:2;;;:::i;:::-;829:11253:34;;-1:-1:-1;;829:11253:34;;;10404:258:2;;11271:87;829:11253:34;;-1:-1:-1;;;11314:33:2;;;;;829:11253:34;;;;;11314:33:2;993:926:19;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;829:11253:34;;;;;;;;;;;;;;;;;;;;1211:67:19;;;;829:11253:34;1211:67:19;;;829:11253:34;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:19;1190:1;1211:67;1190:1;;1211:67;;;;;;;;;;;;1169:744;-1:-1:-1;;1207:696:19;;1518:385;;;:::i;:::-;829:11253:34;;;;1568:18:19;;;829:11253:34;;-1:-1:-1;;;1672:39:19;;1211:67;1672:39;;829:11253:34;;;;;1672:39:19;1564:325;1211:67;1758:113;;;;1207:696;-1:-1:-1;;;;;;829:11253:34;1325:51:19;1321:182;;1207:696;1169:744;;;;;;;1321:182;829:11253:34;;;;5337:33:2;;;;1445:39:19;;1211:67;1445:39;;829:11253:34;1445:39:19;1211:67;;;;;;;;;;;;;;;;;;;:::i;:::-;;;829:11253:34;;;;;;-1:-1:-1;;;;;;829:11253:34;;;;;;1211:67:19;;;;;;;;;-1:-1:-1;1211:67:19;;7082:141:1;829:11253:34;-1:-1:-1;;;;;;;;;;;829:11253:34;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;829:11253:34;;-1:-1:-1;;;7189:17:1;;;;"},"methodIdentifiers":{"FCFS_DURATION()":"4a7887c4","FCFS_MAX_PER_WALLET()":"b0660c77","FCFS_PRICE()":"2d632678","FOUNDER_MINT_AMOUNT()":"0ea58915","GTD_DURATION()":"5270c753","GTD_MAX_PER_WALLET()":"8539cb82","GTD_MINT_AMOUNT()":"6ac6319c","GTD_PRICE()":"40b55480","PUBLIC_MAX_PER_WALLET()":"74819ef7","PUBLIC_PRICE()":"611f3f10","ROYALTY_BASIS_POINTS()":"3c404a9c","TOTAL_SUPPLY()":"902d55a5","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimPoolRoyalties()":"d67f8d0b","claimRoyalties()":"069b7820","delegateRegistry()":"13bfffac","fcfsMerkleRoot()":"7bb23e3a","fcfsMintStart()":"eafd4891","founder()":"4d853ee5","founderMintStart()":"bfa41777","founderMinted()":"24659318","getApproved(uint256)":"081812fc","gtdMerkleRoot()":"ef39154b","gtdMintStart()":"d0e8f26e","initialize(bytes32,bytes32,address,address,address,address)":"89d29c4c","isApprovedForAll(address,address)":"e985e9c5","isFCFSMintActive()":"34f8f268","isFounderMintActive()":"9134d9c2","isGTDMintActive()":"7726c505","isPublicMintActive()":"2d6b6224","metadataLib()":"4e8117a9","mintFCFS(uint256,address,bytes32[])":"18919d62","mintFounder(uint256)":"b4bbb18f","mintGTD(address,bytes32[])":"3f2c0d6a","mintPublic(uint256)":"efd0cbf9","mintedPerWalletFCFS(address)":"7f0505f1","mintedPerWalletGTD(address)":"b32395ca","mintedPerWalletPublic(address)":"5c121bc9","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","prerevealNoiseBase64()":"ab13c089","publicMintStart()":"8cfec4c0","renounceOwnership()":"715018a6","reveal(uint256)":"c2ca0ac5","royaltiesContract()":"76c25e6f","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setMixedAudioURI(uint256,string)":"0fb51ac4","setPrerevealNoiseBase64(string)":"aa0f0d7f","setRevealed(bool)":"e0a80853","setWaveformURI(uint256,string)":"7d330cdd","startFCFSMint()":"a3eca3ed","startPublicMint()":"76c64c62","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalMinted()":"a2309ff8","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FCFS_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FCFS_MAX_PER_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FCFS_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FOUNDER_MINT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GTD_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GTD_MAX_PER_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GTD_MINT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GTD_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_MAX_PER_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROYALTY_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPoolRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegateRegistry\",\"outputs\":[{\"internalType\":\"contract IDelegateRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fcfsMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fcfsMintStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"founderMintStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"founderMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gtdMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gtdMintStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_gtdMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fcfsMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_metadataLib\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_royaltiesContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegateRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFCFSMintActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFounderMintActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGTDMintActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicMintActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadataLib\",\"outputs\":[{\"internalType\":\"contract ApeBeatsMetadataLib\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mintFCFS\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintFounder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mintGTD\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintPublic\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedPerWalletFCFS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedPerWalletGTD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedPerWalletPublic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prerevealNoiseBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMintStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltiesContract\",\"outputs\":[{\"internalType\":\"contract ApeBeatsRoyalties\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setMixedAudioURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_prerevealNoiseBase64\",\"type\":\"string\"}],\"name\":\"setPrerevealNoiseBase64\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_revealed\",\"type\":\"bool\"}],\"name\":\"setRevealed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setWaveformURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startFCFSMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPublicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ApeBeatsGenesis.sol\":\"ApeBeatsGenesis\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x315bcaebd3738cfe34ddd3525c8d3f1694afaabe0fc9f3857727497b19fb9473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58701c5c131b64e5a48e712c2b89b83a97ee5a2e720650f3941edbf1b90fe75\",\"dweb:/ipfs/QmW3bmSiiMqcTZLBRHFr2ztf9mriMuHrkqWbAv9WQhxFZ8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol\":{\"keccak256\":\"0xec1f7702e8329825b0b978aba95f01f5cb9bc734e056b3b0e5afd5a12fd479e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3873e423c3b062346f3a99e1e4026b7d7e480ae06858d5c4a040fefaeb73193\",\"dweb:/ipfs/QmNbKGspYZy8Xya9LJJP3z2gsAygHHzeLSu5pWe6G2QCG4\"]},\"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol\":{\"keccak256\":\"0xb5cd97fce008dbf4d908641008cf18ca4b26f5afe5d7a6fec2f79c03e6b1e99e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1af2e4cfae4d9bae3dc9b619572af646e7e6d26b4e2914a50486c9f63a8005b\",\"dweb:/ipfs/QmZmgcfzGkmcgjFd8UNqvhkc7bAkwcsrPiLGde5qZYCH5E\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ApeBeatsGenesis.sol\":{\"keccak256\":\"0xd0032fa77920521342834bd4408763cf7e9df7ca5fb2551c4390b39464b532e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3beb6cba03cbd5319f2a1def1b9065d718595fe0fe71f79e9a66fa7c5f832449\",\"dweb:/ipfs/QmTG822BqwvJJzU8G22htJDKxb4WFTSEfYEtAgdPn2vyJD\"]},\"contracts/ApeBeatsMetadataLib.sol\":{\"keccak256\":\"0x45aaa7f2aa950574e0274e60d05e7f72784a52f1c02627ddedf0c62957206bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13d84adfa490100395b4958f30a68fe6242e02c0d4166e4b21f8e0d453b4feed\",\"dweb:/ipfs/Qma6QdWAaGWMjuHStCcYJ2a8U2TfEtTDCK9HssVDsZ9YDf\"]},\"contracts/ApeBeatsRoyalties.sol\":{\"keccak256\":\"0x66560a4a3825b88101765f8e06960f9a20d44c88eb6754acc0cd0e3e849b8325\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f952ae3b309053c86efa0dbb4a9300bfdd6d18d48768227af473e3b72e7615b2\",\"dweb:/ipfs/QmcmVCUNj7g7yyLEvWgFJg3TshQeBxDndS3NBNjtyLVcYJ\"]}},\"version\":1}"},"IDelegateRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address","name":"vault","type":"address"}],"name":"checkDelegateForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkDelegateForAll(address,address)":"9c395bc2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"checkDelegateForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ApeBeatsGenesis.sol\":\"IDelegateRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x315bcaebd3738cfe34ddd3525c8d3f1694afaabe0fc9f3857727497b19fb9473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58701c5c131b64e5a48e712c2b89b83a97ee5a2e720650f3941edbf1b90fe75\",\"dweb:/ipfs/QmW3bmSiiMqcTZLBRHFr2ztf9mriMuHrkqWbAv9WQhxFZ8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol\":{\"keccak256\":\"0xec1f7702e8329825b0b978aba95f01f5cb9bc734e056b3b0e5afd5a12fd479e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3873e423c3b062346f3a99e1e4026b7d7e480ae06858d5c4a040fefaeb73193\",\"dweb:/ipfs/QmNbKGspYZy8Xya9LJJP3z2gsAygHHzeLSu5pWe6G2QCG4\"]},\"@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol\":{\"keccak256\":\"0xb5cd97fce008dbf4d908641008cf18ca4b26f5afe5d7a6fec2f79c03e6b1e99e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1af2e4cfae4d9bae3dc9b619572af646e7e6d26b4e2914a50486c9f63a8005b\",\"dweb:/ipfs/QmZmgcfzGkmcgjFd8UNqvhkc7bAkwcsrPiLGde5qZYCH5E\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ApeBeatsGenesis.sol\":{\"keccak256\":\"0xd0032fa77920521342834bd4408763cf7e9df7ca5fb2551c4390b39464b532e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3beb6cba03cbd5319f2a1def1b9065d718595fe0fe71f79e9a66fa7c5f832449\",\"dweb:/ipfs/QmTG822BqwvJJzU8G22htJDKxb4WFTSEfYEtAgdPn2vyJD\"]},\"contracts/ApeBeatsMetadataLib.sol\":{\"keccak256\":\"0x45aaa7f2aa950574e0274e60d05e7f72784a52f1c02627ddedf0c62957206bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13d84adfa490100395b4958f30a68fe6242e02c0d4166e4b21f8e0d453b4feed\",\"dweb:/ipfs/Qma6QdWAaGWMjuHStCcYJ2a8U2TfEtTDCK9HssVDsZ9YDf\"]},\"contracts/ApeBeatsRoyalties.sol\":{\"keccak256\":\"0x66560a4a3825b88101765f8e06960f9a20d44c88eb6754acc0cd0e3e849b8325\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f952ae3b309053c86efa0dbb4a9300bfdd6d18d48768227af473e3b72e7615b2\",\"dweb:/ipfs/QmcmVCUNj7g7yyLEvWgFJg3TshQeBxDndS3NBNjtyLVcYJ\"]}},\"version\":1}"}},"contracts/ApeBeatsMetadataLib.sol":{"ApeBeatsMetadataLib":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"WaveformURIUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"COLORS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bassLoops","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"drumLoops","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"fxLoops","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string[5]","name":"bassLoopsArg","type":"string[5]"},{"internalType":"string[5]","name":"drumLoopsArg","type":"string[5]"},{"internalType":"string[5]","name":"melodyLoopsArg","type":"string[5]"},{"internalType":"string[5]","name":"fxLoopsArg","type":"string[5]"},{"components":[{"internalType":"uint8","name":"bass","type":"uint8"},{"internalType":"uint8","name":"drums","type":"uint8"},{"internalType":"uint8","name":"melody","type":"uint8"},{"internalType":"uint8","name":"fx","type":"uint8"},{"internalType":"uint8","name":"colorWave","type":"uint8"},{"internalType":"uint8","name":"colorBg","type":"uint8"}],"internalType":"struct ApeBeatsMetadataLib.WaveData","name":"data","type":"tuple"},{"internalType":"uint256","name":"rarity","type":"uint256"},{"internalType":"string","name":"mixedAudioURI","type":"string"},{"internalType":"string","name":"waveformURI","type":"string"},{"internalType":"string[11]","name":"colors","type":"string[11]"}],"name":"getRevealedURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"prerevealNoiseBase64","type":"string"},{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"getTokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"melodyLoops","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"mixedAudioURIs","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rarityScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"reveal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"setMixedAudioURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_revealed","type":"bool"}],"name":"setRevealed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"uri","type":"string"}],"name":"setWaveformURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"waveData","outputs":[{"internalType":"uint8","name":"bass","type":"uint8"},{"internalType":"uint8","name":"drums","type":"uint8"},{"internalType":"uint8","name":"melody","type":"uint8"},{"internalType":"uint8","name":"fx","type":"uint8"},{"internalType":"uint8","name":"colorWave","type":"uint8"},{"internalType":"uint8","name":"colorBg","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"waveformURIs","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":934,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x3A1 JUMPI CALLER ISZERO PUSH3 0x38B JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH2 0x160 DUP3 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR PUSH3 0x377 JUMPI PUSH1 0x40 MSTORE PUSH3 0x7E PUSH3 0x3A6 JUMP JUMPDEST SWAP2 PUSH1 0x7 DUP1 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH7 0x11A11CA3192323 PUSH1 0xC9 SHL DUP6 DUP3 ADD MSTORE DUP3 MSTORE PUSH3 0xA2 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x2346464437303 PUSH1 0xCC SHL DUP6 DUP3 ADD MSTORE DUP5 DUP4 ADD MSTORE PUSH3 0xC2 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x2343304330433 PUSH1 0xCC SHL DUP6 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0xE3 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x11A1A21BA31999 PUSH1 0xC9 SHL DUP6 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x104 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x5261696E626F77 PUSH1 0xC8 SHL DUP6 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x125 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x2330303030303 PUSH1 0xCC SHL DUP6 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH3 0x146 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x2346463030303 PUSH1 0xCC SHL DUP6 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH3 0x167 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x11981818182323 PUSH1 0xC9 SHL DUP6 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH3 0x188 PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x2330304646303 PUSH1 0xCC SHL DUP6 DUP3 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE PUSH3 0x1AA PUSH3 0x3A6 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH7 0x2338303030383 PUSH1 0xCC SHL DUP6 DUP3 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE PUSH3 0x1CC PUSH3 0x3A6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH7 0x2346464135303 PUSH1 0xCC SHL DUP5 DUP3 ADD MSTORE PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x15 SWAP3 DUP3 SWAP2 JUMPDEST PUSH1 0xB DUP4 LT PUSH3 0x203 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1AF7 SWAP1 DUP2 PUSH3 0x3DD DUP3 CODECOPY RETURN JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP2 DUP8 DUP4 GT PUSH3 0x363 JUMPI DUP7 SLOAD PUSH1 0x1 SWAP3 DUP4 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x358 JUMPI JUMPDEST DUP7 DUP4 LT EQ PUSH3 0x344 JUMPI SWAP1 DUP6 SWAP3 SWAP2 PUSH1 0x1F SWAP2 DUP3 DUP2 GT PUSH3 0x2EB JUMPI JUMPDEST POP DUP4 SWAP2 DUP7 GT PUSH1 0x1 EQ PUSH3 0x283 JUMPI PUSH1 0x1 SWAP6 SWAP2 DUP10 SWAP2 DUP4 PUSH3 0x277 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP9 SSTORE JUMPDEST ADD SWAP6 ADD SWAP3 ADD SWAP2 SWAP4 PUSH3 0x1EA JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH3 0x256 JUMP JUMPDEST DUP10 DUP10 MSTORE DUP4 DUP10 KECCAK256 SWAP6 SWAP2 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP11 JUMPDEST DUP2 DUP2 LT PUSH3 0x2D4 JUMPI POP SWAP2 PUSH1 0x1 SWAP8 SWAP2 DUP5 DUP9 SWAP6 SWAP5 LT PUSH3 0x2BA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP9 SSTORE PUSH3 0x26A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH3 0x2AC JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP10 SSTORE SWAP8 DUP8 ADD SWAP8 DUP10 SWAP7 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x293 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP DUP10 DUP10 MSTORE DUP7 DUP10 KECCAK256 PUSH1 0x5 DUP5 DUP1 DUP10 ADD DUP3 SHR DUP4 ADD SWAP4 DUP11 DUP11 LT PUSH3 0x33A JUMPI JUMPDEST SWAP2 DUP11 SWAP8 SWAP7 DUP10 SWAP4 SWAP7 SWAP6 SWAP5 SWAP3 SWAP7 ADD SWAP1 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x32B JUMPI POP POP PUSH3 0x23C JUMP JUMPDEST DUP12 DUP2 SSTORE DUP10 SWAP7 POP DUP8 SWAP2 ADD PUSH3 0x31B JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH3 0x30A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x223 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x3C6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH2 0x100 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AAFB61 EQ PUSH2 0xAE9 JUMPI DUP1 PUSH4 0xFB51AC4 EQ PUSH2 0x99C JUMPI DUP1 PUSH4 0x1E4F8BEB EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0x32DBD609 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0x4DFA177F EQ PUSH2 0x8E1 JUMPI DUP1 PUSH4 0x51830227 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0x5AC93A0A EQ PUSH2 0x890 JUMPI DUP1 PUSH4 0x6AD81C74 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0x7D330CDD EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x857A6F5B EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xA5573BD0 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xAB95081D EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xAC577140 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xBFB70E04 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xC0AA14B6 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE0A80853 EQ PUSH2 0x182 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0x17A JUMPI PUSH2 0x123 PUSH2 0x17F6 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x164 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B9 JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1B9 JUMPI PUSH2 0x1A8 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0x20 SLOAD AND SWAP2 AND OR PUSH1 0x20 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI DUP2 PUSH2 0x1F2 SWAP4 PUSH2 0x1E7 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC38 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1B9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B9 JUMPI DUP3 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3CA JUMPI PUSH2 0x234 SWAP1 PUSH2 0x22D PUSH2 0x17F6 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x20 SWAP1 PUSH2 0x245 DUP2 DUP4 SLOAD AND PUSH2 0x10BD JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x22 DUP3 MSTORE PUSH2 0x258 DUP4 DUP7 KECCAK256 SLOAD PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x394 JUMPI DUP3 MLOAD DUP3 DUP2 ADD SWAP1 TIMESTAMP DUP3 MSTORE DUP6 DUP6 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x381 JUMPI SWAP1 DUP3 SWAP2 PUSH1 0x64 SWAP5 SWAP4 DUP8 MSTORE DUP2 MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0x2A5 DUP4 PUSH2 0xB41 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP6 MOD AND DUP4 MSTORE PUSH1 0xA0 DUP3 ADD SWAP2 DUP2 PUSH1 0x5 DUP1 DUP8 DIV MOD AND DUP4 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 PUSH1 0x5 PUSH1 0x19 DUP9 DIV MOD AND DUP2 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 DUP4 PUSH1 0x5 PUSH1 0x7D DUP10 DIV MOD AND DUP3 MSTORE PUSH2 0x120 PUSH2 0x100 DUP5 ADD SWAP4 DUP6 PUSH1 0xB PUSH2 0x271 DUP12 DIV MOD AND DUP6 MSTORE ADD SWAP4 DUP1 PUSH1 0xB PUSH2 0x1ADB DUP11 DIV MOD AND DUP6 MSTORE DUP12 DUP14 MSTORE PUSH1 0x21 DUP11 MSTORE DUP11 DUP14 KECCAK256 SWAP7 MLOAD AND PUSH6 0xFF0000000000 PUSH5 0xFF00000000 PUSH4 0xFF000000 PUSH3 0xFF0000 PUSH2 0xFF00 DUP12 SLOAD SWAP11 MLOAD PUSH1 0x8 SHL AND SWAP6 MLOAD PUSH1 0x10 SHL AND SWAP6 MLOAD PUSH1 0x18 SHL AND SWAP6 MLOAD DUP13 SHL AND SWAP6 MLOAD PUSH1 0x28 SHL AND SWAP6 PUSH6 0xFFFFFFFFFFFF NOT AND OR OR OR OR OR OR SWAP1 SSTORE MOD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x36E JUMPI DUP5 MSTORE PUSH1 0x24 SWAP1 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C995D99585B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x58E JUMPI PUSH2 0x1E0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x58E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x17E JUMPI PUSH2 0x402 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0x41A SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x17A JUMPI PUSH2 0x431 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x448 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP1 PUSH1 0xC0 CALLDATASIZE PUSH1 0xA3 NOT ADD SLT PUSH2 0x5B0 JUMPI DUP7 MLOAD SWAP3 PUSH2 0x461 DUP5 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0xFF SWAP6 PUSH1 0xA4 CALLDATALOAD DUP8 DUP2 AND DUP2 SUB PUSH2 0x5AC JUMPI DUP6 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP7 DUP1 DUP9 AND DUP9 SUB PUSH2 0x5AC JUMPI PUSH1 0x20 SWAP8 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xE4 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x5A8 JUMPI DUP11 DUP8 ADD MSTORE PUSH2 0x104 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x5A8 JUMPI PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x124 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x5A8 JUMPI PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x144 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5AC JUMPI PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x164 PUSH2 0x184 CALLDATALOAD DUP12 DUP2 GT PUSH2 0x5A8 JUMPI PUSH2 0x4E8 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP8 PUSH2 0x1A4 CALLDATALOAD DUP13 DUP2 GT PUSH2 0x5A4 JUMPI PUSH2 0x501 SWAP1 CALLDATASIZE SWAP1 DUP11 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP10 DUP13 PUSH2 0x1C4 CALLDATALOAD SWAP14 DUP15 GT PUSH2 0x1B9 JUMPI CALLDATASIZE PUSH1 0x23 DUP16 ADD SLT ISZERO PUSH2 0x1B9 JUMPI DUP13 MLOAD SWAP14 DUP15 PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x591 JUMPI DUP16 SWAP1 DUP16 MSTORE SWAP2 DUP6 DUP3 ADD SWAP4 CALLDATASIZE DUP6 GT PUSH2 0x58E JUMPI DUP3 DUP14 ADD SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x567 JUMPI POP POP POP POP POP PUSH2 0x1F2 DUP13 PUSH2 0x1E7 DUP16 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 CALLDATALOAD SWAP6 CALLDATALOAD PUSH2 0x1135 JUMP JUMPDEST DUP5 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x17E JUMPI DUP8 SWAP2 DUP16 DUP4 SWAP3 PUSH2 0x583 SWAP2 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0xBC9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP5 ADD SWAP4 PUSH2 0x542 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 DUP13 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0xB ADD PUSH2 0xCD0 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x24 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1B9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B9 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0xB DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x15 ADD PUSH2 0xCD0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x17E JUMPI PUSH2 0x66F CALLDATASIZE PUSH2 0xC64 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x67A PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x68A PUSH1 0xFF DUP4 SLOAD AND PUSH2 0x10BD JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x23 DUP3 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x7F5 JUMPI POP PUSH2 0x6B1 DUP4 SLOAD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x7B2 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x728 JUMPI POP SWAP2 DUP2 PUSH2 0x717 SWAP5 SWAP3 PUSH32 0x77F0150FB3B30F6451ACDCCF70CD397383911429734276985D2B689849B00C2D SWAP7 SWAP5 DUP10 SWAP2 PUSH2 0x71D JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC38 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 POP DUP5 ADD MLOAD CODESIZE PUSH2 0x6F9 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND DUP5 DUP10 MSTORE DUP3 DUP10 KECCAK256 SWAP3 DUP10 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x79A JUMPI POP POP SWAP3 PUSH32 0x77F0150FB3B30F6451ACDCCF70CD397383911429734276985D2B689849B00C2D SWAP7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH2 0x717 SWAP9 SWAP7 LT PUSH2 0x781 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x70D JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x775 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x738 JUMP JUMPDEST DUP4 DUP9 MSTORE DUP2 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x7EB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x7E0 JUMPI POP PUSH2 0x6BA JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x7CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x58E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x58E JUMPI PUSH2 0x821 PUSH2 0x17F6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x1 ADD PUSH2 0xCD0 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x6 ADD PUSH2 0xCD0 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1B9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF DUP3 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x10 ADD PUSH2 0xCD0 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0xC0 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE KECCAK256 SLOAD PUSH1 0xFF SWAP1 DUP3 MLOAD SWAP3 DUP3 DUP3 AND DUP5 MSTORE DUP3 DUP3 PUSH1 0x8 SHR AND PUSH1 0x20 DUP6 ADD MSTORE DUP3 DUP3 PUSH1 0x10 SHR AND SWAP1 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0x20 SHR AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x28 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI DUP2 PUSH2 0x1F2 SWAP4 PUSH2 0x1E7 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x23 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xCD0 JUMP JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1B9 JUMPI PUSH2 0x9AD CALLDATASIZE PUSH2 0xC64 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x9B8 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH2 0x9C8 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x10BD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE DUP4 KECCAK256 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xAD6 JUMPI POP PUSH2 0x9ED DUP4 SLOAD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA93 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xA31 JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xA26 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0xA0F JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xA7B JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xA62 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0xA57 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xA42 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xACC JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xAC1 JUMPI POP PUSH2 0x9F6 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0xB1A SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH2 0x58E JUMPI POP SWAP3 PUSH2 0x1E7 SWAP2 PUSH2 0x1F2 SWAP5 CALLDATALOAD PUSH2 0xE1B JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB5C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xC10 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xBE0 DUP3 PUSH2 0xBAE JUMP JUMPDEST SWAP3 PUSH2 0xBEE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB8D JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xC10 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xC28 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC58 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xC10 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC10 JUMPI PUSH2 0xC93 SWAP2 PUSH1 0x4 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xCC6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCB0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0xCE3 DUP2 PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xD53 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD14 JUMPI JUMPDEST POP POP POP PUSH2 0xD12 SWAP3 POP SUB DUP4 PUSH2 0xB8D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0xD3B JUMPI POP POP PUSH2 0xD12 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xD03 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xD12 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xD03 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD8E DUP4 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP4 DUP4 DUP4 GT PUSH2 0xC10 JUMPI DUP2 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xDAD JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC10 JUMPI PUSH1 0x20 SWAP2 PUSH2 0xDCD DUP8 DUP5 SWAP4 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xD9E JUMP JUMPDEST ISZERO PUSH2 0xDDF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0xE31 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x20 SLOAD AND ISZERO PUSH2 0x10B9 JUMPI POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH2 0xE54 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x1080 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x23 PUSH1 0x20 MSTORE PUSH2 0xE70 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x1044 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x23 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xEB1 DUP6 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0x1027 JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP4 PUSH2 0xECF DUP6 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0x100A JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0xEEC DUP2 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP3 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0xFED JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0xF0A DUP4 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP5 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0xFD0 JUMPI POP POP POP PUSH2 0xF71 PUSH2 0xF77 SWAP2 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP7 PUSH2 0xF31 DUP9 PUSH2 0xB41 JUMP JUMPDEST SLOAD DUP2 DUP2 AND DUP9 MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND PUSH1 0x20 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0x10 SHR AND PUSH1 0x40 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0x20 SHR AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x28 SHR AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0xCD0 JUMP JUMPDEST SWAP6 PUSH2 0xCD0 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP8 PUSH2 0x160 DUP10 ADD DUP10 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE PUSH1 0x15 SWAP11 PUSH1 0x0 DUP11 JUMPDEST PUSH1 0xB DUP3 LT PUSH2 0xFB2 JUMPI POP POP PUSH2 0xC93 SWAP11 SWAP12 POP PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP16 SWAP3 PUSH2 0xFC2 DUP4 SWAP5 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP15 ADD SWAP2 ADD SWAP1 SWAP13 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xFDF DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xFFC DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x1019 DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x1036 DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15D85D99599BDC9B48155492481B9BDD081CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105D591A5BC8155492481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP JUMP JUMPDEST ISZERO PUSH2 0x10C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x52657665616C206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0xB DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP5 SWAP4 SWAP7 SWAP9 SWAP8 SWAP2 SWAP9 PUSH1 0xE0 MSTORE PUSH2 0x114A SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0xA0 MSTORE DUP3 MLOAD PUSH1 0xFF AND PUSH2 0x115C SWAP1 DUP4 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP7 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1170 SWAP1 DUP11 PUSH2 0x10FD JUMP JUMPDEST MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1183 SWAP1 DUP8 PUSH2 0x10FD JUMP JUMPDEST MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1196 SWAP1 DUP11 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11AA SWAP1 DUP6 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP3 PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11BE SWAP1 DUP7 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP5 PUSH2 0x11C9 DUP12 PUSH2 0x1854 JUMP JUMPDEST SWAP8 DUP10 MLOAD PUSH1 0xFF AND PUSH2 0x11D8 SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP14 PUSH1 0x20 DUP11 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11EB SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP10 PUSH1 0x40 DUP11 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11FE SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP12 PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1211 SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD PUSH1 0x80 MSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1227 SWAP1 DUP3 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP9 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1239 SWAP2 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP10 PUSH2 0x1244 SWAP1 PUSH2 0x1854 JUMP JUMPDEST SWAP12 PUSH1 0x40 MLOAD PUSH1 0xC0 MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 ADD PUSH32 0x7B226E616D65223A22417065426561747347656E657369732023000000000000 SWAP1 MSTORE PUSH1 0xA0 MLOAD MLOAD PUSH1 0xC0 MLOAD PUSH1 0x3A ADD DUP2 PUSH1 0xA0 MLOAD PUSH1 0x20 ADD SWAP2 PUSH2 0x128F SWAP3 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0xC0 MLOAD ADD SWAP7 PUSH2 0x88B PUSH1 0xF2 SHL SWAP8 DUP9 PUSH1 0x3A DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD PUSH32 0x226465736372697074696F6E223A22556E6971756520617564696F2D76697375 SWAP1 MSTORE PUSH8 0x185B08139195088B PUSH1 0xC2 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH9 0x1134B6B0B3B2911D11 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x6D DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1301 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP8 PUSH1 0x6D DUP3 ADD MSTORE PUSH17 0x1130B734B6B0BA34B7B72FBAB936111D11 PUSH1 0x79 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH1 0xE0 MLOAD MLOAD SWAP1 PUSH1 0x80 DUP2 ADD DUP3 PUSH1 0xE0 MLOAD PUSH1 0x20 ADD SWAP2 PUSH2 0x133C SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD PUSH1 0x80 DUP2 ADD DUP9 SWAP1 MSTORE PUSH16 0x226F6E636861696E5F64617461223A7B PUSH1 0x80 SHL PUSH1 0x82 DUP3 ADD MSTORE PUSH8 0x113130B9B9911D11 PUSH1 0xC1 SHL PUSH1 0x92 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 PUSH2 0x1384 SWAP1 DUP4 SWAP1 PUSH1 0x9A DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD DUP7 PUSH1 0x9A DUP3 ADD MSTORE PUSH9 0x1132393AB6B9911D11 PUSH1 0xB9 SHL PUSH1 0x9C DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xA5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13B3 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP6 PUSH1 0xA5 DUP3 ADD MSTORE PUSH10 0x1136B2B637B23C911D11 PUSH1 0xB1 SHL PUSH1 0xA7 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xB1 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E3 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP5 PUSH1 0xB1 DUP3 ADD MSTORE PUSH6 0x11333C111D11 PUSH1 0xD1 SHL PUSH1 0xB3 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xB9 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x140F SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP4 PUSH1 0xB9 DUP3 ADD MSTORE PUSH14 0x113BB0BB32AFB1B7B637B9111D11 PUSH1 0x91 SHL PUSH1 0xBB DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xC9 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1443 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP3 PUSH1 0xC9 DUP3 ADD MSTORE PUSH12 0x113133AFB1B7B637B9111D11 PUSH1 0xA1 SHL PUSH1 0xCB DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xD7 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1475 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD SWAP1 PUSH1 0xD7 DUP3 ADD MSTORE PUSH10 0x113930B934BA3C911D11 PUSH1 0xB1 SHL PUSH1 0xD9 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xE3 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A5 SWAP3 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0xE3 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x1F4B PUSH1 0xF2 SHL PUSH1 0xE4 DUP3 ADD MSTORE PUSH32 0x2261747472696275746573223A5B7B2274726169745F74797065223A22426173 PUSH1 0xE6 DUP3 ADD MSTORE PUSH12 0x399116113B30B63AB2911D11 PUSH1 0xA1 SHL PUSH2 0x106 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0x112 SWAP8 SWAP1 SWAP2 SWAP1 PUSH2 0x1516 SWAP1 DUP4 SWAP1 DUP11 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP6 PUSH3 0x89F4B PUSH1 0xEA SHL SWAP5 DUP6 DUP1 SWAP5 DUP2 DUP1 SWAP5 DUP12 ADD MSTORE PUSH2 0x115 DUP11 ADD PUSH32 0x7B2274726169745F74797065223A224472756D73222C2276616C7565223A2200 SWAP1 MSTORE PUSH2 0x134 SWAP10 DUP2 MLOAD SWAP2 DUP3 DUP13 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x156A SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD SWAP9 DUP10 ADD MSTORE PUSH2 0x137 DUP9 ADD PUSH32 0x7B2274726169745F74797065223A224D656C6F6479222C2276616C7565223A22 SWAP1 MSTORE PUSH2 0x157 SWAP8 DUP2 MLOAD SWAP2 DUP3 DUP11 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15B0 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A224658222C2276616C7565223A2200000000 PUSH2 0x15A DUP8 ADD MSTORE PUSH1 0x80 MLOAD DUP1 MLOAD PUSH2 0x176 SWAP8 DUP5 SWAP3 PUSH2 0x15F9 SWAP1 DUP4 SWAP1 DUP12 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A225761766520436F6C6F72222C2276616C75 PUSH2 0x179 DUP8 ADD MSTORE PUSH4 0x32911D11 PUSH1 0xE1 SHL PUSH2 0x199 DUP8 ADD MSTORE DUP1 MLOAD PUSH2 0x19D SWAP7 SWAP1 SWAP2 PUSH2 0x164D SWAP1 DUP4 SWAP1 DUP10 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP5 DUP6 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A224261636B67726F756E6420436F6C6F7222 PUSH2 0x1A0 DUP6 ADD MSTORE PUSH10 0x16113B30B63AB2911D11 PUSH1 0xB1 SHL PUSH2 0x1C0 DUP6 ADD MSTORE DUP1 MLOAD PUSH2 0x1CA SWAP5 SWAP1 SWAP2 PUSH2 0x16A7 SWAP1 DUP4 SWAP1 DUP8 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP3 DUP4 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A225261726974792053636F7265222C227661 PUSH2 0x1CD DUP4 ADD MSTORE PUSH6 0x363AB2911D11 PUSH1 0xD1 SHL PUSH2 0x1ED DUP4 ADD MSTORE DUP1 MLOAD PUSH2 0x1F3 SWAP3 SWAP1 SWAP2 PUSH2 0x16FD SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP1 PUSH4 0x227D5D7D PUSH1 0xE0 SHL SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 SUB PUSH2 0x1D7 DUP2 ADD PUSH1 0xC0 MLOAD MSTORE PUSH2 0x1F7 ADD PUSH1 0xC0 MLOAD SWAP1 PUSH2 0x172A SWAP2 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0xB5C JUMPI PUSH2 0x17A3 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x1998 JUMP JUMPDEST PUSH2 0xC93 PUSH1 0x3D PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x17E6 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xC15 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x180A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x182C DUP3 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x1839 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xB8D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x184A PUSH1 0x1F NOT SWAP2 PUSH2 0xBAE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x198A JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x197B JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x196C JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x195D JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x194E JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x193E JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x1934 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x18EC PUSH1 0x1 DUP8 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x18FE JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x192F JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x18F2 JUMP JUMPDEST PUSH2 0x18F7 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x18DA JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x187D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD ISZERO PUSH2 0x1A9B JUMPI DUP1 MLOAD SWAP3 PUSH1 0x2 SWAP2 PUSH1 0x2 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x1A85 JUMPI PUSH1 0x3 SWAP5 DUP6 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A85 JUMPI PUSH2 0x19D8 SWAP1 PUSH1 0x2 SWAP7 SWAP5 SWAP7 SHL PUSH2 0x1822 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP8 PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP11 DUP2 LT PUSH2 0x1A38 JUMPI POP POP POP POP PUSH1 0x3 SWAP4 SWAP5 SWAP6 SWAP7 POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x1A25 JUMPI PUSH1 0x2 EQ PUSH2 0x1A1A JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x4 SWAP2 SWAP12 SWAP9 SWAP12 ADD SWAP11 DUP12 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP8 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP8 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP8 ADD ADD MLOAD DUP8 DUP6 ADD MSTORE8 AND DUP5 ADD ADD MLOAD DUP6 DUP3 ADD MSTORE8 ADD SWAP7 SWAP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SHL DUP16 RETURNDATACOPY LOG1 PUSH5 0xFEC6D409E2 EXP 0x2B 0xFC CALLDATASIZE MSTORE CODESIZE MULMOD MLOAD PUSH15 0x445052CD5269CD6EA846579564736F PUSH13 0x63430008180033000000000000 ","sourceMap":"215:4800:35:-:0;;;;;;;1059:10;1273:26:8;1269:95;;1297:1;215:4800:35;;1059:10;-1:-1:-1;;;;;;215:4800:35;;;;;;1059:10;-1:-1:-1;;;;;215:4800:35;3052:40:8;1297:1;;3052:40;215:4800:35;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;;606:121;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;;;:::i;:::-;;;;-1:-1:-1;;;215:4800:35;;;;606:121;;;215:4800;606:121;215:4800;;;;606:121;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;215:4800:35;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;1269:95:8;-1:-1:-1;;;1322:31:8;;1297:1;1322:31;;;215:4800:35;;;1322:31:8;215:4800:35;;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_string":{"entryPoint":3445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":3017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_string":{"entryPoint":3172,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_string":{"entryPoint":3128,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":6178,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":2990,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3280,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3093,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3222,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2957,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_16332":{"entryPoint":2881,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_16373":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":6134,"id":2225,"parameterSlots":0,"returnSlots":0},"fun_encode":{"entryPoint":6552,"id":3438,"parameterSlots":2,"returnSlots":1},"fun_getRevealedURI":{"entryPoint":4405,"id":11327,"parameterSlots":10,"returnSlots":1},"fun_getTokenURI":{"entryPoint":3611,"id":11402,"parameterSlots":3,"returnSlots":1},"fun_toString":{"entryPoint":6228,"id":3850,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_array_string":{"entryPoint":4349,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_string":{"entryPoint":4388,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_547b":{"entryPoint":3544,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eb09":{"entryPoint":4285,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6040610100815260048036101561001557600080fd5b600091823560e01c806309aafb6114610ae95780630fb51ac41461099c5780631e4f8beb1461097257806332dbd6091461090f5780634dfa177f146108e157806351830227146108be5780635ac93a0a146108905780636ad81c7414610862578063715018a6146108085780637d330cdd14610660578063857a6f5b146106325780638da5cb5b1461060a578063a5573bd0146105e2578063ab95081d146105b4578063ac577140146103ce578063bfb70e04146101f6578063c0aa14b6146101bd578063e0a80853146101825763f2fde38b146100f257600080fd5b3461017e57602036600319011261017e576001600160a01b0382358181169391929084900361017a576101236117f6565b831561016457505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b5050346101b95760203660031901126101b957358015158091036101b9576101a86117f6565b60ff80196020541691161760205580f35b5080fd5b50903461017e57602036600319011261017e57816101f2936101e792358152602260205220610cd0565b905191829182610c38565b0390f35b508290346101b957806003193601126101b9578235906024356001600160a01b038116908190036103ca576102349061022d6117f6565b1515610dd8565b60ff602090610245818354166110bd565b8385526022825261025883862054610c96565b6103945782518281019042825285858201523360601b60608201526054815260808101918183106001600160401b038411176103815790829160649493875281519020926102a583610b41565b806005850616835260a08201918160058087040616835260c08101826005601988040616815260e0820190836005607d89040616825261012061010084019385600b6102718b0406168552019380600b611adb8a04061685528b8d5260218a528a8d2096511665ff000000000064ff0000000063ff00000062ff000061ff008b549a5160081b16955160101b16955160181b1695518c1b16955160281b169565ffffffffffff1916171717171717905506926001840180941161036e5784526024905282205580f35b634e487b7160e01b855260118652602485fd5b634e487b7160e01b885260418952602488fd5b825162461bcd60e51b8152808701839052601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b8380fd5b50823461058e576101e036600319011261058e576001600160401b039260243584811161017e576104029036908301610d75565b906044358581116103ca5761041a9036908301610d75565b60643586811161017a576104319036908401610d75565b6084358781116105b0576104489036908501610d75565b9060c03660a31901126105b05786519261046184610b41565b60ff9560a43587811681036105ac57855260c4359680881688036105ac57602097602087015260e43581811681036105a8578a8701526101043581811681036105a85760608701526101243581811681036105a85760808701526101443590811681036105ac5760a0860152610164610184358b81116105a8576104e89036908901610bc9565b976101a4358c81116105a4576105019036908a01610bc9565b998c6101c4359d8e116101b9573660238f0112156101b9578c519d8e610160810190811083821117610591578f908f52918582019336851161058e57828d01935b8585106105675750505050506101f28c6101e78f8e8e8e8e8e8e8e8e8e359535611135565b843583811161017e5787918f8392610583913691890101610bc9565b815201940193610542565b80fd5b634e487b7160e01b845260418c52602484fd5b8a80fd5b8980fd5b8880fd5b8580fd5b50903461017e57602036600319011261017e573591600583101561058e57506101e76101f292600b01610cd0565b50903461017e57602036600319011261017e5760209282913581526024845220549051908152f35b8382346101b957816003193601126101b957905490516001600160a01b039091168152602090f35b50903461017e57602036600319011261017e573591600b83101561058e57506101e76101f292601501610cd0565b503461017e5761066f36610c64565b91909261067a6117f6565b60209061068a60ff8354166110bd565b84865260238252828620918451916001600160401b0383116107f557506106b18354610c96565b601f81116107b2575b5080601f83116001146107285750918161071794927f77f0150fb3b30f6451acdccf70cd397383911429734276985d2b689849b00c2d9694899161071d575b508160011b916000199060031b1c19161790555b5191829182610c38565b0390a280f35b9050840151386106f9565b90601f1983168489528289209289905b82821061079a575050927f77f0150fb3b30f6451acdccf70cd397383911429734276985d2b689849b00c2d96949260019282610717989610610781575b5050811b01905561070d565b86015160001960f88460031b161c191690553880610775565b80600185968294968c01518155019501930190610738565b838852818820601f840160051c8101918385106107eb575b601f0160051c01905b8181106107e057506106ba565b8881556001016107d3565b90915081906107ca565b634e487b7160e01b885260419052602487fd5b833461058e578060031936011261058e576108216117f6565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50903461017e57602036600319011261017e573591600583101561058e57506101e76101f292600101610cd0565b50903461017e57602036600319011261017e573591600583101561058e57506101e76101f292600601610cd0565b8382346101b957816003193601126101b95760209060ff82541690519015158152f35b50903461017e57602036600319011261017e573591600583101561058e57506101e76101f292601001610cd0565b50903461017e57602036600319011261017e5760c09282913581526021602052205460ff908251928282168452828260081c166020850152828260101c1690840152818160181c166060840152818160201c16608084015260281c1660a0820152f35b50903461017e57602036600319011261017e57816101f2936101e792358152602360205220610cd0565b508290346101b9576109ad36610c64565b9390916109b86117f6565b6020926109c860ff8554166110bd565b8452602283528320918451916001600160401b038311610ad657506109ed8354610c96565b601f8111610a93575b5080601f8311600114610a315750839482939492610a26575b50508160011b916000199060031b1c191617905580f35b015190508480610a0f565b90601f198316958486528286209286905b888210610a7b57505083600195969710610a62575b505050811b01905580f35b015160001960f88460031b161c19169055848080610a57565b80600185968294968601518155019501930190610a42565b838552818520601f840160051c810191838510610acc575b601f0160051c01905b818110610ac157506109f6565b858155600101610ab4565b9091508190610aab565b634e487b7160e01b855260419052602484fd5b50903461017e57606036600319011261017e576024356001600160401b0381116103ca57610b1a9036908301610bc9565b604435939091906001600160a01b038516850361058e5750926101e7916101f29435610e1b565b60c081019081106001600160401b03821117610b5c57604052565b634e487b7160e01b600052604160045260246000fd5b60a081019081106001600160401b03821117610b5c57604052565b90601f801991011681019081106001600160401b03821117610b5c57604052565b6001600160401b038111610b5c57601f01601f191660200190565b81601f82011215610c1057803590610be082610bae565b92610bee6040519485610b8d565b82845260208383010111610c1057816000926020809301838601378301015290565b600080fd5b60005b838110610c285750506000910152565b8181015183820152602001610c18565b60409160208252610c588151809281602086015260208686019101610c15565b601f01601f1916010190565b906040600319830112610c105760043591602435906001600160401b038211610c1057610c9391600401610bc9565b90565b90600182811c92168015610cc6575b6020831014610cb057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ca5565b90604051918260008254610ce381610c96565b90818452602094600191600181169081600014610d535750600114610d14575b505050610d1292500383610b8d565b565b600090815285812095935091905b818310610d3b575050610d129350820101388080610d03565b85548884018501529485019487945091830191610d22565b92505050610d1294925060ff191682840152151560051b820101388080610d03565b9080601f83011215610c105760405191610d8e83610b72565b60a081019083838311610c105781905b838210610dad57505050505090565b81356001600160401b038111610c1057602091610dcd8784938701610bc9565b815201910190610d9e565b15610ddf57565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b9291610e31906001600160a01b03161515610dd8565b60ff60205416156110b95750816000526022602052610e54604060002054610c96565b1561108057816000526023602052610e70604060002054610c96565b1561104457816000526021602052604060002060246020526040600020546022602052604060002090602360205260406000209060405193610eb185610b72565b60016000865b600582106110275750505060405193610ecf85610b72565b60066000865b6005821061100a57505050604051610eec81610b72565b600b6000825b60058210610fed5750505060405191610f0a83610b72565b60106000845b60058210610fd057505050610f71610f779160ff60405196610f3188610b41565b548181168852818160081c166020890152818160101c166040890152818160181c166060890152818160201c16608089015260281c1660a0870152610cd0565b95610cd0565b956040519761016089018981106001600160401b03821117610b5c5760405260159a60008a5b600b8210610fb2575050610c939a9b50611135565b600160208f92610fc28394610cd0565b8152019e019101909c610f9d565b600160208192610fdf86610cd0565b815201930191019091610f10565b600160208192610ffc86610cd0565b815201930191019091610ef2565b60016020819261101986610cd0565b815201930191019091610ed5565b60016020819261103686610cd0565b815201930191019091610eb7565b60405162461bcd60e51b815260206004820152601460248201527315d85d99599bdc9b48155492481b9bdd081cd95d60621b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270105d591a5bc8155492481b9bdd081cd95d607a1b6044820152606490fd5b9150565b156110c457565b60405162461bcd60e51b815260206004820152601160248201527052657665616c206e6f742061637469766560781b6044820152606490fd5b90600581101561110e5760051b0190565b634e487b7160e01b600052603260045260246000fd5b90600b81101561110e5760051b0190565b90929493969897919860e05261114a90611854565b60a052825160ff1661115c90836110fd565b5196602084015160ff16611170908a6110fd565b51604085015160ff1661118390876110fd565b51606086015160ff16611196908a6110fd565b5190608087015160ff166111aa9085611124565b519260a088015160ff166111be9086611124565b51946111c98b611854565b97895160ff166111d8916110fd565b519d60208a015160ff166111eb916110fd565b519960408a015160ff166111fe916110fd565b519b60608a015160ff16611211916110fd565b51608052608089015160ff166112279082611124565b519860a0015160ff1661123991611124565b519961124490611854565b9b60405160c05260c0516020017f7b226e616d65223a22417065426561747347656e657369732023000000000000905260a0515160c051603a018160a0516020019161128f92610c15565b60c051019661088b60f21b9788603a820152603c81017f226465736372697074696f6e223a22556e6971756520617564696f2d76697375905267185b08139195088b60c21b605c820152681134b6b0b3b2911d1160b91b606482015281519182606d8301916020019161130192610c15565b0187606d820152701130b734b6b0ba34b7b72fbab936111d1160791b606f82015260e0515190608081018260e0516020019161133c92610c15565b01608081018890526f226f6e636861696e5f64617461223a7b60801b608282015267113130b9b9911d1160c11b6092820152815191611384908390609a840190602001610c15565b0186609a820152681132393ab6b9911d1160b91b609c8201528151918260a5830191602001916113b392610c15565b018560a5820152691136b2b637b23c911d1160b11b60a78201528151918260b1830191602001916113e392610c15565b018460b18201526511333c111d1160d11b60b38201528151918260b98301916020019161140f92610c15565b018360b98201526d113bb0bb32afb1b7b637b9111d1160911b60bb8201528151918260c98301916020019161144392610c15565b018260c98201526b113133afb1b7b637b9111d1160a11b60cb8201528151918260d78301916020019161147592610c15565b019060d782015269113930b934ba3c911d1160b11b60d98201528151918260e3830191602001916114a592610c15565b601160f91b60e39290910191820152611f4b60f21b60e48201527f2261747472696275746573223a5b7b2274726169745f74797065223a2242617360e68201526b399116113b30b63ab2911d1160a11b6101068201528651610112979091906115169083908a840190602001610c15565b019562089f4b60ea1b948580948180948b01526101158a017f7b2274726169745f74797065223a224472756d73222c2276616c7565223a2200905261013499815191828c8301916020019161156a92610c15565b019889015261013788017f7b2274726169745f74797065223a224d656c6f6479222c2276616c7565223a22905261015797815191828a830191602001916115b092610c15565b01968701527f7b2274726169745f74797065223a224658222c2276616c7565223a220000000061015a87015260805180516101769784926115f99083908b840190602001610c15565b01968701527f7b2274726169745f74797065223a225761766520436f6c6f72222c2276616c756101798701526332911d1160e11b610199870152805161019d96909161164d90839089840190602001610c15565b01948501527f7b2274726169745f74797065223a224261636b67726f756e6420436f6c6f72226101a08501526916113b30b63ab2911d1160b11b6101c085015280516101ca9490916116a790839087840190602001610c15565b01928301527f7b2274726169745f74797065223a225261726974792053636f7265222c2276616101cd83015265363ab2911d1160d11b6101ed83015280516101f39290916116fd90839085840190602001610c15565b019063227d5d7d60e01b9082015260c05190036101d7810160c051526101f70160c0519061172a91610b8d565b60405160608101908082106001600160401b03831117610b5c576117a391604052604081527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f604082015260c051611998565b610c93603d60405180937f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000060208301526117e68151809260208686019101610c15565b810103601d810184520182610b8d565b6000546001600160a01b0316330361180a57565b60405163118cdaa760e01b8152336004820152602490fd5b9061182c82610bae565b6118396040519182610b8d565b828152809261184a601f1991610bae565b0190602036910137565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008082101561198a575b506d04ee2d6d415b85acef81000000008083101561197b575b50662386f26fc100008083101561196c575b506305f5e1008083101561195d575b506127108083101561194e575b50606482101561193e575b600a80921015611934575b6001908160216118ec60018701611822565b95860101905b6118fe575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561192f579190826118f2565b6118f7565b91600101916118da565b91906064600291049101916118cf565b600491939204910191386118c4565b600891939204910191386118b7565b601091939204910191386118a8565b60209193920491019138611896565b60409350810491503861187d565b919091805115611a9b5780519260029160028501809511611a85576003948590046001600160fe1b0381168103611a85576119d89060029694961b611822565b926020840192829183518401976020890192835194600085525b8a8110611a3857505050506003939495965052510680600114611a2557600214611a1a575090565b603d90600019015390565b50603d9081600019820153600119015390565b836004919b989b019a8b51600190603f9082828260121c16870101518453828282600c1c16870101518385015382828260061c1687010151878501531684010151858201530196996119f2565b634e487b7160e01b600052601160045260246000fd5b509050604051602081018181106001600160401b03821117610b5c57604052600081529056fea2646970667358221220fa1b8f3ea164fec6d409e20a2bfc36523809516e445052cd5269cd6ea846579564736f6c63430008180033","opcodes":"PUSH1 0x40 PUSH2 0x100 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AAFB61 EQ PUSH2 0xAE9 JUMPI DUP1 PUSH4 0xFB51AC4 EQ PUSH2 0x99C JUMPI DUP1 PUSH4 0x1E4F8BEB EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0x32DBD609 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0x4DFA177F EQ PUSH2 0x8E1 JUMPI DUP1 PUSH4 0x51830227 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0x5AC93A0A EQ PUSH2 0x890 JUMPI DUP1 PUSH4 0x6AD81C74 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0x7D330CDD EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x857A6F5B EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xA5573BD0 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xAB95081D EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xAC577140 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xBFB70E04 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xC0AA14B6 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE0A80853 EQ PUSH2 0x182 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0x17A JUMPI PUSH2 0x123 PUSH2 0x17F6 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x164 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B9 JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1B9 JUMPI PUSH2 0x1A8 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0x20 SLOAD AND SWAP2 AND OR PUSH1 0x20 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI DUP2 PUSH2 0x1F2 SWAP4 PUSH2 0x1E7 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC38 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1B9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B9 JUMPI DUP3 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3CA JUMPI PUSH2 0x234 SWAP1 PUSH2 0x22D PUSH2 0x17F6 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x20 SWAP1 PUSH2 0x245 DUP2 DUP4 SLOAD AND PUSH2 0x10BD JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x22 DUP3 MSTORE PUSH2 0x258 DUP4 DUP7 KECCAK256 SLOAD PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x394 JUMPI DUP3 MLOAD DUP3 DUP2 ADD SWAP1 TIMESTAMP DUP3 MSTORE DUP6 DUP6 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x381 JUMPI SWAP1 DUP3 SWAP2 PUSH1 0x64 SWAP5 SWAP4 DUP8 MSTORE DUP2 MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0x2A5 DUP4 PUSH2 0xB41 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP6 MOD AND DUP4 MSTORE PUSH1 0xA0 DUP3 ADD SWAP2 DUP2 PUSH1 0x5 DUP1 DUP8 DIV MOD AND DUP4 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 PUSH1 0x5 PUSH1 0x19 DUP9 DIV MOD AND DUP2 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 DUP4 PUSH1 0x5 PUSH1 0x7D DUP10 DIV MOD AND DUP3 MSTORE PUSH2 0x120 PUSH2 0x100 DUP5 ADD SWAP4 DUP6 PUSH1 0xB PUSH2 0x271 DUP12 DIV MOD AND DUP6 MSTORE ADD SWAP4 DUP1 PUSH1 0xB PUSH2 0x1ADB DUP11 DIV MOD AND DUP6 MSTORE DUP12 DUP14 MSTORE PUSH1 0x21 DUP11 MSTORE DUP11 DUP14 KECCAK256 SWAP7 MLOAD AND PUSH6 0xFF0000000000 PUSH5 0xFF00000000 PUSH4 0xFF000000 PUSH3 0xFF0000 PUSH2 0xFF00 DUP12 SLOAD SWAP11 MLOAD PUSH1 0x8 SHL AND SWAP6 MLOAD PUSH1 0x10 SHL AND SWAP6 MLOAD PUSH1 0x18 SHL AND SWAP6 MLOAD DUP13 SHL AND SWAP6 MLOAD PUSH1 0x28 SHL AND SWAP6 PUSH6 0xFFFFFFFFFFFF NOT AND OR OR OR OR OR OR SWAP1 SSTORE MOD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x36E JUMPI DUP5 MSTORE PUSH1 0x24 SWAP1 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C995D99585B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x58E JUMPI PUSH2 0x1E0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x58E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x17E JUMPI PUSH2 0x402 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0x41A SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x17A JUMPI PUSH2 0x431 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x448 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP1 PUSH1 0xC0 CALLDATASIZE PUSH1 0xA3 NOT ADD SLT PUSH2 0x5B0 JUMPI DUP7 MLOAD SWAP3 PUSH2 0x461 DUP5 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0xFF SWAP6 PUSH1 0xA4 CALLDATALOAD DUP8 DUP2 AND DUP2 SUB PUSH2 0x5AC JUMPI DUP6 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP7 DUP1 DUP9 AND DUP9 SUB PUSH2 0x5AC JUMPI PUSH1 0x20 SWAP8 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xE4 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x5A8 JUMPI DUP11 DUP8 ADD MSTORE PUSH2 0x104 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x5A8 JUMPI PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x124 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x5A8 JUMPI PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x144 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5AC JUMPI PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x164 PUSH2 0x184 CALLDATALOAD DUP12 DUP2 GT PUSH2 0x5A8 JUMPI PUSH2 0x4E8 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP8 PUSH2 0x1A4 CALLDATALOAD DUP13 DUP2 GT PUSH2 0x5A4 JUMPI PUSH2 0x501 SWAP1 CALLDATASIZE SWAP1 DUP11 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP10 DUP13 PUSH2 0x1C4 CALLDATALOAD SWAP14 DUP15 GT PUSH2 0x1B9 JUMPI CALLDATASIZE PUSH1 0x23 DUP16 ADD SLT ISZERO PUSH2 0x1B9 JUMPI DUP13 MLOAD SWAP14 DUP15 PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x591 JUMPI DUP16 SWAP1 DUP16 MSTORE SWAP2 DUP6 DUP3 ADD SWAP4 CALLDATASIZE DUP6 GT PUSH2 0x58E JUMPI DUP3 DUP14 ADD SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x567 JUMPI POP POP POP POP POP PUSH2 0x1F2 DUP13 PUSH2 0x1E7 DUP16 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 CALLDATALOAD SWAP6 CALLDATALOAD PUSH2 0x1135 JUMP JUMPDEST DUP5 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x17E JUMPI DUP8 SWAP2 DUP16 DUP4 SWAP3 PUSH2 0x583 SWAP2 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0xBC9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP5 ADD SWAP4 PUSH2 0x542 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 DUP13 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0xB ADD PUSH2 0xCD0 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x24 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1B9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B9 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0xB DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x15 ADD PUSH2 0xCD0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x17E JUMPI PUSH2 0x66F CALLDATASIZE PUSH2 0xC64 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x67A PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x68A PUSH1 0xFF DUP4 SLOAD AND PUSH2 0x10BD JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x23 DUP3 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x7F5 JUMPI POP PUSH2 0x6B1 DUP4 SLOAD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x7B2 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x728 JUMPI POP SWAP2 DUP2 PUSH2 0x717 SWAP5 SWAP3 PUSH32 0x77F0150FB3B30F6451ACDCCF70CD397383911429734276985D2B689849B00C2D SWAP7 SWAP5 DUP10 SWAP2 PUSH2 0x71D JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC38 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 POP DUP5 ADD MLOAD CODESIZE PUSH2 0x6F9 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND DUP5 DUP10 MSTORE DUP3 DUP10 KECCAK256 SWAP3 DUP10 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x79A JUMPI POP POP SWAP3 PUSH32 0x77F0150FB3B30F6451ACDCCF70CD397383911429734276985D2B689849B00C2D SWAP7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH2 0x717 SWAP9 SWAP7 LT PUSH2 0x781 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x70D JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x775 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x738 JUMP JUMPDEST DUP4 DUP9 MSTORE DUP2 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x7EB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x7E0 JUMPI POP PUSH2 0x6BA JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7D3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x7CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x58E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x58E JUMPI PUSH2 0x821 PUSH2 0x17F6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x1 ADD PUSH2 0xCD0 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x6 ADD PUSH2 0xCD0 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1B9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF DUP3 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x58E JUMPI POP PUSH2 0x1E7 PUSH2 0x1F2 SWAP3 PUSH1 0x10 ADD PUSH2 0xCD0 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0xC0 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE KECCAK256 SLOAD PUSH1 0xFF SWAP1 DUP3 MLOAD SWAP3 DUP3 DUP3 AND DUP5 MSTORE DUP3 DUP3 PUSH1 0x8 SHR AND PUSH1 0x20 DUP6 ADD MSTORE DUP3 DUP3 PUSH1 0x10 SHR AND SWAP1 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0x20 SHR AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x28 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI DUP2 PUSH2 0x1F2 SWAP4 PUSH2 0x1E7 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x23 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xCD0 JUMP JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1B9 JUMPI PUSH2 0x9AD CALLDATASIZE PUSH2 0xC64 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x9B8 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH2 0x9C8 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x10BD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE DUP4 KECCAK256 SWAP2 DUP5 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xAD6 JUMPI POP PUSH2 0x9ED DUP4 SLOAD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA93 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xA31 JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xA26 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0xA0F JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xA7B JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xA62 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0xA57 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xA42 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xACC JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xAC1 JUMPI POP PUSH2 0x9F6 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x17E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17E JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0xB1A SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH2 0x58E JUMPI POP SWAP3 PUSH2 0x1E7 SWAP2 PUSH2 0x1F2 SWAP5 CALLDATALOAD PUSH2 0xE1B JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB5C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xC10 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xBE0 DUP3 PUSH2 0xBAE JUMP JUMPDEST SWAP3 PUSH2 0xBEE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB8D JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xC10 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xC28 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC58 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xC10 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC10 JUMPI PUSH2 0xC93 SWAP2 PUSH1 0x4 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xCC6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCB0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0xCE3 DUP2 PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xD53 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD14 JUMPI JUMPDEST POP POP POP PUSH2 0xD12 SWAP3 POP SUB DUP4 PUSH2 0xB8D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0xD3B JUMPI POP POP PUSH2 0xD12 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xD03 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xD12 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xD03 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD8E DUP4 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP4 DUP4 DUP4 GT PUSH2 0xC10 JUMPI DUP2 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xDAD JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC10 JUMPI PUSH1 0x20 SWAP2 PUSH2 0xDCD DUP8 DUP5 SWAP4 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xD9E JUMP JUMPDEST ISZERO PUSH2 0xDDF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0xE31 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x20 SLOAD AND ISZERO PUSH2 0x10B9 JUMPI POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH2 0xE54 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x1080 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x23 PUSH1 0x20 MSTORE PUSH2 0xE70 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x1044 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x23 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xEB1 DUP6 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0x1027 JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP4 PUSH2 0xECF DUP6 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0x100A JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0xEEC DUP2 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP3 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0xFED JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0xF0A DUP4 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP5 JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0xFD0 JUMPI POP POP POP PUSH2 0xF71 PUSH2 0xF77 SWAP2 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP7 PUSH2 0xF31 DUP9 PUSH2 0xB41 JUMP JUMPDEST SLOAD DUP2 DUP2 AND DUP9 MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND PUSH1 0x20 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0x10 SHR AND PUSH1 0x40 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0x20 SHR AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x28 SHR AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0xCD0 JUMP JUMPDEST SWAP6 PUSH2 0xCD0 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP8 PUSH2 0x160 DUP10 ADD DUP10 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE PUSH1 0x15 SWAP11 PUSH1 0x0 DUP11 JUMPDEST PUSH1 0xB DUP3 LT PUSH2 0xFB2 JUMPI POP POP PUSH2 0xC93 SWAP11 SWAP12 POP PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP16 SWAP3 PUSH2 0xFC2 DUP4 SWAP5 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP15 ADD SWAP2 ADD SWAP1 SWAP13 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xFDF DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xFFC DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x1019 DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x1036 DUP7 PUSH2 0xCD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15D85D99599BDC9B48155492481B9BDD081CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105D591A5BC8155492481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP JUMP JUMPDEST ISZERO PUSH2 0x10C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x52657665616C206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0xB DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP5 SWAP4 SWAP7 SWAP9 SWAP8 SWAP2 SWAP9 PUSH1 0xE0 MSTORE PUSH2 0x114A SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0xA0 MSTORE DUP3 MLOAD PUSH1 0xFF AND PUSH2 0x115C SWAP1 DUP4 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP7 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1170 SWAP1 DUP11 PUSH2 0x10FD JUMP JUMPDEST MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1183 SWAP1 DUP8 PUSH2 0x10FD JUMP JUMPDEST MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1196 SWAP1 DUP11 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11AA SWAP1 DUP6 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP3 PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11BE SWAP1 DUP7 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP5 PUSH2 0x11C9 DUP12 PUSH2 0x1854 JUMP JUMPDEST SWAP8 DUP10 MLOAD PUSH1 0xFF AND PUSH2 0x11D8 SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP14 PUSH1 0x20 DUP11 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11EB SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP10 PUSH1 0x40 DUP11 ADD MLOAD PUSH1 0xFF AND PUSH2 0x11FE SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD SWAP12 PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1211 SWAP2 PUSH2 0x10FD JUMP JUMPDEST MLOAD PUSH1 0x80 MSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1227 SWAP1 DUP3 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP9 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x1239 SWAP2 PUSH2 0x1124 JUMP JUMPDEST MLOAD SWAP10 PUSH2 0x1244 SWAP1 PUSH2 0x1854 JUMP JUMPDEST SWAP12 PUSH1 0x40 MLOAD PUSH1 0xC0 MSTORE PUSH1 0xC0 MLOAD PUSH1 0x20 ADD PUSH32 0x7B226E616D65223A22417065426561747347656E657369732023000000000000 SWAP1 MSTORE PUSH1 0xA0 MLOAD MLOAD PUSH1 0xC0 MLOAD PUSH1 0x3A ADD DUP2 PUSH1 0xA0 MLOAD PUSH1 0x20 ADD SWAP2 PUSH2 0x128F SWAP3 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0xC0 MLOAD ADD SWAP7 PUSH2 0x88B PUSH1 0xF2 SHL SWAP8 DUP9 PUSH1 0x3A DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD PUSH32 0x226465736372697074696F6E223A22556E6971756520617564696F2D76697375 SWAP1 MSTORE PUSH8 0x185B08139195088B PUSH1 0xC2 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH9 0x1134B6B0B3B2911D11 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x6D DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1301 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP8 PUSH1 0x6D DUP3 ADD MSTORE PUSH17 0x1130B734B6B0BA34B7B72FBAB936111D11 PUSH1 0x79 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH1 0xE0 MLOAD MLOAD SWAP1 PUSH1 0x80 DUP2 ADD DUP3 PUSH1 0xE0 MLOAD PUSH1 0x20 ADD SWAP2 PUSH2 0x133C SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD PUSH1 0x80 DUP2 ADD DUP9 SWAP1 MSTORE PUSH16 0x226F6E636861696E5F64617461223A7B PUSH1 0x80 SHL PUSH1 0x82 DUP3 ADD MSTORE PUSH8 0x113130B9B9911D11 PUSH1 0xC1 SHL PUSH1 0x92 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 PUSH2 0x1384 SWAP1 DUP4 SWAP1 PUSH1 0x9A DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD DUP7 PUSH1 0x9A DUP3 ADD MSTORE PUSH9 0x1132393AB6B9911D11 PUSH1 0xB9 SHL PUSH1 0x9C DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xA5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13B3 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP6 PUSH1 0xA5 DUP3 ADD MSTORE PUSH10 0x1136B2B637B23C911D11 PUSH1 0xB1 SHL PUSH1 0xA7 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xB1 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E3 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP5 PUSH1 0xB1 DUP3 ADD MSTORE PUSH6 0x11333C111D11 PUSH1 0xD1 SHL PUSH1 0xB3 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xB9 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x140F SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP4 PUSH1 0xB9 DUP3 ADD MSTORE PUSH14 0x113BB0BB32AFB1B7B637B9111D11 PUSH1 0x91 SHL PUSH1 0xBB DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xC9 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1443 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD DUP3 PUSH1 0xC9 DUP3 ADD MSTORE PUSH12 0x113133AFB1B7B637B9111D11 PUSH1 0xA1 SHL PUSH1 0xCB DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xD7 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1475 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD SWAP1 PUSH1 0xD7 DUP3 ADD MSTORE PUSH10 0x113930B934BA3C911D11 PUSH1 0xB1 SHL PUSH1 0xD9 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xE3 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A5 SWAP3 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0xE3 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x1F4B PUSH1 0xF2 SHL PUSH1 0xE4 DUP3 ADD MSTORE PUSH32 0x2261747472696275746573223A5B7B2274726169745F74797065223A22426173 PUSH1 0xE6 DUP3 ADD MSTORE PUSH12 0x399116113B30B63AB2911D11 PUSH1 0xA1 SHL PUSH2 0x106 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0x112 SWAP8 SWAP1 SWAP2 SWAP1 PUSH2 0x1516 SWAP1 DUP4 SWAP1 DUP11 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP6 PUSH3 0x89F4B PUSH1 0xEA SHL SWAP5 DUP6 DUP1 SWAP5 DUP2 DUP1 SWAP5 DUP12 ADD MSTORE PUSH2 0x115 DUP11 ADD PUSH32 0x7B2274726169745F74797065223A224472756D73222C2276616C7565223A2200 SWAP1 MSTORE PUSH2 0x134 SWAP10 DUP2 MLOAD SWAP2 DUP3 DUP13 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x156A SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD SWAP9 DUP10 ADD MSTORE PUSH2 0x137 DUP9 ADD PUSH32 0x7B2274726169745F74797065223A224D656C6F6479222C2276616C7565223A22 SWAP1 MSTORE PUSH2 0x157 SWAP8 DUP2 MLOAD SWAP2 DUP3 DUP11 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15B0 SWAP3 PUSH2 0xC15 JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A224658222C2276616C7565223A2200000000 PUSH2 0x15A DUP8 ADD MSTORE PUSH1 0x80 MLOAD DUP1 MLOAD PUSH2 0x176 SWAP8 DUP5 SWAP3 PUSH2 0x15F9 SWAP1 DUP4 SWAP1 DUP12 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A225761766520436F6C6F72222C2276616C75 PUSH2 0x179 DUP8 ADD MSTORE PUSH4 0x32911D11 PUSH1 0xE1 SHL PUSH2 0x199 DUP8 ADD MSTORE DUP1 MLOAD PUSH2 0x19D SWAP7 SWAP1 SWAP2 PUSH2 0x164D SWAP1 DUP4 SWAP1 DUP10 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP5 DUP6 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A224261636B67726F756E6420436F6C6F7222 PUSH2 0x1A0 DUP6 ADD MSTORE PUSH10 0x16113B30B63AB2911D11 PUSH1 0xB1 SHL PUSH2 0x1C0 DUP6 ADD MSTORE DUP1 MLOAD PUSH2 0x1CA SWAP5 SWAP1 SWAP2 PUSH2 0x16A7 SWAP1 DUP4 SWAP1 DUP8 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP3 DUP4 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A225261726974792053636F7265222C227661 PUSH2 0x1CD DUP4 ADD MSTORE PUSH6 0x363AB2911D11 PUSH1 0xD1 SHL PUSH2 0x1ED DUP4 ADD MSTORE DUP1 MLOAD PUSH2 0x1F3 SWAP3 SWAP1 SWAP2 PUSH2 0x16FD SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xC15 JUMP JUMPDEST ADD SWAP1 PUSH4 0x227D5D7D PUSH1 0xE0 SHL SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 SUB PUSH2 0x1D7 DUP2 ADD PUSH1 0xC0 MLOAD MSTORE PUSH2 0x1F7 ADD PUSH1 0xC0 MLOAD SWAP1 PUSH2 0x172A SWAP2 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0xB5C JUMPI PUSH2 0x17A3 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x1998 JUMP JUMPDEST PUSH2 0xC93 PUSH1 0x3D PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x17E6 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xC15 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x180A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x182C DUP3 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x1839 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xB8D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x184A PUSH1 0x1F NOT SWAP2 PUSH2 0xBAE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x198A JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x197B JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x196C JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x195D JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x194E JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x193E JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x1934 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x18EC PUSH1 0x1 DUP8 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x18FE JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x192F JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x18F2 JUMP JUMPDEST PUSH2 0x18F7 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x18DA JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x187D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD ISZERO PUSH2 0x1A9B JUMPI DUP1 MLOAD SWAP3 PUSH1 0x2 SWAP2 PUSH1 0x2 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x1A85 JUMPI PUSH1 0x3 SWAP5 DUP6 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A85 JUMPI PUSH2 0x19D8 SWAP1 PUSH1 0x2 SWAP7 SWAP5 SWAP7 SHL PUSH2 0x1822 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP8 PUSH1 0x20 DUP10 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP11 DUP2 LT PUSH2 0x1A38 JUMPI POP POP POP POP PUSH1 0x3 SWAP4 SWAP5 SWAP6 SWAP7 POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x1A25 JUMPI PUSH1 0x2 EQ PUSH2 0x1A1A JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x4 SWAP2 SWAP12 SWAP9 SWAP12 ADD SWAP11 DUP12 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP8 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP8 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP8 ADD ADD MLOAD DUP8 DUP6 ADD MSTORE8 AND DUP5 ADD ADD MLOAD DUP6 DUP3 ADD MSTORE8 ADD SWAP7 SWAP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xB5C JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SHL DUP16 RETURNDATACOPY LOG1 PUSH5 0xFEC6D409E2 EXP 0x2B 0xFC CALLDATASIZE MSTORE CODESIZE MULMOD MLOAD PUSH15 0x445052CD5269CD6EA846579564736F PUSH13 0x63430008180033000000000000 ","sourceMap":"215:4800:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:20;215:4800;734:20;;;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;2627:22;;2623:91;;-1:-1:-1;;215:4800:35;;-1:-1:-1;;;;;;215:4800:35;;;;;;;3052:40:8;215:4800:35;;3052:40:8;215:4800:35;;2623:91:8;215:4800:35;-1:-1:-1;;;2672:31:8;;;;;215:4800:35;;;;;2672:31:8;215:4800:35;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;;;1500:62:8;;:::i;:::-;215:4800:35;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;;810:48;215:4800;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;1665:57;1500:62:8;;;:::i;:::-;1673:24:35;;1665:57;:::i;:::-;215:4800;;;1732:38;215:4800;;;;1732:38;:::i;:::-;215:4800;;;1794:14;215:4800;;;;;;;;:::i;:::-;;;;;1903:54;;;1920:15;;215:4800;;;;;;;1946:10;215:4800;;;;;;1903:54;;;215:4800;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;2365:3;215:4800;;;;;;1893:65;;215:4800;;;;:::i;:::-;;2039:1;215:4800;;;;;1989:327;;;215:4800;;2039:1;215:4800;;;;;;;1989:327;;;215:4800;2039:1;2135:2;215:4800;;;;;;;1989:327;;215:4800;;2039:1;2183:3;215:4800;;;;;;1989:327;;;;215:4800;;2246:2;2239:3;215:4800;;;;;;1989:327;215:4800;;2246:2;2294:4;215:4800;;;;;;;;;1969:8;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;515:28;215:4800;515:28;;;;;215:4800;;;;515:28;215:4800;;:::i;:::-;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;916:46;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;579:148;215:4800;579:148;;;;;215:4800;;;;579:148;215:4800;;:::i;:::-;;;;;;;;:::i;:::-;1500:62:8;;;;;:::i;:::-;1275:8:35;215:4800;1267:38;215:4800;;;;1267:38;:::i;:::-;215:4800;;;1315:12;215:4800;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1357:32;215:4800;;1357:32;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;1357:32;;;;;:::i;:::-;;;;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:32;215:4800;;;;;;1357:32;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;215:4800:35;;-1:-1:-1;;;;;;215:4800:35;;;;;;-1:-1:-1;;;;;215:4800:35;3052:40:8;215:4800:35;;3052:40:8;215:4800:35;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;451:26;215:4800;451:26;;;;;215:4800;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;215:4800:35;;;;;483:26;215:4800;483:26;;;;;215:4800;;;;483:26;215:4800;;:::i;:::-;;;;;;;;;;;;;;734:20;215:4800;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;549:24;215:4800;549:24;;;;;215:4800;;;;549:24;215:4800;;:::i;:::-;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;760:44;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;;864:46;215:4800;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1500:62:8;;;;;:::i;:::-;1501:8:35;215:4800;1493:38;215:4800;;;;1493:38;:::i;:::-;215:4800;;1541:14;215:4800;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;:::o;:::-;-1:-1:-1;;;;;215:4800:35;;;;;;-1:-1:-1;;215:4800:35;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;215:4800:35;;;;;;;;;;-1:-1:-1;;215:4800:35;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;215:4800:35;;;;:::o;:::-;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;215:4800:35;;;;;;;;-1:-1:-1;;215:4800:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;215:4800:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;215:4800:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;4227:786;;;4399:57;;-1:-1:-1;;;;;215:4800:35;4407:24;;4399:57;:::i;:::-;215:4800;4471:8;215:4800;;4470:9;4466:67;;215:4800;;4429:1;215:4800;4556:14;4471:8;215:4800;;;4429:1;215:4800;;;:::i;:::-;4550:41;215:4800;;;4429:1;215:4800;4637:12;4471:8;215:4800;;;4429:1;215:4800;;;:::i;:::-;4631:39;215:4800;;;4429:1;215:4800;4853:8;4471;215:4800;;4429:1;215:4800;4884:11;4471:8;215:4800;;4429:1;215:4800;;4556:14;4471:8;215:4800;;4429:1;215:4800;;4637:12;4471:8;215:4800;;4429:1;215:4800;;;;;;;;:::i;:::-;4761:9;4429:1;215:4800;;;;;;;;;;;;;;;;:::i;:::-;4784:9;4429:1;215:4800;;;;;;;;;;;;;;;:::i;:::-;4807:11;4429:1;215:4800;;;;;;;;;;;;;;;;:::i;:::-;4832:7;4429:1;215:4800;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4471:8;215:4800;;;;;4832:7;215:4800;;;;;;;;;;;;;;;;;4471:8;215:4800;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;4990:6;;4429:1;215:4800;;4807:11;215:4800;;;;4712:294;;;;;;;:::i;215:4800::-;4761:9;4471:8;215:4800;;;;;;:::i;:::-;;;;;;;;;;;;;4761:9;4471:8;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;4761:9;4471:8;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;4761:9;4471:8;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;4761:9;4471:8;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;4471:8;215:4800;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;-1:-1:-1;;;215:4800:35;;4471:8;215:4800;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;4466:67;4495:27;-1:-1:-1;4495:27:35:o;215:4800::-;;;;:::o;:::-;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2386:1835::-;;;;;;;;;;;;2842:18;;;:::i;:::-;;;215:4800;;;;3082:23;;;;:::i;:::-;;3155:10;;;;215:4800;;;3142:24;;;;:::i;:::-;;3219:11;;;215:4800;;;3204:27;;;;:::i;:::-;;3276:7;;;215:4800;;;3265:19;;;;:::i;:::-;;3333:14;;;;215:4800;;;3326:22;;;;:::i;:::-;;3395:12;;;;215:4800;;;3388:20;;;;:::i;:::-;;3446:17;;;;:::i;:::-;215:4800;;;;;3567:23;;;:::i;:::-;;3155:10;;;;215:4800;;;3650:24;;;:::i;:::-;;3219:11;;;;215:4800;;;3735:27;;;:::i;:::-;;3276:7;;;;215:4800;;;3819:19;;;:::i;:::-;;;;3333:14;;;215:4800;;;3903:22;;;;:::i;:::-;;3395:12;;;215:4800;;;3996:20;;;:::i;:::-;;4083:17;;;;:::i;:::-;215:4800;3219:11;215:4800;2782:1351;;;;3155:10;2782:1351;215:4800;;;;;;2782:1351;;215:4800;;;;;3155:10;215:4800;;;;;:::i;:::-;2782:1351;;215:4800;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3333:14;215:4800;;;;;3155:10;215:4800;;;;;:::i;:::-;;3333:14;215:4800;;;;;-1:-1:-1;;;215:4800:35;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;3155:10;215:4800;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;-1:-1:-1;;;215:4800:35;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:10;215:4800;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;3155:10;215:4800;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;3155:10;215:4800;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;215:4800:35;;;;;;;;;;;;;;;;;;3155:10;215:4800;;:::i;:::-;;;;;;;;;;2782:1351;;;;;;;;;;;;;;;;;;:::i;:::-;3219:11;215:4800;3276:7;215:4800;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;753:27:21;215:4800:35;3219:11;215:4800;3219:11;215:4800;;;3155:10;215:4800;;;;3219:11;215:4800;;;2768:1366;;753:27:21;:::i;:::-;4158:55:35;215:4800;3219:11;215:4800;4158:55;;215:4800;3155:10;4158:55;;215:4800;;;;;;3155:10;215:4800;;;;;;:::i;:::-;;;4158:55;215:4800;4158:55;;;;;;;:::i;1796:162:8:-;1710:6;215:4800:35;-1:-1:-1;;;;;215:4800:35;735:10:22;1855:23:8;1851:101;;1796:162::o;1851:101::-;215:4800:35;;-1:-1:-1;;;1901:40:8;;735:10:22;1901:40:8;;;215:4800:35;;;1901:40:8;215:4800:35;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;1308:634:27:-;1430:17;-1:-1:-1;29291:8:31;;29282:17;;;;29278:103;;1308:634:27;29407:8:31;;29398:17;;;;29394:103;;1308:634:27;29523:8:31;;29514:17;;;;29510:103;;1308:634:27;29639:7:31;;29630:16;;;;29626:100;;1308:634:27;29752:7:31;;29743:16;;;;29739:100;;1308:634:27;29856:16:31;29865:7;29856:16;;;29852:100;;1308:634:27;29978:7:31;;29969:16;;;29965:66;;1308:634:27;1450:1;215:4800:35;;1545:94:27;1488:18;1450:1;215:4800:35;;1488:18:27;:::i;:::-;1520:11;1545:94;;;1652:247;1450:1;;;1652:247;1912:13;;;;1308:634;:::o;1652:247::-;-1:-1:-1;;215:4800:35;;;;-1:-1:-1;;;1706:111:27;;;;215:4800:35;1706:111:27;215:4800:35;1867:10:27;;;1863:21;;1652:247;;;;;1863:21;1879:5;;29965:66:31;215:4800:35;30015:1:31;215:4800:35;29965:66:31;;;29852:100;215:4800:35;;29865:7:31;29936:1;215:4800:35;;;;29852:100:31;;;29739;29823:1;215:4800:35;;;;;;29739:100:31;;;;29626;29710:1;215:4800:35;;;;;;29626:100:31;;;;29510:103;29596:2;215:4800:35;;;;;;29510:103:31;;;;29394;29480:2;215:4800:35;;;;;;29394:103:31;;;;29278;29364:2;;-1:-1:-1;215:4800:35;;;-1:-1:-1;29278:103:31;;;1186:3994:21;;;;215:4800:35;;1515:16:21;1511:31;;215:4800:35;;2537:1:21;;215:4800:35;2537:1:21;215:4800:35;;;;;;;2542:1:21;;215:4800:35;;;-1:-1:-1;;;;;215:4800:35;;;;;;2606:24:21;215:4800:35;2537:1:21;215:4800:35;;;;2606:24:21;:::i;:::-;2641:2509;;;;;;;;;;;;;;;;;;;1530:1;2641:2509;;;;;;;;;;;;2542:1;2641:2509;;;;;;;;2542:1;2641:2509;2542:1;;;2641:2509;;;;5160:13;1186:3994;:::o;2641:2509::-;;;-1:-1:-1;;2641:2509:21;;1186:3994;:::o;2641:2509::-;-1:-1:-1;2641:2509:21;;;-1:-1:-1;;2641:2509:21;;;-1:-1:-1;;2641:2509:21;;1186:3994;:::o;2641:2509::-;;;;;;;;;;;215:4800:35;2641:2509:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:4800:35;;;;1530:1:21;215:4800:35;;2517:1:21;215:4800:35;;1530:1:21;215:4800:35;1511:31:21;215:4800:35;;;;;;;;;;;-1:-1:-1;;;;;215:4800:35;;;;;;;1530:1:21;215:4800:35;;1533:9:21;:::o"},"methodIdentifiers":{"COLORS(uint256)":"857a6f5b","bassLoops(uint256)":"6ad81c74","drumLoops(uint256)":"5ac93a0a","fxLoops(uint256)":"4dfa177f","getRevealedURI(uint256,string[5],string[5],string[5],string[5],(uint8,uint8,uint8,uint8,uint8,uint8),uint256,string,string,string[11])":"ac577140","getTokenURI(uint256,string,address)":"09aafb61","melodyLoops(uint256)":"ab95081d","mixedAudioURIs(uint256)":"c0aa14b6","owner()":"8da5cb5b","rarityScore(uint256)":"a5573bd0","renounceOwnership()":"715018a6","reveal(uint256,address)":"bfb70e04","revealed()":"51830227","setMixedAudioURI(uint256,string)":"0fb51ac4","setRevealed(bool)":"e0a80853","setWaveformURI(uint256,string)":"7d330cdd","transferOwnership(address)":"f2fde38b","waveData(uint256)":"32dbd609","waveformURIs(uint256)":"1e4f8beb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"WaveformURIUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"COLORS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bassLoops\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"drumLoops\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fxLoops\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string[5]\",\"name\":\"bassLoopsArg\",\"type\":\"string[5]\"},{\"internalType\":\"string[5]\",\"name\":\"drumLoopsArg\",\"type\":\"string[5]\"},{\"internalType\":\"string[5]\",\"name\":\"melodyLoopsArg\",\"type\":\"string[5]\"},{\"internalType\":\"string[5]\",\"name\":\"fxLoopsArg\",\"type\":\"string[5]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"bass\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"drums\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"melody\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"fx\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"colorWave\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"colorBg\",\"type\":\"uint8\"}],\"internalType\":\"struct ApeBeatsMetadataLib.WaveData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mixedAudioURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"waveformURI\",\"type\":\"string\"},{\"internalType\":\"string[11]\",\"name\":\"colors\",\"type\":\"string[11]\"}],\"name\":\"getRevealedURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"prerevealNoiseBase64\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"melodyLoops\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mixedAudioURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rarityScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setMixedAudioURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_revealed\",\"type\":\"bool\"}],\"name\":\"setRevealed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setWaveformURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"waveData\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"bass\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"drums\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"melody\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"fx\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"colorWave\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"colorBg\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"waveformURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ApeBeatsMetadataLib.sol\":\"ApeBeatsMetadataLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ApeBeatsMetadataLib.sol\":{\"keccak256\":\"0x45aaa7f2aa950574e0274e60d05e7f72784a52f1c02627ddedf0c62957206bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13d84adfa490100395b4958f30a68fe6242e02c0d4166e4b21f8e0d453b4feed\",\"dweb:/ipfs/Qma6QdWAaGWMjuHStCcYJ2a8U2TfEtTDCK9HssVDsZ9YDf\"]}},\"version\":1}"}},"contracts/ApeBeatsRoyalties.sol":{"ApeBeatsRoyalties":{"abi":[{"inputs":[{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_founder","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"claimant","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RoyaltiesClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RoyaltiesPooled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RoyaltiesReceived","type":"event"},{"inputs":[],"name":"ROYALTY_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimPoolRoyalties","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimRoyalties","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"founder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"amountMinted","type":"uint256"}],"name":"mintAndRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"mintedPerWallet","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"originalMinters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolRoyalties","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"recentTransfers","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"recordTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"royaltyBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"royaltyBalancesPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"amountMinted","type":"uint256"}],"name":"setOriginalMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transferIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":328,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803461012d57601f610f0638819003918201601f19168301916001600160401b0383118484101761013257808492604094855283398101031261012d57610052602061004b83610148565b9201610148565b3315610114576000549060018060a01b03918260018060a01b031994338684161760005560405192823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055169081156100d2575083600254161760025516906003541617600355604051610da9908161015d8239f35b62461bcd60e51b815260206004820152601f60248201527f54726561737572792063616e6e6f74206265207a65726f2061646472657373006044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361012d5756fe60406080815260049081361015610028575b5050361561001e57600080fd5b610026610bd8565b005b600091823560e01c8063069b7820146106965780631ebdeeab1461066f5780631efee9761461065157806333f6df8f146106195780633a602b4d146105e15780633a8de572146103ec5780634d853ee5146103c357806353234fb4146103a457806361d027b31461037b578063715018a61461032157806388b48eea146102ae5780638da5cb5b146102865780639d75170a14610248578063a2309ff81461022b578063cada1c001461020f578063d37b1f46146101ec578063d67f8d0b146101c1578063e7d0fd181461018f5763f2fde38b146101065750610011565b3461018b57602036600319011261018b5761011f610794565b90610128610d47565b6001600160a01b0391821692831561017557505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b503461018b57602036600319011261018b57358252600a6020908152918190205490516001600160a01b039091168152f35b83346101e957806003193601126101e9576101da610d24565b6101e26108cd565b6001805580f35b80fd5b50503461020b578160031936011261020b576020906005549051908152f35b5080fd5b50503461020b578160031936011261020b5760209051603c8152f35b503461018b578260031936011261018b5760209250549051908152f35b5082903461020b57602036600319011261020b5735906006548210156101e95750610272906107d9565b506001815491015482519182526020820152f35b50503461020b578160031936011261020b57905490516001600160a01b039091168152602090f35b50903461018b5761031c906102c2366107af565b92916102cc610d47565b6102d4610d47565b8652600a6020528186209060018060a01b031690816bffffffffffffffffffffffff60a01b8254161790558552600b60205284206103138282546108aa565b905582546108aa565b905580f35b83346101e957806003193601126101e95761033a610d47565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020b578160031936011261020b5760025490516001600160a01b039091168152602090f35b50503461020b578160031936011261020b576020906007549051908152f35b50503461020b578160031936011261020b5760035490516001600160a01b039091168152602090f35b83823461020b57602036600319011261020b57610407610d47565b61040f610829565b8135815260208101428152600691825491680100000000000000008310156105ce5761044160019384810186556107d9565b9290926105bc5751825551908201556007805460001991908281146105a9578301600755825b61046f578580f35b8354606481118015610546575b156105415782810181811161052e57610494906107d9565b50908254811561051b57906104a991066107d9565b9190916104e4578085918303610509575b505050835480156104f65782016104d0816107d9565b6104e4578781558401879055845582610467565b634e487b7160e01b8852878752602488fd5b634e487b7160e01b875260318652602487fd5b805483558101549101558683816104ba565b634e487b7160e01b895260128852602489fd5b634e487b7160e01b885260118752602488fd5b508580f35b50801580159081610558575b5061047c565b9050610596578487527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40546078810180911161052e57421188610552565b634e487b7160e01b875260328652602487fd5b634e487b7160e01b875260118652602487fd5b634e487b7160e01b8752868652602487fd5b634e487b7160e01b865260418552602486fd5b50503461020b57602036600319011261020b5760209181906001600160a01b03610609610794565b168152600b845220549051908152f35b50503461020b57602036600319011261020b5760209181906001600160a01b03610641610794565b1681526009845220549051908152f35b50903461018b5761031c90610665366107af565b92916102d4610d47565b503461018b57602036600319011261018b5760209282913581526008845220549051908152f35b50903461018b578260031936011261018b576106b0610d24565b33835260096020528083205491821561075a57338452600960205283828120558380808086335af16106e061085f565b50156107185750519081527f8fbbda19f4a70036f6f585dc4160142a8fa2a20ffb9393d23274f78de4e3988860203392a26001805580f35b6020606492519162461bcd60e51b8352820152601860248201527f4661696c656420746f2073656e6420726f79616c7469657300000000000000006044820152fd5b6020606492519162461bcd60e51b835282015260156024820152744e6f20726f79616c7469657320746f20636c61696d60581b6044820152fd5b600435906001600160a01b03821682036107aa57565b600080fd5b60609060031901126107aa57600435906024356001600160a01b03811681036107aa579060443590565b60065481101561081357600660005260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b604051906040820182811067ffffffffffffffff82111761084957604052565b634e487b7160e01b600052604160045260246000fd5b3d156108a55767ffffffffffffffff903d8281116108495760405192601f8201601f19908116603f01168401908111848210176108495760405282523d6000602084013e565b606090565b919082018092116108b757565b634e487b7160e01b600052601160045260246000fd5b6004805415610b9d57600554908115610b59576019820290828204601903610b445760648092049260328102908104603203610b2f578290046000938460055560018060a01b0390858080808486600354165af161092961085f565b5015610aeb57858080809385600254165af161094361085f565b5015610aa85780600354163314908115610a9a575b50610a9457338452600b6020526040842054908115610a5157818102918183041490151715610a3e578154908115610a2b5704923381526009602052604081206109a38582546108aa565b905580808086335af16109b461085f565b50156109ea5750506040519081527f8fbbda19f4a70036f6f585dc4160142a8fa2a20ffb9393d23274f78de4e3988860203392a2565b60206040519162461bcd60e51b8352820152601b60248201527f4661696c656420746f2073656e64206d696e74657220736861726500000000006044820152fd5b634e487b7160e01b855260128352602485fd5b634e487b7160e01b845260118252602484fd5b505060206040519162461bcd60e51b8352820152601c60248201527f4e6f20746f6b656e73206d696e74656420627920636c61696d616e74000000006044820152fd5b50505050565b905060025416331438610958565b505060206040519162461bcd60e51b8352820152601d60248201527f4661696c656420746f2073656e642074726561737572792073686172650000006044820152fd5b50505060206040519162461bcd60e51b8352820152601c60248201527f4661696c656420746f2073656e6420666f756e646572207368617265000000006044820152fd5b601182634e487b7160e01b6000525260246000fd5b601190634e487b7160e01b6000525260246000fd5b60649060206040519162461bcd60e51b8352820152601a60248201527f4e6f20706f6f6c20726f79616c7469657320746f20636c61696d0000000000006044820152fd5b60649060206040519162461bcd60e51b83528201526014602482015273139bc81d1bdad95b9cc81b5a5b9d1959081e595d60621b6044820152fd5b60065480610c1d575b50610bee346005546108aa565b6005557f1d5b077db78404787d2283eb338d87091c7bea1551c6a3b35853970955fe4e806020604051348152a1565b60001981019081116108b757610c32906107d9565b506001610c3d610829565b91805483520154906020918083830152603c81018091116108b757421115610c655750610be1565b519060008281526008825260408120610c7f3482546108aa565b9055828152600a825260408120546001600160a01b03168015610cdf57816040917fe8f58c2c4663d8d9bab1fcd91c3bef339c90e81754e2d0ec7e888c5c0b56b08d9493526009835220610cd43482546108aa565b9055604051348152a2565b60405162461bcd60e51b815260048101849052601760248201527f496e76616c6964206f726967696e616c206d696e7465720000000000000000006044820152606490fd5b600260015414610d35576002600155565b604051633ee5aeb560e01b8152600490fd5b6000546001600160a01b03163303610d5b57565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212201e61414c5aa0830c15df6bce4d9f981a36e00d7bef369c940042ab692b76242564736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x12D JUMPI PUSH1 0x1F PUSH2 0xF06 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x132 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x12D JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x148 JUMP JUMPDEST SWAP3 ADD PUSH2 0x148 JUMP JUMPDEST CALLER ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP5 CALLER DUP7 DUP5 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE AND SWAP1 DUP2 ISZERO PUSH2 0xD2 JUMPI POP DUP4 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0xDA9 SWAP1 DUP2 PUSH2 0x15D DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792063616E6E6F74206265207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x12D JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x28 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26 PUSH2 0xBD8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69B7820 EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x1EBDEEAB EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x1EFEE976 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x33F6DF8F EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0x3A602B4D EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x3A8DE572 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x4D853EE5 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x53234FB4 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x88B48EEA EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x9D75170A EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xCADA1C00 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD37B1F46 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xD67F8D0B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xE7D0FD18 EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x106 JUMPI POP PUSH2 0x11 JUMP JUMPDEST CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18B JUMPI PUSH2 0x11F PUSH2 0x794 JUMP JUMPDEST SWAP1 PUSH2 0x128 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x175 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18B JUMPI CALLDATALOAD DUP3 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x1E9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E9 JUMPI PUSH2 0x1DA PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI CALLDATALOAD SWAP1 PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1E9 JUMPI POP PUSH2 0x272 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18B JUMPI PUSH2 0x31C SWAP1 PUSH2 0x2C2 CALLDATASIZE PUSH2 0x7AF JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x2CC PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0xD47 JUMP JUMPDEST DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 DUP7 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP5 KECCAK256 PUSH2 0x313 DUP3 DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x1E9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E9 JUMPI PUSH2 0x33A PUSH2 0xD47 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI PUSH2 0x407 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x40F PUSH2 0x829 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x6 SWAP2 DUP3 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x441 PUSH1 0x1 SWAP4 DUP5 DUP2 ADD DUP7 SSTORE PUSH2 0x7D9 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x5BC JUMPI MLOAD DUP3 SSTORE MLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 NOT SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x5A9 JUMPI DUP4 ADD PUSH1 0x7 SSTORE DUP3 JUMPDEST PUSH2 0x46F JUMPI DUP6 DUP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x64 DUP2 GT DUP1 ISZERO PUSH2 0x546 JUMPI JUMPDEST ISZERO PUSH2 0x541 JUMPI DUP3 DUP2 ADD DUP2 DUP2 GT PUSH2 0x52E JUMPI PUSH2 0x494 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST POP SWAP1 DUP3 SLOAD DUP2 ISZERO PUSH2 0x51B JUMPI SWAP1 PUSH2 0x4A9 SWAP2 MOD PUSH2 0x7D9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x4E4 JUMPI DUP1 DUP6 SWAP2 DUP4 SUB PUSH2 0x509 JUMPI JUMPDEST POP POP POP DUP4 SLOAD DUP1 ISZERO PUSH2 0x4F6 JUMPI DUP3 ADD PUSH2 0x4D0 DUP2 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x4E4 JUMPI DUP8 DUP2 SSTORE DUP5 ADD DUP8 SWAP1 SSTORE DUP5 SSTORE DUP3 PUSH2 0x467 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE DUP8 DUP8 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x31 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP1 SLOAD DUP4 SSTORE DUP2 ADD SLOAD SWAP2 ADD SSTORE DUP7 DUP4 DUP2 PUSH2 0x4BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x12 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP8 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP DUP6 DUP1 RETURN JUMPDEST POP DUP1 ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH2 0x558 JUMPI JUMPDEST POP PUSH2 0x47C JUMP JUMPDEST SWAP1 POP PUSH2 0x596 JUMPI DUP5 DUP8 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SLOAD PUSH1 0x78 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x52E JUMPI TIMESTAMP GT DUP9 PUSH2 0x552 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x32 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE DUP7 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x609 PUSH2 0x794 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x641 PUSH2 0x794 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18B JUMPI PUSH2 0x31C SWAP1 PUSH2 0x665 CALLDATASIZE PUSH2 0x7AF JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x2D4 PUSH2 0xD47 JUMP JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18B JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0x6B0 PUSH2 0xD24 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x75A JUMPI CALLER DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP4 DUP3 DUP2 KECCAK256 SSTORE DUP4 DUP1 DUP1 DUP1 DUP7 CALLER GAS CALL PUSH2 0x6E0 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0x718 JUMPI POP MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8FBBDA19F4A70036F6F585DC4160142A8FA2A20FFB9393D23274F78DE4E39888 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420726F79616C746965730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F20726F79616C7469657320746F20636C61696D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x7AA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x7AA JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x7AA JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x813 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x849 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x8A5 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x849 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD ISZERO PUSH2 0xB9D JUMPI PUSH1 0x5 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB59 JUMPI PUSH1 0x19 DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x19 SUB PUSH2 0xB44 JUMPI PUSH1 0x64 DUP1 SWAP3 DIV SWAP3 PUSH1 0x32 DUP2 MUL SWAP1 DUP2 DIV PUSH1 0x32 SUB PUSH2 0xB2F JUMPI DUP3 SWAP1 DIV PUSH1 0x0 SWAP4 DUP5 PUSH1 0x5 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP6 DUP1 DUP1 DUP1 DUP5 DUP7 PUSH1 0x3 SLOAD AND GAS CALL PUSH2 0x929 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0xAEB JUMPI DUP6 DUP1 DUP1 DUP1 SWAP4 DUP6 PUSH1 0x2 SLOAD AND GAS CALL PUSH2 0x943 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x3 SLOAD AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0xA9A JUMPI JUMPDEST POP PUSH2 0xA94 JUMPI CALLER DUP5 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xA51 JUMPI DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xA3E JUMPI DUP2 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xA2B JUMPI DIV SWAP3 CALLER DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x9A3 DUP6 DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP1 DUP1 DUP1 DUP7 CALLER GAS CALL PUSH2 0x9B4 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0x9EA JUMPI POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8FBBDA19F4A70036F6F585DC4160142A8FA2A20FFB9393D23274F78DE4E39888 PUSH1 0x20 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64206D696E7465722073686172650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x12 DUP4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E73206D696E74656420627920636C61696D616E7400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD AND CALLER EQ CODESIZE PUSH2 0x958 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64207472656173757279207368617265000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420666F756E64657220736861726500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20706F6F6C20726F79616C7469657320746F20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81D1BDAD95B9CC81B5A5B9D1959081E595D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD DUP1 PUSH2 0xC1D JUMPI JUMPDEST POP PUSH2 0xBEE CALLVALUE PUSH1 0x5 SLOAD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH32 0x1D5B077DB78404787D2283EB338D87091C7BEA1551C6A3B35853970955FE4E80 PUSH1 0x20 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x8B7 JUMPI PUSH2 0xC32 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xC3D PUSH2 0x829 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP4 MSTORE ADD SLOAD SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 DUP4 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B7 JUMPI TIMESTAMP GT ISZERO PUSH2 0xC65 JUMPI POP PUSH2 0xBE1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC7F CALLVALUE DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP2 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCDF JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0xE8F58C2C4663D8D9BAB1FCD91C3BEF339C90E81754E2D0EC7E888C5C0B56B08D SWAP5 SWAP4 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 PUSH2 0xCD4 CALLVALUE DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F726967696E616C206D696E746572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xD35 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH2 0x414C GAS LOG0 DUP4 0xC ISZERO 0xDF PUSH12 0xCE4D9F981A36E00D7BEF369C SWAP5 STOP TIMESTAMP 0xAB PUSH10 0x2B76242564736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"224:4498:36:-:0;;;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;-1:-1:-1;;;;;224:4498:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1138:10;1273:26:8;1269:95;;-1:-1:-1;224:4498:36;;;;;;;;;;;;;;;1138:10;;224:4498;;;;-1:-1:-1;224:4498:36;;;1138:10;;;224:4498;;3052:40:8;-1:-1:-1;3052:40:8;;1857:1:25;;;224:4498:36;1168:23;;;224:4498;;;;1237:20;224:4498;;;1237:20;224:4498;;;1267:18;224:4498;;;1267:18;224:4498;;;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;;;;;;;;;;;;1269:95:8;224:4498:36;;-1:-1:-1;;;1322:31:8;;-1:-1:-1;1322:31:8;;;224:4498:36;;;1322:31:8;224:4498:36;-1:-1:-1;224:4498:36;;;;;;-1:-1:-1;224:4498:36;;;;;-1:-1:-1;224:4498:36;;;;-1:-1:-1;;;;;224:4498:36;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1940,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_addresst_uint256":{"entryPoint":1967,"id":null,"parameterSlots":1,"returnSlots":3},"allocate_memory":{"entryPoint":2089,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":2218,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":2143,"id":null,"parameterSlots":0,"returnSlots":1},"fun":{"entryPoint":3032,"id":11580,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":3399,"id":2225,"parameterSlots":0,"returnSlots":0},"fun_claimPoolRoyalties_inner":{"entryPoint":2253,"id":null,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":3364,"id":3592,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_struct_TransferRecord__dyn":{"entryPoint":2009,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60406080815260049081361015610028575b5050361561001e57600080fd5b610026610bd8565b005b600091823560e01c8063069b7820146106965780631ebdeeab1461066f5780631efee9761461065157806333f6df8f146106195780633a602b4d146105e15780633a8de572146103ec5780634d853ee5146103c357806353234fb4146103a457806361d027b31461037b578063715018a61461032157806388b48eea146102ae5780638da5cb5b146102865780639d75170a14610248578063a2309ff81461022b578063cada1c001461020f578063d37b1f46146101ec578063d67f8d0b146101c1578063e7d0fd181461018f5763f2fde38b146101065750610011565b3461018b57602036600319011261018b5761011f610794565b90610128610d47565b6001600160a01b0391821692831561017557505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b503461018b57602036600319011261018b57358252600a6020908152918190205490516001600160a01b039091168152f35b83346101e957806003193601126101e9576101da610d24565b6101e26108cd565b6001805580f35b80fd5b50503461020b578160031936011261020b576020906005549051908152f35b5080fd5b50503461020b578160031936011261020b5760209051603c8152f35b503461018b578260031936011261018b5760209250549051908152f35b5082903461020b57602036600319011261020b5735906006548210156101e95750610272906107d9565b506001815491015482519182526020820152f35b50503461020b578160031936011261020b57905490516001600160a01b039091168152602090f35b50903461018b5761031c906102c2366107af565b92916102cc610d47565b6102d4610d47565b8652600a6020528186209060018060a01b031690816bffffffffffffffffffffffff60a01b8254161790558552600b60205284206103138282546108aa565b905582546108aa565b905580f35b83346101e957806003193601126101e95761033a610d47565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020b578160031936011261020b5760025490516001600160a01b039091168152602090f35b50503461020b578160031936011261020b576020906007549051908152f35b50503461020b578160031936011261020b5760035490516001600160a01b039091168152602090f35b83823461020b57602036600319011261020b57610407610d47565b61040f610829565b8135815260208101428152600691825491680100000000000000008310156105ce5761044160019384810186556107d9565b9290926105bc5751825551908201556007805460001991908281146105a9578301600755825b61046f578580f35b8354606481118015610546575b156105415782810181811161052e57610494906107d9565b50908254811561051b57906104a991066107d9565b9190916104e4578085918303610509575b505050835480156104f65782016104d0816107d9565b6104e4578781558401879055845582610467565b634e487b7160e01b8852878752602488fd5b634e487b7160e01b875260318652602487fd5b805483558101549101558683816104ba565b634e487b7160e01b895260128852602489fd5b634e487b7160e01b885260118752602488fd5b508580f35b50801580159081610558575b5061047c565b9050610596578487527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40546078810180911161052e57421188610552565b634e487b7160e01b875260328652602487fd5b634e487b7160e01b875260118652602487fd5b634e487b7160e01b8752868652602487fd5b634e487b7160e01b865260418552602486fd5b50503461020b57602036600319011261020b5760209181906001600160a01b03610609610794565b168152600b845220549051908152f35b50503461020b57602036600319011261020b5760209181906001600160a01b03610641610794565b1681526009845220549051908152f35b50903461018b5761031c90610665366107af565b92916102d4610d47565b503461018b57602036600319011261018b5760209282913581526008845220549051908152f35b50903461018b578260031936011261018b576106b0610d24565b33835260096020528083205491821561075a57338452600960205283828120558380808086335af16106e061085f565b50156107185750519081527f8fbbda19f4a70036f6f585dc4160142a8fa2a20ffb9393d23274f78de4e3988860203392a26001805580f35b6020606492519162461bcd60e51b8352820152601860248201527f4661696c656420746f2073656e6420726f79616c7469657300000000000000006044820152fd5b6020606492519162461bcd60e51b835282015260156024820152744e6f20726f79616c7469657320746f20636c61696d60581b6044820152fd5b600435906001600160a01b03821682036107aa57565b600080fd5b60609060031901126107aa57600435906024356001600160a01b03811681036107aa579060443590565b60065481101561081357600660005260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b604051906040820182811067ffffffffffffffff82111761084957604052565b634e487b7160e01b600052604160045260246000fd5b3d156108a55767ffffffffffffffff903d8281116108495760405192601f8201601f19908116603f01168401908111848210176108495760405282523d6000602084013e565b606090565b919082018092116108b757565b634e487b7160e01b600052601160045260246000fd5b6004805415610b9d57600554908115610b59576019820290828204601903610b445760648092049260328102908104603203610b2f578290046000938460055560018060a01b0390858080808486600354165af161092961085f565b5015610aeb57858080809385600254165af161094361085f565b5015610aa85780600354163314908115610a9a575b50610a9457338452600b6020526040842054908115610a5157818102918183041490151715610a3e578154908115610a2b5704923381526009602052604081206109a38582546108aa565b905580808086335af16109b461085f565b50156109ea5750506040519081527f8fbbda19f4a70036f6f585dc4160142a8fa2a20ffb9393d23274f78de4e3988860203392a2565b60206040519162461bcd60e51b8352820152601b60248201527f4661696c656420746f2073656e64206d696e74657220736861726500000000006044820152fd5b634e487b7160e01b855260128352602485fd5b634e487b7160e01b845260118252602484fd5b505060206040519162461bcd60e51b8352820152601c60248201527f4e6f20746f6b656e73206d696e74656420627920636c61696d616e74000000006044820152fd5b50505050565b905060025416331438610958565b505060206040519162461bcd60e51b8352820152601d60248201527f4661696c656420746f2073656e642074726561737572792073686172650000006044820152fd5b50505060206040519162461bcd60e51b8352820152601c60248201527f4661696c656420746f2073656e6420666f756e646572207368617265000000006044820152fd5b601182634e487b7160e01b6000525260246000fd5b601190634e487b7160e01b6000525260246000fd5b60649060206040519162461bcd60e51b8352820152601a60248201527f4e6f20706f6f6c20726f79616c7469657320746f20636c61696d0000000000006044820152fd5b60649060206040519162461bcd60e51b83528201526014602482015273139bc81d1bdad95b9cc81b5a5b9d1959081e595d60621b6044820152fd5b60065480610c1d575b50610bee346005546108aa565b6005557f1d5b077db78404787d2283eb338d87091c7bea1551c6a3b35853970955fe4e806020604051348152a1565b60001981019081116108b757610c32906107d9565b506001610c3d610829565b91805483520154906020918083830152603c81018091116108b757421115610c655750610be1565b519060008281526008825260408120610c7f3482546108aa565b9055828152600a825260408120546001600160a01b03168015610cdf57816040917fe8f58c2c4663d8d9bab1fcd91c3bef339c90e81754e2d0ec7e888c5c0b56b08d9493526009835220610cd43482546108aa565b9055604051348152a2565b60405162461bcd60e51b815260048101849052601760248201527f496e76616c6964206f726967696e616c206d696e7465720000000000000000006044820152606490fd5b600260015414610d35576002600155565b604051633ee5aeb560e01b8152600490fd5b6000546001600160a01b03163303610d5b57565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212201e61414c5aa0830c15df6bce4d9f981a36e00d7bef369c940042ab692b76242564736f6c63430008180033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x28 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26 PUSH2 0xBD8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69B7820 EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x1EBDEEAB EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x1EFEE976 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x33F6DF8F EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0x3A602B4D EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x3A8DE572 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x4D853EE5 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x53234FB4 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x88B48EEA EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x9D75170A EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xCADA1C00 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD37B1F46 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xD67F8D0B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xE7D0FD18 EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x106 JUMPI POP PUSH2 0x11 JUMP JUMPDEST CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18B JUMPI PUSH2 0x11F PUSH2 0x794 JUMP JUMPDEST SWAP1 PUSH2 0x128 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x175 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18B JUMPI CALLDATALOAD DUP3 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x1E9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E9 JUMPI PUSH2 0x1DA PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI CALLDATALOAD SWAP1 PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1E9 JUMPI POP PUSH2 0x272 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18B JUMPI PUSH2 0x31C SWAP1 PUSH2 0x2C2 CALLDATASIZE PUSH2 0x7AF JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x2CC PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0xD47 JUMP JUMPDEST DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 DUP7 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP5 KECCAK256 PUSH2 0x313 DUP3 DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x1E9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E9 JUMPI PUSH2 0x33A PUSH2 0xD47 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20B JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI PUSH2 0x407 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0x40F PUSH2 0x829 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x6 SWAP2 DUP3 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x441 PUSH1 0x1 SWAP4 DUP5 DUP2 ADD DUP7 SSTORE PUSH2 0x7D9 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x5BC JUMPI MLOAD DUP3 SSTORE MLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 NOT SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x5A9 JUMPI DUP4 ADD PUSH1 0x7 SSTORE DUP3 JUMPDEST PUSH2 0x46F JUMPI DUP6 DUP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x64 DUP2 GT DUP1 ISZERO PUSH2 0x546 JUMPI JUMPDEST ISZERO PUSH2 0x541 JUMPI DUP3 DUP2 ADD DUP2 DUP2 GT PUSH2 0x52E JUMPI PUSH2 0x494 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST POP SWAP1 DUP3 SLOAD DUP2 ISZERO PUSH2 0x51B JUMPI SWAP1 PUSH2 0x4A9 SWAP2 MOD PUSH2 0x7D9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x4E4 JUMPI DUP1 DUP6 SWAP2 DUP4 SUB PUSH2 0x509 JUMPI JUMPDEST POP POP POP DUP4 SLOAD DUP1 ISZERO PUSH2 0x4F6 JUMPI DUP3 ADD PUSH2 0x4D0 DUP2 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x4E4 JUMPI DUP8 DUP2 SSTORE DUP5 ADD DUP8 SWAP1 SSTORE DUP5 SSTORE DUP3 PUSH2 0x467 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE DUP8 DUP8 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x31 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP1 SLOAD DUP4 SSTORE DUP2 ADD SLOAD SWAP2 ADD SSTORE DUP7 DUP4 DUP2 PUSH2 0x4BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x12 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP8 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP DUP6 DUP1 RETURN JUMPDEST POP DUP1 ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH2 0x558 JUMPI JUMPDEST POP PUSH2 0x47C JUMP JUMPDEST SWAP1 POP PUSH2 0x596 JUMPI DUP5 DUP8 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SLOAD PUSH1 0x78 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x52E JUMPI TIMESTAMP GT DUP9 PUSH2 0x552 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x32 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE DUP7 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x609 PUSH2 0x794 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20B JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x641 PUSH2 0x794 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18B JUMPI PUSH2 0x31C SWAP1 PUSH2 0x665 CALLDATASIZE PUSH2 0x7AF JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x2D4 PUSH2 0xD47 JUMP JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18B JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0x6B0 PUSH2 0xD24 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x75A JUMPI CALLER DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP4 DUP3 DUP2 KECCAK256 SSTORE DUP4 DUP1 DUP1 DUP1 DUP7 CALLER GAS CALL PUSH2 0x6E0 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0x718 JUMPI POP MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8FBBDA19F4A70036F6F585DC4160142A8FA2A20FFB9393D23274F78DE4E39888 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420726F79616C746965730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F20726F79616C7469657320746F20636C61696D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x7AA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x7AA JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x7AA JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x813 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x849 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x8A5 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 RETURNDATASIZE DUP3 DUP2 GT PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP5 ADD SWAP1 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x849 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8B7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD ISZERO PUSH2 0xB9D JUMPI PUSH1 0x5 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB59 JUMPI PUSH1 0x19 DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x19 SUB PUSH2 0xB44 JUMPI PUSH1 0x64 DUP1 SWAP3 DIV SWAP3 PUSH1 0x32 DUP2 MUL SWAP1 DUP2 DIV PUSH1 0x32 SUB PUSH2 0xB2F JUMPI DUP3 SWAP1 DIV PUSH1 0x0 SWAP4 DUP5 PUSH1 0x5 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP6 DUP1 DUP1 DUP1 DUP5 DUP7 PUSH1 0x3 SLOAD AND GAS CALL PUSH2 0x929 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0xAEB JUMPI DUP6 DUP1 DUP1 DUP1 SWAP4 DUP6 PUSH1 0x2 SLOAD AND GAS CALL PUSH2 0x943 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x3 SLOAD AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0xA9A JUMPI JUMPDEST POP PUSH2 0xA94 JUMPI CALLER DUP5 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xA51 JUMPI DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xA3E JUMPI DUP2 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xA2B JUMPI DIV SWAP3 CALLER DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x9A3 DUP6 DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP1 DUP1 DUP1 DUP7 CALLER GAS CALL PUSH2 0x9B4 PUSH2 0x85F JUMP JUMPDEST POP ISZERO PUSH2 0x9EA JUMPI POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8FBBDA19F4A70036F6F585DC4160142A8FA2A20FFB9393D23274F78DE4E39888 PUSH1 0x20 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64206D696E7465722073686172650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x12 DUP4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E73206D696E74656420627920636C61696D616E7400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD AND CALLER EQ CODESIZE PUSH2 0x958 JUMP JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64207472656173757279207368617265000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420666F756E64657220736861726500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20706F6F6C20726F79616C7469657320746F20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81D1BDAD95B9CC81B5A5B9D1959081E595D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x6 SLOAD DUP1 PUSH2 0xC1D JUMPI JUMPDEST POP PUSH2 0xBEE CALLVALUE PUSH1 0x5 SLOAD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH32 0x1D5B077DB78404787D2283EB338D87091C7BEA1551C6A3B35853970955FE4E80 PUSH1 0x20 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x8B7 JUMPI PUSH2 0xC32 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xC3D PUSH2 0x829 JUMP JUMPDEST SWAP2 DUP1 SLOAD DUP4 MSTORE ADD SLOAD SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 DUP4 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8B7 JUMPI TIMESTAMP GT ISZERO PUSH2 0xC65 JUMPI POP PUSH2 0xBE1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC7F CALLVALUE DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP2 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xCDF JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0xE8F58C2C4663D8D9BAB1FCD91C3BEF339C90E81754E2D0EC7E888C5C0B56B08D SWAP5 SWAP4 MSTORE PUSH1 0x9 DUP4 MSTORE KECCAK256 PUSH2 0xCD4 CALLVALUE DUP3 SLOAD PUSH2 0x8AA JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F726967696E616C206D696E746572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xD35 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH2 0x414C GAS LOG0 DUP4 0xC ISZERO 0xDF PUSH12 0xCE4D9F981A36E00D7BEF369C SWAP5 STOP TIMESTAMP 0xAB PUSH10 0x2B76242564736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"224:4498:36:-:0;;;;;;;;;;;;-1:-1:-1;224:4498:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;;;:::i;:::-;1500:62:8;;;:::i;:::-;-1:-1:-1;;;;;224:4498:36;;;;2627:22:8;;2623:91;;-1:-1:-1;;224:4498:36;;-1:-1:-1;;;;;;224:4498:36;;;;;;;3052:40:8;224:4498:36;;3052:40:8;224:4498:36;;2623:91:8;224:4498:36;-1:-1:-1;;;2672:31:8;;;;;224:4498:36;;;;;2672:31:8;224:4498:36;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;;;;784:50;224:4498;;;;;;;;;;;-1:-1:-1;;;;;224:4498:36;;;;;;;;;;;;;;;;;;;2466:103:25;;:::i;:::-;2531:1;;:::i;:::-;1857;224:4498:36;;;;;;;;;;;;;;;;;;;;;;;463:28;224:4498;;;;;;;;;;;;;;;;;;;;;;;;;;;;358:9;224:4498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;;;584:39;224:4498;584:39;;;;;;;;;:::i;:::-;224:4498;;;;584:39;;224:4498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;224:4498:36;;;;;;;;;;;;;;4368:27;224:4498;;;;:::i;:::-;1500:62:8;;;;:::i;:::-;;;:::i;:::-;224:4498:36;;4276:15;224:4498;;;;;;;;;;;;;;;;;;;;;;;;;4319:15;224:4498;;;;4319:39;224:4498;;;4319:39;:::i;:::-;224:4498;;;;4368:27;:::i;:::-;224:4498;;;;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;224:4498:36;;-1:-1:-1;;;;;;224:4498:36;;;;;;-1:-1:-1;;;;;224:4498:36;3052:40:8;224:4498:36;;3052:40:8;224:4498:36;;;;;;;;;;;;;;;;374:23;224:4498;;;-1:-1:-1;;;;;224:4498:36;;;;;;;;;;;;;;;;;;;;;;;;629:28;224:4498;;;;;;;;;;;;;;;;;;;;;403:22;224:4498;;;-1:-1:-1;;;;;224:4498:36;;;;;;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;1500:62:8;;:::i;:::-;224:4498:36;;:::i;:::-;;;;;;3778:40;;3802:15;224:4498;;3757:15;224:4498;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3829:15;224:4498;;-1:-1:-1;;224:4498:36;3829:15;224:4498;;;;;;;3829:15;224:4498;;;;;;;;3854:301;224:4498;;3886:3;3861:28;;:131;;;;3854:301;3861:131;;;224:4498;;;;;;;;4066:43;;;:::i;:::-;224:4498;;;;;;;;;4008:55;224:4498;;4008:55;:::i;:::-;224:4498;;;;;;;;;;;;3854:301;224:4498;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3854:301;;224:4498;-1:-1:-1;;;224:4498:36;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;3861:131;;224:4498;;;3861:131;3894:26;;;;;:97;;;;3861:131;;;;3894:97;224:4498;;;;;;;3942:28;224:4498;;;;;;;;;3802:15;3924:67;3894:97;;;224:4498;-1:-1:-1;;;224:4498:36;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;;;;;-1:-1:-1;;;;;224:4498:36;;:::i;:::-;;;;840:50;224:4498;;;;;;;;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;;;;;-1:-1:-1;;;;;224:4498:36;;:::i;:::-;;;;728:50;224:4498;;;;;;;;;;;;;;;;4368:27;224:4498;;;;:::i;:::-;1500:62:8;;;;:::i;224:4498:36:-;;;;;;;-1:-1:-1;;224:4498:36;;;;;;;;;;;664:58;224:4498;;;;;;;;;;;;;;;;;;;;;;;;2466:103:25;;:::i;:::-;2179:10:36;224:4498;;2163:15;224:4498;;;;;;2208:10;;;224:4498;;2179:10;224:4498;;2163:15;224:4498;;;;;;;2179:10;;;;;;2311:34;;;;:::i;:::-;;224:4498;;;;;;;;2411:36;224:4498;2179:10;2411:36;;1857:1:25;224:4498:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;-1:-1:-1;;;;;224:4498:36;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;224:4498:36;;;;;;;;;;:::o;:::-;3757:15;224:4498;;;;;;3757:15;-1:-1:-1;224:4498:36;;;;;;-1:-1:-1;224:4498:36;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;224:4498:36;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;224:4498:36;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2460:1221;2530:11;224:4498;;2530:15;224:4498;;2601:13;224:4498;2632:14;;;224:4498;;2724:2;224:4498;;;;;;2724:2;224:4498;;;2729:3;224:4498;;;;2833:2;224:4498;;;;;2833:2;224:4498;;;;;;-1:-1:-1;224:4498:36;;2601:13;224:4498;;;;;;;;;;;;;2903:7;224:4498;;2903:37;;;;:::i;:::-;;224:4498;;;;;;;;;3036:8;224:4498;;3036:39;;;;:::i;:::-;;224:4498;;;;2903:7;224:4498;;3154:10;:21;:47;;;;;2460:1221;3150:84;;;3154:10;224:4498;;3266:15;224:4498;;;;;;3311:16;;;224:4498;;;;;;;;;;;;;;;;;;;;;;;;3154:10;;224:4498;;3445:15;224:4498;;;;;3445:42;224:4498;;;3445:42;:::i;:::-;224:4498;;3154:10;;;;;3519:39;;;;:::i;:::-;;224:4498;;;;;;;;;;3633:41;224:4498;3154:10;3633:41;;2460:1221::o;224:4498::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:84;3217:7;;;;:::o;3154:47::-;224:4498;;3036:8;224:4498;;3154:10;3179:22;3154:47;;;224:4498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;224:4498:36;;;-1:-1:-1;224:4498:36;;;;;;;-1:-1:-1;224:4498:36;;;-1:-1:-1;224:4498:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;224:4498:36;;;;;1298:784;1375:15;224:4498;1375:26;1371:634;;1298:784;1352:9;2014:23;1352:9;2014:23;224:4498;2014:23;:::i;:::-;;224:4498;2052:23;224:4498;;;1352:9;224:4498;;2052:23;1298:784::o;1371:634::-;-1:-1:-1;;224:4498:36;;;;;;;1454:43;;;:::i;:::-;224:4498;1495:1;224:4498;;:::i;:::-;;;;;;;;;;;;;;;;358:9;224:4498;;;;;;;1515:15;:58;;1511:484;;1371:634;;;1511:484;224:4498;1400:1;;224:4498;;;1649:23;224:4498;;;;;1649:42;1352:9;224:4498;;1649:42;:::i;:::-;224:4498;;;;;1734:15;224:4498;;;;;;-1:-1:-1;;;;;224:4498:36;1784:28;;224:4498;;;;;1922:34;224:4498;;;1858:15;224:4498;;;1858:41;1352:9;224:4498;;1858:41;:::i;:::-;224:4498;;;;1352:9;224:4498;;1922:34;1974:7::o;224:4498::-;;;-1:-1:-1;;;224:4498:36;;;;;;;;;;;;;;;;;;;;;2575:307:25;1899:1;2702:7;224:4498:36;2702:18:25;2698:86;;1899:1;2702:7;224:4498:36;2575:307:25:o;2698:86::-;224:4498:36;;-1:-1:-1;;;2743:30:25;;;;;1796:162:8;1710:6;224:4498:36;-1:-1:-1;;;;;224:4498:36;735:10:22;1855:23:8;1851:101;;1796:162::o;1851:101::-;224:4498:36;;-1:-1:-1;;;1901:40:8;;735:10:22;1901:40:8;;;224:4498:36;;;1901:40:8"},"methodIdentifiers":{"ROYALTY_WINDOW()":"cada1c00","claimPoolRoyalties()":"d67f8d0b","claimRoyalties()":"069b7820","founder()":"4d853ee5","mintAndRecord(uint256,address,uint256)":"88b48eea","mintedPerWallet(address)":"3a602b4d","originalMinters(uint256)":"e7d0fd18","owner()":"8da5cb5b","poolRoyalties()":"d37b1f46","recentTransfers(uint256)":"9d75170a","recordTransfer(uint256)":"3a8de572","renounceOwnership()":"715018a6","royaltyBalances(address)":"33f6df8f","royaltyBalancesPerToken(uint256)":"1ebdeeab","setOriginalMinter(uint256,address,uint256)":"1efee976","totalMinted()":"a2309ff8","transferIndex()":"53234fb4","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_founder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltiesClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltiesPooled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltiesReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ROYALTY_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPoolRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"mintAndRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedPerWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"originalMinters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolRoyalties\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recentTransfers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"recordTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"royaltyBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"royaltyBalancesPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"setOriginalMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ApeBeatsRoyalties.sol\":\"ApeBeatsRoyalties\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ApeBeatsRoyalties.sol\":{\"keccak256\":\"0x66560a4a3825b88101765f8e06960f9a20d44c88eb6754acc0cd0e3e849b8325\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f952ae3b309053c86efa0dbb4a9300bfdd6d18d48768227af473e3b72e7615b2\",\"dweb:/ipfs/QmcmVCUNj7g7yyLEvWgFJg3TshQeBxDndS3NBNjtyLVcYJ\"]}},\"version\":1}"}},"contracts/LocalProxy.sol":{"LocalProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":370,"id":null,"parameterSlots":1,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":407,"id":3301,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523461016d576102806020813803918261001c81610172565b93849283398101031261016d57516001600160a01b03811680820361016d576040516001600160401b0392906020810190848211818310176101575781604052600093848252833b1561013f577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a2519081156101355783918291845af4903d15610127573d93841161011357610103936100f3601f8201601f1916602001610172565b908152809360203d92013e610197565b505b604051608590816101fb8239f35b634e487b7160e01b83526041600452602483fd5b610103935060609250610197565b5050505050610105565b60249060405190634c9c8ce360e01b82526004820152fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761015757604052565b906101be57508051156101ac57602081519101fd5b60405163d6bda27560e01b8152600490fd5b815115806101f1575b6101cf575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156101c756fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e15604b573d90f35b3d90fdfea2646970667358221220fe2f974edf276bcc474e2d941f967e24c9877a3d845ff6f8546ef597ff0e13c564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16D JUMPI PUSH2 0x280 PUSH1 0x20 DUP2 CODESIZE SUB SWAP2 DUP3 PUSH2 0x1C DUP2 PUSH2 0x172 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x16D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x16D JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 DUP5 DUP3 GT DUP2 DUP4 LT OR PUSH2 0x157 JUMPI DUP2 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP4 DUP5 DUP3 MSTORE DUP4 EXTCODESIZE ISZERO PUSH2 0x13F JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP6 DUP1 LOG2 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x135 JUMPI DUP4 SWAP2 DUP3 SWAP2 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x127 JUMPI RETURNDATASIZE SWAP4 DUP5 GT PUSH2 0x113 JUMPI PUSH2 0x103 SWAP4 PUSH2 0xF3 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST SWAP1 DUP2 MSTORE DUP1 SWAP4 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x197 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x85 SWAP1 DUP2 PUSH2 0x1FB DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x103 SWAP4 POP PUSH1 0x60 SWAP3 POP PUSH2 0x197 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x157 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1BE JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1AC JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1F1 JUMPI JUMPDEST PUSH2 0x1CF JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1C7 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2F SWAP8 0x4E 0xDF 0x27 PUSH12 0xCC474E2D941F967E24C9877A RETURNDATASIZE DUP5 PUSH0 0xF6 0xF8 SLOAD PUSH15 0xF597FF0E13C564736F6C6343000818 STOP CALLER ","sourceMap":"123:99:37:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;123:99:37;;;;;;;;;-1:-1:-1;;;;;123:99:37;;;;;;;;;;;;;;;;;;-1:-1:-1;123:99:37;;;;1748:29:13;;:34;1744:119;;811:66;;;-1:-1:-1;;;;;;811:66:13;;;;;2407:36;;;;123:99:37;;2458:15:13;;123:99:37;;4065:25:20;;;;;;;;123:99:37;;;;;;;;;;4107:55:20;;123:99:37;;;;-1:-1:-1;;123:99:37;;;;:::i;:::-;;;;;;;;;;;4107:55:20;:::i;:::-;;2454:148:13;123:99:37;;;;;;;;;;-1:-1:-1;;;123:99:37;;;;;;;;;4107:55:20;;-1:-1:-1;123:99:37;;-1:-1:-1;4107:55:20;:::i;2454:148:13:-;;;;;;;;1744:119;123:99:37;;;;1805:47:13;;;;;;;;;123:99:37;1805:47:13;123:99:37;;;;-1:-1:-1;123:99:37;;;;;-1:-1:-1;123:99:37;;-1:-1:-1;123:99:37;;;;;;;;;-1:-1:-1;;123:99:37;;;-1:-1:-1;;;;;123:99:37;;;;;;;;;;:::o;4437:582:20:-;;4609:8;;-1:-1:-1;123:99:37;;5690:21:20;:17;;5815:105;;;;;;5686:301;123:99:37;;-1:-1:-1;;;5957:19:20;;;;;4605:408;123:99:37;;4857:22:20;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;123:99:37;;-1:-1:-1;;;4933:24:20;;-1:-1:-1;;;;;123:99:37;;;4933:24:20;;;123:99:37;;;4933:24:20;4857:49;4883:18;;;:23;4857:49;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e15604b573d90f35b3d90fdfea2646970667358221220fe2f974edf276bcc474e2d941f967e24c9877a3d845ff6f8546ef597ff0e13c564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2F SWAP8 0x4E 0xDF 0x27 PUSH12 0xCC474E2D941F967E24C9877A RETURNDATASIZE DUP5 PUSH0 0xF6 0xF8 SLOAD PUSH15 0xF597FF0E13C564736F6C6343000818 STOP CALLER ","sourceMap":"123:99:37:-:0;;;811:66:13;;-1:-1:-1;;;;;;;;;;;811:66:13;1019:819:14;-1:-1:-1;;1019:819:14;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LocalProxy.sol\":\"LocalProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/LocalProxy.sol\":{\"keccak256\":\"0xfdda1ccac11689666d723f5788b4360fb6012eeea27b507e4ce31f7b9f04376d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d0b4a35f483b251dca147c6fce49f956bbf9786aab52ca7da8df3130df32ccf\",\"dweb:/ipfs/QmZwZgFX83kAaVS2UnKPXWeBDCnVH4KiEyJDS3ZPZG3znq\"]}},\"version\":1}"}}}}}